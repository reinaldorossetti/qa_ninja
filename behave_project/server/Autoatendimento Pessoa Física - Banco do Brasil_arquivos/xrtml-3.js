window.xRTML = null; (function(b, a) { 	(function(c, f) {	var e = function(j, g) {	if (!g) {	g = function() {}	}	if (j.length === 0) {	return g()	}	var h = 0;	var i = [];	var k = function() {	j[h](function(l) {	i[h] = l;	if (++h == j.length) {	if (g) {	g.apply(i, i)	}	} else {	k()	}	})	};	k()	};	var d = function(j, g) {	if (!g) {	g = function() {}	}	if (j.length === 0) {	return g()	}	var l = 0;	var h = 0;	var i = [];	var k = function() {	j[l]((function(m) {	return function(n) {	i[m] = n;	if (++h == j.length) {	if (g) {	g.apply(i, i)	}	return	}	}	})(l));	if (++l != j.length) {	k()	}	};	k()	};	c.series = e;	c.parallel = d 	})(b.Async = b.Async || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, f) {	var d = {	bind: function(g, h) {	if (g.bind) {	g.bind(h)	} else {	for (var i in h) {	if (g.addEventListener) {	g.addEventListener(i, h[i], false)	} else {	g.attachEvent ? g.attachEvent("on" + i, h[i]) : g[i] = h[i]	}	}	}	},	unbind: function(g, h) {	if (g.unbind) {	g.unbind(h)	} else {	for (var i in h) {	if (g.removeEventListener) {	g.removeEventListener(i, h[i], false)	} else {	if (g.detachEvent) {	g.detachEvent("on" + i, h[i])	} else {	if (g[i]) {	delete g[i]	}	}	}	}	}	}	};	var e = function() {	var g = {};	var h = {};	this.bind = function(i) {	for (var j in i) {	if (typeof i[j] === "function") {	if (!g[j]) {	g[j] = []	}	g[j].push(i[j])	}	}	};	this.once = function(i) {	var j = this;	for (var k in i) {	if (typeof i[k] === "function") {	if (!h[k]) {	h[k] = []	}	h[k].push(i[k])	}	}	};	this.unbind = function(j) {	for (var m in j) {	if (Object.prototype.toString.call(g[m]) === "[object Array]") {	for (var k = 0, l = g[m].length; k < l; k++) {	if (g[m][k] === j[m]) {	g[m].splice(k, 1);	break	}	}	}	if (Object.prototype.toString.call(h[m]) === "[object Array]") {	for (var k = 0, l = h[m].length; k < l; k++) {	if (h[m][k] === j[m]) {	h[m].splice(k, 1);	break	}	}	}	}	};	this.unbindAll = function(i) {	if (!i) {	delete g;	g = {};	delete h;	h = {}	}	if (i) {	g[i] = f;	h[i] = f	}	};	this.fire = function(j) {	var k;	for (var r in j) {	k = {	type: r,	target: this	};	for (var n in j[r]) {	var q = j[r][n];	k[n] = q	}	var p = [];	if (Object.prototype.toString.call(g[r]) === "[object Array]") {	for (var m = 0; m < g[r].length; m++) {	p.push((function(i, s) {	return function(t) {	s.call(i, k);	t()	}	})(this, g[r][m]))	}	}	if (Object.prototype.toString.call(h[r]) === "[object Array]") {	do {	var o = h[r].shift();	if (o) {	var l = (function(i, s) {	return function(t) {	s.call(i, k);	t()	}	})(this, o);	p.push(l)	}	} while (h[r].length > 0)	}	b.Async.parallel(p)	}	};	this.listeners = function(j) {	var i = [];	if (Object.prototype.toString.call(g[j]) === "[object Array]") {	i = i.concat(g[j])	}	if (Object.prototype.toString.call(h[j]) === "[object Array]") {	i = i.concat(h[j])	}	return i	}	};	c.bind = d.bind;	c.unbind = d.unbind;	c.extend = function(i) {	var h = new e();	for (var g in h) {	i[g] = h[g]	}	} 	})(b.Event = b.Event || {}) })(window.xRTML = window.xRTML || {}); (function(a) { 	(function(c, b) {	c.Event.extend(c);	c.version = "3.2.7";	c.lastestBuild = "18-03-2015 10:32:09";	c.domLoaded = function() {	return (document.readyState == "loaded" || document.readyState == "complete")	};	c.isReady = false;	c.isLoaded = false;	c.ready = function(d) {	!c.isReady ? c.bind({	ready: d	}) : d()	};	c.load = function(d) {	!c.isLoaded ? c.bind({	load: d	}) : d()	} 	})(a.xRTML = a.xRTML || {}) })(window); (function(b, a) { 	(function(aF, aD) {	var I, az, k, D, F, L, n, T, aw, ap, x, w, y, ab, aa, P, q, C = "sizzle" + -(new Date()),	V = b.document,	v = 0,	z = 0,	m = s(),	aA = s(),	o = s(),	G = false,	ax = function(e, i) {	if (e === i) {	G = true;	return 0	}	return 0	},	ay = typeof aD,	R = 1 << 31,	H = ({}).hasOwnProperty,	f = [],	U = f.pop,	Y = f.push,	X = f.push,	av = f.slice,	K = f.indexOf || function(e) {	var aG = 0,	aH = this.length;	for (; aG < aH; aG++) {	if (this[aG] === e) {	return aG	}	}	return -1	},	j = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",	aE = "[\\x20\\t\\r\\n\\f]",	l = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",	J = l.replace("w", "w#"),	h = "\\[" + aE + "*(" + l + ")" + aE + "*(?:([*^$|!~]?=)" + aE + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + J + ")|)|)" + aE + "*\\]",	W = ":(" + l + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + h.replace(3, 8) + ")*)|.*)\\)|)",	am = new RegExp("^" + aE + "+|((?:^|[^\\\\])(?:\\\\.)*)" + aE + "+$", "g"),	ad = new RegExp("^" + aE + "*," + aE + "*"),	ac = new RegExp("^" + aE + "*([>+~]|" + aE + ")" + aE + "*"),	al = new RegExp(aE + "*[+~]"),	Z = new RegExp("=" + aE + "*([^\\]'\"]*)" + aE + "*\\]", "g"),	aj = new RegExp(W),	ag = new RegExp("^" + J + "$"),	Q = {	ID: new RegExp("^#(" + l + ")"),	CLASS: new RegExp("^\\.(" + l + ")"),	TAG: new RegExp("^(" + l.replace("w", "w*") + ")"),	ATTR: new RegExp("^" + h),	PSEUDO: new RegExp("^" + W),	CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + aE + "*(even|odd|(([+-]|)(\\d*)n|)" + aE + "*(?:([+-]|)" + aE + "*(\\d+)|))" + aE + "*\\)|)", "i"),	bool: new RegExp("^(?:" + j + ")$", "i"),	needsContext: new RegExp("^" + aE + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + aE + "*((?:-\\d)?\\d*)" + aE + "*\\)|)(?=[^-]|$)", "i")	},	ai = /^[^{]+\{\s*\[native \w/,	ak = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,	ah = /^(?:input|select|textarea|button)$/i,	af = /^h\d$/i,	ae = /'|\\/g,	an = new RegExp("\\\\([\\da-f]{1,6}" + aE + "?|(" + aE + ")|.)", "ig"),	E = function(e, i, aG) {	var aH = "0x" + i - 65536;	return aH !== aH || aG ? i : aH < 0 ? String.fromCharCode(aH + 65536) : String.fromCharCode(aH >> 10 | 55296, aH & 1023 | 56320)	};	try {	X.apply((f = av.call(V.childNodes)), V.childNodes);	f[V.childNodes.length].nodeType	} catch (A) {	X = {	apply: f.length ? function(i, e) {	Y.apply(i, av.call(e))	} : function(aI, e) {	var aH = aI.length,	aG = 0;	while ((aI[aH++] = e[aG++])) {}	aI.length = aH - 1	}	}	}	function au(aT, e, aR, aS) {	var aK, aG, aJ, aO, aI, aH, aP, aN, aL, aM;	if ((e ? e.ownerDocument || e : V) !== x) {	ap(e)	}	e = e || x;	aR = aR || [];	if (!aT || typeof aT !== "string") {	return aR	}	if ((aO = e.nodeType) !== 1 && aO !== 9) {	return []	}	if (y && !aS) {	if ((aK = ak.exec(aT))) {	if ((aJ = aK[1])) {	if (aO === 9) {	aG = e.getElementById(aJ);	if (aG && aG.parentNode) {	if (aG.id === aJ) {	aR.push(aG);	return aR	}	} else {	return aR	}	} else {	if (e.ownerDocument && (aG = e.ownerDocument.getElementById(aJ)) && q(e, aG) && aG.id === aJ) {	aR.push(aG);	return aR	}	}	} else {	if (aK[2]) {	X.apply(aR, e.getElementsByTagName(aT));	return aR	} else {	if ((aJ = aK[3]) && az.getElementsByClassName && e.getElementsByClassName) {	X.apply(aR, e.getElementsByClassName(aJ));	return aR	}	}	}	}	if (az.qsa && (!ab || !ab.test(aT))) {	aN = aP = C;	aL = e;	aM = aO === 9 && aT;	if (aO === 1 && e.nodeName.toLowerCase() !== "object") {	aH = aB(aT);	if ((aP = e.getAttribute("id"))) {	aN = aP.replace(ae, "\\$&")	} else {	e.setAttribute("id", aN)	}	aN = "[id='" + aN + "'] ";	aI = aH.length;	while (aI--) {	aH[aI] = aN + aC(aH[aI])	}	aL = al.test(aT) && e.parentNode || e;	aM = aH.join(",")	}	if (aM) {	try {	X.apply(aR, aL.querySelectorAll(aM));	return aR	} catch (aQ) {} finally {	if (!aP) {	e.removeAttribute("id")	}	}	}	}	}	return ao(aT.replace(am, "$1"), e, aR, aS)	}	function s() {	var i = [];	function e(aG, aH) {	if (i.push(aG += " ") > D.cacheLength) {	delete e[i.shift()]	}	return (e[aG] = aH)	}	return e	}	function M(e) {	e[C] = true;	return e	}	function g(aH) {	var i = x.createElement("div");	try {	return !!aH(i)	} catch (aG) {	return false	} finally {	if (i.parentNode) {	i.parentNode.removeChild(i)	}	i = null	}	}	function d(aG, aH) {	var e = aG.split("|"),	aI = aG.length;	while (aI--) {	D.attrHandle[e[aI]] = aH	}	}	function at(e, i) {	var aG = i && e,	aH = aG && e.nodeType === 1 && i.nodeType === 1 && (~i.sourceIndex || R) - (~e.sourceIndex || R);	if (aH) {	return aH	}	if (aG) {	while ((aG = aG.nextSibling)) {	if (aG === i) {	return -1	}	}	}	return e ? 1 : -1	}	function t(e) {	return function(i) {	var aG = i.nodeName.toLowerCase();	return aG === "input" && i.type === e	}	}	function r(e) {	return function(i) {	var aG = i.nodeName.toLowerCase();	return (aG === "input" || aG === "button") && i.type === e	}	}	function u(e) {	return M(function(i) {	i = +i;	return M(function(aK, aI) {	var aH, aJ = e([], aK.length, i),	aG = aJ.length;	while (aG--) {	if (aK[(aH = aJ[aG])]) {	aK[aH] = !(aI[aH] = aK[aH])	}	}	})	})	}	L = au.isXML = function(i) {	var e = i && (i.ownerDocument || i).documentElement;	return e ? e.nodeName !== "HTML" : false	};	az = au.support = {};	ap = au.setDocument = function(i) {	var e = i ? i.ownerDocument || i : V,	aG = e.defaultView;	if (e === x || e.nodeType !== 9 || !e.documentElement) {	return x	}	x = e;	w = e.documentElement;	y = !L(e);	if (aG && aG.attachEvent && aG !== aG.top) {	aG.attachEvent("onbeforeunload", function() {	ap()	})	}	az.attributes = g(function(aH) {	aH.className = "i";	return !aH.getAttribute("className")	});	az.getElementsByTagName = g(function(aH) {	aH.appendChild(e.createComment(""));	return !aH.getElementsByTagName("*").length	});	az.getElementsByClassName = g(function(aH) {	aH.innerHTML = "<div class='a'></div><div class='a i'></div>";	aH.firstChild.className = "i";	return aH.getElementsByClassName("i").length === 2	});	az.getById = g(function(aH) {	w.appendChild(aH).id = C;	return !e.getElementsByName || !e.getElementsByName(C).length	});	if (az.getById) {	D.find.ID = function(aI, aH) {	if (typeof aH.getElementById !== ay && y) {	var aJ = aH.getElementById(aI);	return aJ && aJ.parentNode ? [aJ] : []	}	};	D.filter.ID = function(aI) {	var aH = aI.replace(an, E);	return function(aJ) {	return aJ.getAttribute("id") === aH	}	}	} else {	delete D.find.ID;	D.filter.ID = function(aI) {	var aH = aI.replace(an, E);	return function(aJ) {	var aK = typeof aJ.getAttributeNode !== ay && aJ.getAttributeNode("id");	return aK && aK.value === aH	}	}	}	D.find.TAG = az.getElementsByTagName ? function(aI, aH) {	if (typeof aH.getElementsByTagName !== ay) {	return aH.getElementsByTagName(aI)	}	} : function(aL, aH) {	var aI, aM = [],	aJ = 0,	aK = aH.getElementsByTagName(aL);	if (aL === "*") {	while ((aI = aK[aJ++])) {	if (aI.nodeType === 1) {	aM.push(aI)	}	}	return aM	}	return aK	};	D.find.CLASS = az.getElementsByClassName && function(aH, aI) {	if (typeof aI.getElementsByClassName !== ay && y) {	return aI.getElementsByClassName(aH)	}	};	aa = [];	ab = [];	if ((az.qsa = ai.test(e.querySelectorAll))) {	g(function(aH) {	aH.innerHTML = "<select><option selected=''></option></select>";	if (!aH.querySelectorAll("[selected]").length) {	ab.push("\\[" + aE + "*(?:value|" + j + ")")	}	if (!aH.querySelectorAll(":checked").length) {	ab.push(":checked")	}	});	g(function(aH) {	var aI = e.createElement("input");	aI.setAttribute("type", "hidden");	aH.appendChild(aI).setAttribute("t", "");	if (aH.querySelectorAll("[t^='']").length) {	ab.push("[*^$]=" + aE + "*(?:''|\"\")")	}	if (!aH.querySelectorAll(":enabled").length) {	ab.push(":enabled", ":disabled")	}	aH.querySelectorAll("*,:x");	ab.push(",.*:")	})	}	if ((az.matchesSelector = ai.test((P = w.webkitMatchesSelector || w.mozMatchesSelector || w.oMatchesSelector || w.msMatchesSelector)))) {	g(function(aH) {	az.disconnectedMatch = P.call(aH, "div");	P.call(aH, "[s!='']:x");	aa.push("!=", W)	})	}	ab = ab.length && new RegExp(ab.join("|"));	aa = aa.length && new RegExp(aa.join("|"));	q = ai.test(w.contains) || w.compareDocumentPosition ? function(aH, aJ) {	var aI = aH.nodeType === 9 ? aH.documentElement : aH,	aK = aJ && aJ.parentNode;	return aH === aK || !!(aK && aK.nodeType === 1 && (aI.contains ? aI.contains(aK) : aH.compareDocumentPosition && aH.compareDocumentPosition(aK) & 16))	} : function(aH, aI) {	if (aI) {	while ((aI = aI.parentNode)) {	if (aI === aH) {	return true	}	}	}	return false	};	ax = w.compareDocumentPosition ? function(aH, aI) {	if (aH === aI) {	G = true;	return 0	}	var aJ = aI.compareDocumentPosition && aH.compareDocumentPosition && aH.compareDocumentPosition(aI);	if (aJ) {	if (aJ & 1 || (!az.sortDetached && aI.compareDocumentPosition(aH) === aJ)) {	if (aH === e || q(V, aH)) {	return -1	}	if (aI === e || q(V, aI)) {	return 1	}	return aw ? (K.call(aw, aH) - K.call(aw, aI)) : 0	}	return aJ & 4 ? -1 : 1	}	return aH.compareDocumentPosition ? -1 : 1	} : function(aH, aK) {	var aN, aO = 0,	aJ = aH.parentNode,	aM = aK.parentNode,	aI = [aH],	aL = [aK];	if (aH === aK) {	G = true;	return 0	} else {	if (!aJ || !aM) {	return aH === e ? -1 : aK === e ? 1 : aJ ? -1 : aM ? 1 : aw ? (K.call(aw, aH) - K.call(aw, aK)) : 0	} else {	if (aJ === aM) {	return at(aH, aK)	}	}	}	aN = aH;	while ((aN = aN.parentNode)) {	aI.unshift(aN)	}	aN = aK;	while ((aN = aN.parentNode)) {	aL.unshift(aN)	}	while (aI[aO] === aL[aO]) {	aO++	}	return aO ? at(aI[aO], aL[aO]) : aI[aO] === V ? -1 : aL[aO] === V ? 1 : 0	};	return e	};	au.matches = function(i, e) {	return au(i, null, null, e)	};	au.matchesSelector = function(aG, aH) {	if ((aG.ownerDocument || aG) !== x) {	ap(aG)	}	aH = aH.replace(Z, "='$1']");	if (az.matchesSelector && y && (!aa || !aa.test(aH)) && (!ab || !ab.test(aH))) {	try {	var aI = P.call(aG, aH);	if (aI || az.disconnectedMatch || aG.document && aG.document.nodeType !== 11) {	return aI	}	} catch (i) {}	}	return au(aH, x, null, [aG]).length > 0	};	au.contains = function(e, i) {	if ((e.ownerDocument || e) !== x) {	ap(e)	}	return q(e, i)	};	au.attr = function(e, aG) {	if ((e.ownerDocument || e) !== x) {	ap(e)	}	var i = D.attrHandle[aG.toLowerCase()],	aH = i && H.call(D.attrHandle, aG.toLowerCase()) ? i(e, aG, !y) : aD;	return aH === aD ? az.attributes || !y ? e.getAttribute(aG) : (aH = e.getAttributeNode(aG)) && aH.specified ? aH.value : null : aH	};	au.error = function(e) {	throw new Error("Syntax error, unrecognized expression: " + e)	};	au.uniqueSort = function(aJ) {	var aG, e = [],	aI = 0,	aH = 0;	G = !az.detectDuplicates;	aw = !az.sortStable && aJ.slice(0);	aJ.sort(ax);	if (G) {	while ((aG = aJ[aH++])) {	if (aG === aJ[aH]) {	aI = e.push(aH)	}	}	while (aI--) {	aJ.splice(e[aI], 1)	}	}	return aJ	};	F = au.getText = function(e) {	var aH, aJ = "",	aG = 0,	aI = e.nodeType;	if (!aI) {	for (;	(aH = e[aG]); aG++) {	aJ += F(aH)	}	} else {	if (aI === 1 || aI === 9 || aI === 11) {	if (typeof e.textContent === "string") {	return e.textContent	} else {	for (e = e.firstChild; e; e = e.nextSibling) {	aJ += F(e)	}	}	} else {	if (aI === 3 || aI === 4) {	return e.nodeValue	}	}	}	return aJ	};	D = au.selectors = {	cacheLength: 50,	createPseudo: M,	match: Q,	attrHandle: {},	find: {},	relative: {	">": {	dir: "parentNode",	first: true	},	" ": {	dir: "parentNode"	},	"+": {	dir: "previousSibling",	first: true	},	"~": {	dir: "previousSibling"	}	},	preFilter: {	ATTR: function(e) {	e[1] = e[1].replace(an, E);	e[3] = (e[4] || e[5] || "").replace(an, E);	if (e[2] === "~=") {	e[3] = " " + e[3] + " "	}	return e.slice(0, 4)	},	CHILD: function(e) {	e[1] = e[1].toLowerCase();	if (e[1].slice(0, 3) === "nth") {	if (!e[3]) {	au.error(e[0])	}	e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * (e[3] === "even" || e[3] === "odd"));	e[5] = +((e[7] + e[8]) || e[3] === "odd")	} else {	if (e[3]) {	au.error(e[0])	}	}	return e	},	PSEUDO: function(i) {	var e, aG = !i[5] && i[2];	if (Q.CHILD.test(i[0])) {	return null	}	if (i[3] && i[4] !== aD) {	i[2] = i[4]	} else {	if (aG && aj.test(aG) && (e = aB(aG, true)) && (e = aG.indexOf(")", aG.length - e) - aG.length)) {	i[0] = i[0].slice(0, e);	i[2] = aG.slice(0, e)	}	}	return i.slice(0, 3)	}	},	filter: {	TAG: function(i) {	var e = i.replace(an, E).toLowerCase();	return i === "*" ? function() {	return true	} : function(aG) {	return aG.nodeName && aG.nodeName.toLowerCase() === e	}	},	CLASS: function(e) {	var i = m[e + " "];	return i || (i = new RegExp("(^|" + aE + ")" + e + "(" + aE + "|$)")) && m(e, function(aG) {	return i.test(typeof aG.className === "string" && aG.className || typeof aG.getAttribute !== ay && aG.getAttribute("class") || "")	})	},	ATTR: function(i, aG, e) {	return function(aH) {	var aI = au.attr(aH, i);	if (aI == null) {	return aG === "!="	}	if (!aG) {	return true	}	aI += "";	return aG === "=" ? aI === e : aG === "!=" ? aI !== e : aG === "^=" ? e && aI.indexOf(e) === 0 : aG === "*=" ? e && aI.indexOf(e) > -1 : aG === "$=" ? e && aI.slice(-e.length) === e : aG === "~=" ? (" " + aI + " ").indexOf(e) > -1 : aG === "|=" ? aI === e || aI.slice(0, e.length + 1) === e + "-" : false	}	},	CHILD: function(aK, aL, e, i, aH) {	var aJ = aK.slice(0, 3) !== "nth",	aG = aK.slice(-4) !== "last",	aI = aL === "of-type";	return i === 1 && aH === 0 ? function(aM) {	return !!aM.parentNode	} : function(aQ, aN, aY) {	var aM, aU, aS, aO, aT, aW, aP = aJ !== aG ? "nextSibling" : "previousSibling",	aV = aQ.parentNode,	aR = aI && aQ.nodeName.toLowerCase(),	aX = !aY && !aI;	if (aV) {	if (aJ) {	while (aP) {	aS = aQ;	while ((aS = aS[aP])) {	if (aI ? aS.nodeName.toLowerCase() === aR : aS.nodeType === 1) {	return false	}	}	aW = aP = aK === "only" && !aW && "nextSibling"	}	return true	}	aW = [aG ? aV.firstChild : aV.lastChild];	if (aG && aX) {	aU = aV[C] || (aV[C] = {});	aM = aU[aK] || [];	aT = aM[0] === v && aM[1];	aO = aM[0] === v && aM[2];	aS = aT && aV.childNodes[aT];	while ((aS = ++aT && aS && aS[aP] || (aO = aT = 0) || aW.pop())) {	if (aS.nodeType === 1 && ++aO && aS === aQ) {	aU[aK] = [v, aT, aO];	break	}	}	} else {	if (aX && (aM = (aQ[C] || (aQ[C] = {}))[aK]) && aM[0] === v) {	aO = aM[1]	} else {	while ((aS = ++aT && aS && aS[aP] || (aO = aT = 0) || aW.pop())) {	if ((aI ? aS.nodeName.toLowerCase() === aR : aS.nodeType === 1) && ++aO) {	if (aX) {	(aS[C] || (aS[C] = {}))[aK] = [v, aO]	}	if (aS === aQ) {	break	}	}	}	}	}	aO -= aH;	return aO === i || (aO % i === 0 && aO / i >= 0)	}	}	},	PSEUDO: function(aH, i) {	var e, aG = D.pseudos[aH] || D.setFilters[aH.toLowerCase()] || au.error("unsupported pseudo: " + aH);	if (aG[C]) {	return aG(i)	}	if (aG.length > 1) {	e = [aH, aH, "", i];	return D.setFilters.hasOwnProperty(aH.toLowerCase()) ? M(function(aM, aL) {	var aJ, aK = aG(aM, i),	aI = aK.length;	while (aI--) {	aJ = K.call(aM, aK[aI]);	aM[aJ] = !(aL[aJ] = aK[aI])	}	}) : function(aI) {	return aG(aI, 0, e)	}	}	return aG	}	},	pseudos: {	not: M(function(aH) {	var e = [],	aG = [],	i = n(aH.replace(am, "$1"));	return i[C] ? M(function(aM, aL, aI, aO) {	var aJ, aN = i(aM, null, aO, []),	aK = aM.length;	while (aK--) {	if ((aJ = aN[aK])) {	aM[aK] = !(aL[aK] = aJ)	}	}	}) : function(aJ, aI, aK) {	e[0] = aJ;	i(e, null, aK, aG);	return !aG.pop()	}	}),	has: M(function(e) {	return function(i) {	return au(e, i).length > 0	}	}),	contains: M(function(e) {	return function(i) {	return (i.textContent || i.innerText || F(i)).indexOf(e) > -1	}	}),	lang: M(function(e) {	if (!ag.test(e || "")) {	au.error("unsupported lang: " + e)	}	e = e.replace(an, E).toLowerCase();	return function(i) {	var aG;	do {	if ((aG = y ? i.lang : i.getAttribute("xml:lang") || i.getAttribute("lang"))) {	aG = aG.toLowerCase();	return aG === e || aG.indexOf(e + "-") === 0	}	} while ((i = i.parentNode) && i.nodeType === 1);	return false	}	}),	target: function(e) {	var i = b.location && b.location.hash;	return i && i.slice(1) === e.id	},	root: function(e) {	return e === w	},	focus: function(e) {	return e === x.activeElement && (!x.hasFocus || x.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)	},	enabled: function(e) {	return e.disabled === false	},	disabled: function(e) {	return e.disabled === true	},	checked: function(e) {	var i = e.nodeName.toLowerCase();	return (i === "input" && !!e.checked) || (i === "option" && !!e.selected)	},	selected: function(e) {	if (e.parentNode) {	e.parentNode.selectedIndex	}	return e.selected === true	},	empty: function(e) {	for (e = e.firstChild; e; e = e.nextSibling) {	if (e.nodeName > "@" || e.nodeType === 3 || e.nodeType === 4) {	return false	}	}	return true	},	parent: function(e) {	return !D.pseudos.empty(e)	},	header: function(e) {	return af.test(e.nodeName)	},	input: function(e) {	return ah.test(e.nodeName)	},	button: function(e) {	var i = e.nodeName.toLowerCase();	return i === "input" && e.type === "button" || i === "button"	},	text: function(i) {	var e;	return i.nodeName.toLowerCase() === "input" && i.type === "text" && ((e = i.getAttribute("type")) == null || e.toLowerCase() === i.type)	},	first: u(function() {	return [0]	}),	last: u(function(i, e) {	return [e - 1]	}),	eq: u(function(aG, i, e) {	return [e < 0 ? e + i : e]	}),	even: u(function(aH, aG) {	var e = 0;	for (; e < aG; e += 2) {	aH.push(e)	}	return aH	}),	odd: u(function(aH, aG) {	var e = 1;	for (; e < aG; e += 2) {	aH.push(e)	}	return aH	}),	lt: u(function(aI, aH, e) {	var aG = e < 0 ? e + aH : e;	for (; --aG >= 0;) {	aI.push(aG)	}	return aI	}),	gt: u(function(aI, aH, e) {	var aG = e < 0 ? e + aH : e;	for (; ++aG < aH;) {	aI.push(aG)	}	return aI	})	}	};	D.pseudos.nth = D.pseudos.eq;	for (I in {	radio: true,	checkbox: true,	file: true,	password: true,	image: true	}) {	D.pseudos[I] = t(I)	}	for (I in {	submit: true,	reset: true	}) {	D.pseudos[I] = r(I)	}	function aq() {}	aq.prototype = D.filters = D.pseudos;	D.setFilters = new aq();	function aB(aK, aI) {	var aH, aG, aM, aN, aL, i, aJ, e = aA[aK + " "];	if (e) {	return aI ? 0 : e.slice(0)	}	aL = aK;	i = [];	aJ = D.preFilter;	while (aL) {	if (!aH || (aG = ad.exec(aL))) {	if (aG) {	aL = aL.slice(aG[0].length) || aL	}	i.push(aM = [])	}	aH = false;	if ((aG = ac.exec(aL))) {	aH = aG.shift();	aM.push({	value: aH,	type: aG[0].replace(am, " ")	});	aL = aL.slice(aH.length)	}	for (aN in D.filter) {	if ((aG = Q[aN].exec(aL)) && (!aJ[aN] || (aG = aJ[aN](aG)))) {	aH = aG.shift();	aM.push({	value: aH,	type: aN,	matches: aG	});	aL = aL.slice(aH.length)	}	}	if (!aH) {	break	}	}	return aI ? aL.length : aL ? au.error(aK) : aA(aK, i).slice(0)	}	function aC(aI) {	var e = 0,	aG = aI.length,	aH = "";	for (; e < aG; e++) {	aH += aI[e].value	}	return aH	}	function c(aJ, aG, e) {	var aH = aG.dir,	i = e && aH === "parentNode",	aI = z++;	return aG.first ? function(aL, aK, aM) {	while ((aL = aL[aH])) {	if (aL.nodeType === 1 || i) {	return aJ(aL, aK, aM)	}	}	} : function(aO, aL, aQ) {	var aM, aK, aP, aN = v + " " + aI;	if (aQ) {	while ((aO = aO[aH])) {	if (aO.nodeType === 1 || i) {	if (aJ(aO, aL, aQ)) {	return true	}	}	}	} else {	while ((aO = aO[aH])) {	if (aO.nodeType === 1 || i) {	aP = aO[C] || (aO[C] = {});	if ((aK = aP[aH]) && aK[0] === aN) {	if ((aM = aK[1]) === true || aM === k) {	return aM === true	}	} else {	aK = aP[aH] = [aN];	aK[1] = aJ(aO, aL, aQ) || k;	if (aK[1] === true) {	return true	}	}	}	}	}	}	}	function B(e) {	return e.length > 1 ? function(aH, aG, aJ) {	var aI = e.length;	while (aI--) {	if (!e[aI](aH, aG, aJ)) {	return false	}	}	return true	} : e[0]	}	function p(aN, aK, aH, e, aO) {	var aG, aM = [],	aI = 0,	aJ = aN.length,	aL = aK != null;	for (; aI < aJ; aI++) {	if ((aG = aN[aI])) {	if (!aH || aH(aG, e, aO)) {	aM.push(aG);	if (aL) {	aK.push(aI)	}	}	}	}	return aM	}	function ar(aI, aJ, e, i, aG, aH) {	if (i && !i[C]) {	i = ar(i)	}	if (aG && !aG[C]) {	aG = ar(aG, aH)	}	return M(function(aU, aT, aK, aW) {	var aV, aN, aL, aS = [],	aQ = [],	aR = aT.length,	aM = aU || S(aJ || "*", aK.nodeType ? [aK] : aK, []),	aO = aI && (aU || !aJ) ? p(aM, aS, aI, aK, aW) : aM,	aP = e ? aG || (aU ? aI : aR || i) ? [] : aT : aO;	if (e) {	e(aO, aP, aK, aW)	}	if (i) {	aV = p(aP, aQ);	i(aV, [], aK, aW);	aN = aV.length;	while (aN--) {	if ((aL = aV[aN])) {	aP[aQ[aN]] = !(aO[aQ[aN]] = aL)	}	}	}	if (aU) {	if (aG || aI) {	if (aG) {	aV = [];	aN = aP.length;	while (aN--) {	if ((aL = aP[aN])) {	aV.push((aO[aN] = aL))	}	}	aG(null, (aP = []), aV, aW)	}	aN = aP.length;	while (aN--) {	if ((aL = aP[aN]) && (aV = aG ? K.call(aU, aL) : aS[aN]) > -1) {	aU[aV] = !(aT[aV] = aL)	}	}	}	} else {	aP = p(aP === aT ? aP.splice(aR, aP.length) : aP);	if (aG) {	aG(null, aT, aP, aW)	} else {	X.apply(aT, aP)	}	}	})	}	function O(aP) {	var e, aN, aI, aK = aP.length,	aJ = D.relative[aP[0].type],	aH = aJ || D.relative[" "],	aG = aJ ? 1 : 0,	aM = c(function(i) {	return i === e	}, aH, true),	aL = c(function(i) {	return K.call(e, i) > -1	}, aH, true),	aO = [function(aQ, i, aR) {	return (!aJ && (aR || i !== T)) || ((e = i).nodeType ? aM(aQ, i, aR) : aL(aQ, i, aR))	}];	for (; aG < aK; aG++) {	if ((aN = D.relative[aP[aG].type])) {	aO = [c(B(aO), aN)]	} else {	aN = D.filter[aP[aG].type].apply(null, aP[aG].matches);	if (aN[C]) {	aI = ++aG;	for (; aI < aK; aI++) {	if (D.relative[aP[aI].type]) {	break	}	}	return ar(aG > 1 && B(aO), aG > 1 && aC(aP.slice(0, aG - 1).concat({	value: aP[aG - 2].type === " " ? "*" : ""	})).replace(am, "$1"), aN, aG < aI && O(aP.slice(aG, aI)), aI < aK && O((aP = aP.slice(aI))), aI < aK && aC(aP))	}	aO.push(aN)	}	}	return B(aO)	}	function N(aG, aI) {	var aH = 0,	i = aI.length > 0,	e = aG.length > 0,	aJ = function(aX, aK, a0, aW, aP) {	var aN, aR, aU, aY = [],	aT = 0,	aQ = "0",	aZ = aX && [],	aV = aP != null,	aL = T,	aO = aX || e && D.find.TAG("*", aP && aK.parentNode || aK),	aM = (v += aL == null ? 1 : Math.random() || 0.1),	aS = aO.length;	if (aV) {	T = aK !== x && aK;	k = aH	}	for (; aQ !== aS && (aN = aO[aQ]) != null; aQ++) {	if (e && aN) {	aR = 0;	while ((aU = aG[aR++])) {	if (aU(aN, aK, a0)) {	aW.push(aN);	break	}	}	if (aV) {	v = aM;	k = ++aH	}	}	if (i) {	if ((aN = !aU && aN)) {	aT--	}	if (aX) {	aZ.push(aN)	}	}	}	aT += aQ;	if (i && aQ !== aT) {	aR = 0;	while ((aU = aI[aR++])) {	aU(aZ, aY, aK, a0)	}	if (aX) {	if (aT > 0) {	while (aQ--) {	if (!(aZ[aQ] || aY[aQ])) {	aY[aQ] = U.call(aW)	}	}	}	aY = p(aY)	}	X.apply(aW, aY);	if (aV && !aX && aY.length > 0 && (aT + aI.length) > 1) {	au.uniqueSort(aW)	}	}	if (aV) {	v = aM;	T = aL	}	return aZ	};	return i ? M(aJ) : aJ	}	n = au.compile = function(aJ, aH) {	var aI, aK = [],	aG = [],	e = o[aJ + " "];	if (!e) {	if (!aH) {	aH = aB(aJ)	}	aI = aH.length;	while (aI--) {	e = O(aH[aI]);	if (e[C]) {	aK.push(e)	} else {	aG.push(e)	}	}	e = o(aJ, N(aG, aK))	}	return e	};	function S(aJ, e, aI) {	var aG = 0,	aH = e.length;	for (; aG < aH; aG++) {	au(aJ, e[aG], aI)	}	return aI	}	function ao(aL, e, aJ, aK) {	var aH, aN, aM, aO, aG, aI = aB(aL);	if (!aK) {	if (aI.length === 1) {	aN = aI[0] = aI[0].slice(0);	if (aN.length > 2 && (aM = aN[0]).type === "ID" && az.getById && e.nodeType === 9 && y && D.relative[aN[1].type]) {	e = (D.find.ID(aM.matches[0].replace(an, E), e) || [])[0];	if (!e) {	return aJ	}	aL = aL.slice(aN.shift().value.length)	}	aH = Q.needsContext.test(aL) ? 0 : aN.length;	while (aH--) {	aM = aN[aH];	if (D.relative[(aO = aM.type)]) {	break	}	if ((aG = D.find[aO])) {	if ((aK = aG(aM.matches[0].replace(an, E), al.test(aN[0].type) && e.parentNode || e))) {	aN.splice(aH, 1);	aL = aK.length && aC(aN);	if (!aL) {	X.apply(aJ, aK);	return aJ	}	break	}	}	}	}	}	n(aL, aI)(aK, e, !y, aJ, al.test(aL));	return aJ	}	az.sortStable = C.split("").sort(ax).join("") === C;	az.detectDuplicates = G;	ap();	az.sortDetached = g(function(e) {	return e.compareDocumentPosition(x.createElement("div")) & 1	});	if (!g(function(e) {	e.innerHTML = "<a href='#'></a>";	return e.firstChild.getAttribute("href") === "#"	})) {	d("type|href|height|width", function(e, aG, i) {	if (!i) {	return e.getAttribute(aG, aG.toLowerCase() === "type" ? 1 : 2)	}	})	}	if (!az.attributes || !g(function(e) {	e.innerHTML = "<input/>";	e.firstChild.setAttribute("value", "");	return e.firstChild.getAttribute("value") === ""	})) {	d("value", function(e, aG, i) {	if (!i && e.nodeName.toLowerCase() === "input") {	return e.defaultValue	}	})	}	if (!g(function(e) {	return e.getAttribute("disabled") == null	})) {	d(j, function(e, aG, i) {	var aH;	if (!i) {	return (aH = e.getAttributeNode(aG)) && aH.specified ? aH.value : e[aG] === true ? aG.toLowerCase() : null	}	})	}	aF.Sizzle = au 	})(b.xRTML = b.xRTML || {}) })(window); (function(xRTML, undefined) { 	(function(JSON, undefined) {	(function() {	function f(n) {	return n < 10 ? "0" + n : n	}	if (typeof Date.prototype.toJSON !== "function") {	Date.prototype.toJSON = function() {	return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null	};	String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {	return this.valueOf()	}	}	var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,	escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,	gap, indent, meta = {	"\b": "\\b",	"\t": "\\t",	"\n": "\\n",	"\f": "\\f",	"\r": "\\r",	'"': '\\"',	"\\": "\\\\"	},	rep;	function quote(string) {	escapable.lastIndex = 0;	return escapable.test(string) ? '"' + string.replace(escapable, function(a) {	var c = meta[a];	return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)	}) + '"' : '"' + string + '"'	}	function str(key, holder) {	var i, k, v, length, mind = gap,	partial, value = holder[key];	if (value && typeof value === "object" && typeof value.toJSON === "function") {	value = value.toJSON(key)	}	if (typeof rep === "function") {	value = rep.call(holder, key, value)	}	switch (typeof value) {	case "string":	return quote(value);	case "number":	return isFinite(value) ? String(value) : "null";	case "boolean":	case "null":	return String(value);	case "object":	if (!value) {	return "null"	}	gap += indent;	partial = [];	if (Object.prototype.toString.apply(value) === "[object Array]") {	length = value.length;	for (i = 0; i < length; i += 1) {	partial[i] = str(i, value) || "null"	}	v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";	gap = mind;	return v	}	if (rep && typeof rep === "object") {	length = rep.length;	for (i = 0; i < length; i += 1) {	if (typeof rep[i] === "string") {	k = rep[i];	v = str(k, value);	if (v) {	partial.push(quote(k) + (gap ? ": " : ":") + v)	}	}	}	} else {	for (k in value) {	if (Object.prototype.hasOwnProperty.call(value, k)) {	v = str(k, value);	if (v) {	partial.push(quote(k) + (gap ? ": " : ":") + v)	}	}	}	}	v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";	gap = mind;	return v	}	}	if (typeof JSON.stringify !== "function") {	JSON.stringify = function(value, replacer, space) {	var i;	gap = "";	indent = "";	if (typeof space === "number") {	for (i = 0; i < space; i += 1) {	indent += " "	}	} else {	if (typeof space === "string") {	indent = space	}	}	rep = replacer;	if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) {	throw new Error("JSON.stringify")	}	return str("", {	"": value	})	}	}	if (typeof JSON.parse !== "function") {	JSON.parse = function(text, reviver) {	var j;	function walk(holder, key) {	var k, v, value = holder[key];	if (value && typeof value === "object") {	for (k in value) {	if (Object.prototype.hasOwnProperty.call(value, k)) {	v = walk(value, k);	if (v !== undefined) {	value[k] = v	} else {	delete value[k]	}	}	}	}	return reviver.call(holder, key, value)	}	text = String(text);	cx.lastIndex = 0;	if (cx.test(text)) {	text = text.replace(cx, function(a) {	return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)	})	}	if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {	j = eval("(" + text + ")");	return typeof reviver === "function" ? walk({	"": j	}, "") : j	}	throw new SyntaxError("JSON.parse")	}	}	}()) 	})(xRTML.JSON = xRTML.JSON || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(d, j) {	var i = "xrtml:",	c = function(l) {	return !l.getAttribute("version") || l.getAttribute("version") === b.version	},	f = function(l) {	var o = l.getElementsByTagName(i + "connection"),	n = [];	for (var p = 0; p < o.length; ++p) {	if (c(o[p])) {	var m = o[p];	n.push(new k(m));	o[p].parentNode.removeChild(o[p--])	}	}	return n	},	g = function(l) {	var q = l.getElementsByTagName(i + "storage"),	p = [];	for (var m = 0, n = q.length; m < n; m++) {	if (c(q[m])) {	var o = q[m];	p.push({	id: o.getAttribute("id"),	baseurl: o.getAttribute("baseurl"),	type: o.getAttribute("type"),	connectionid: o.getAttribute("connectionid"),	sessionid: o.getAttribute("sessionid"),	onready: o.getAttribute("onready") ? new Function("event", "return " + o.getAttribute("onready") + "(event);") : null,	onsession: o.getAttribute("onsession") ? new Function("event", "return " + o.getAttribute("onsession") + "(event);") : null,	onexception: o.getAttribute("onexception") ? new Function("event", "event", "return " + o.getAttribute("onexception") + "(event);") : null	});	document.getElementsByTagName(i + "storages")[0].removeChild(q[m--])	}	}	return p	},	e = function() {	var m = document,	l = document.getElementsByTagName(i + "config");	if (l.length == 0) {	return null	}	if (l.length == 1) {	l = l[0];	m = window.attachEvent ? document : l	} else {	throw "xRTML requires a configuration tag per page."	}	return {	debug: b.Common.Converter.toBoolean(l.getAttribute("debug")),	logLevel: l.getAttribute("loglevel"),	xrtmlActive: b.Common.Converter.toBoolean(l.getAttribute("xrtmlactive")),	throwErrors: b.Common.Converter.toBoolean(l.getAttribute("throwerrors")),	connectionAttempts: b.Common.Converter.toNumber(l.getAttribute("connectionattempts")),	connectionTimeout: b.Common.Converter.toNumber(l.getAttribute("connectiontimeout")),	remoteTrace: b.Common.Converter.toBoolean(l.getAttribute("remotetrace")),	ortcUrl: l.getAttribute("ortcurl"),	ortcLibrary: l.getAttribute("ortclibrary"),	connections: f(m),	storages: g(m)	}	},	k = function(p, q) {	var l, m;	if (p.attributes) {	for (var n = 0; n < p.attributes.length; ++n) {	l = p.attributes[n];	if (l.specified) {	this[l.nodeName.toLowerCase()] = l.nodeValue	}	}	}	if (p.children.length != 0) {	for (var o = 0; o < p.children.length; ++o) {	m = p.children[o], childName = window.addEventListener ? m.nodeName.split(":")[1].toLowerCase() : m.nodeName.toLowerCase();	if (!q) {	this[childName] = [];	new k(m, this[childName])	} else {	if (m.attributes && m.attributes.length == 1 && m.attributes[0].nodeName == "value") {	q.push(m.attributes[0].nodeValue)	} else {	q.push(new k(m))	}	if (m.children) {	new k(m, q)	}	}	}	}	},	h = function() {	var p, q = [],	n = b.TagManager.getClasses();	for (var m = 0; m < n.length; ++m) {	p = document.getElementsByTagName(i + n[m]);	for (var l = 0; l < p.length; ++l) {	var o = p[l];	if (!window.addEventListener && o.scopeName.toLowerCase() != "xrtml") {	continue	}	if (c(o)) {	var r = new k(o);	r.name = n[m];	q.push(r);	document.body.removeChild(p[l--])	}	}	}	return q	};	b.Event.extend(d);	d.read = function() {	var l = e();	if (l) {	l.attribute = function(n) {	return b.Common.Object.insensitiveGetter(this, n)	};	this.fire({	configLoad: {	config: l	}	})	}	var m = h();	if (m.length != 0) {	this.fire({	tagsLoad: {	tags: m	}	})	}	} 	})(b.DomParser = b.DomParser || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, f) {	var e = false,	d = /xyz/.test(function() {	xyz	}) ? /\b_super\b/ : /.*/;	c.extend = function(j) {	var g = this.prototype;	e = true;	var k = new this();	e = false;	for (var i in j) {	k[i] = typeof j[i] == "function" && typeof g[i] == "function" && d.test(j[i]) ? (function(m, l) {	return function() {	var o = this._super;	this._super = g[m];	var n = l.apply(this, arguments);	this._super = o;	return n	}	})(i, j[i]) : j[i]	}	function h() {	if (!e && this.init) {	this.init.apply(this, arguments)	}	}	h.prototype = k;	h.prototype.constructor = h;	h.extend = arguments.callee;	return h	} 	})(b.Class = b.Class || function() {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, e) {	var d = "";	b.Event.extend(c);	c.logLevels = {	error: 0,	warn: 1,	info: 2	};	c.debug = false;	c.logLevel = 2;	c.connectionAttempts = 5;	c.connectionTimeout = 10000;	c.remoteTrace = false;	c.heartbeatActive = false;	c.heartbeatFails = 3;	c.heartbeatTime = 25;	c.ortcLibrary = function(g, f) {	if (arguments.length != 0) {	d = g;	b.Common.DOM.loadScript({	url: g,	callback: f	})	}	return d	};	b.DomParser.bind({	configLoad: function(g) {	var f = g.config;	c.debug = f.attribute("debug") ? f.attribute("debug") : c.debug;	c.logLevel = f.attribute("logLevel") ? f.attribute("logLevel") : c.logLevel;	c.connectionAttempts = f.attribute("connectionAttempts") ? f.attribute("connectionAttempts") : c.connectionAttempts;	c.connectionTimeout = f.attribute("connectionTimeout") ? f.attribute("connectionTimeout") : c.connectionTimeout;	c.remoteTrace = f.attribute("remoteTrace") ? f.attribute("remoteTrace") : c.remoteTrace;	c.heartbeatActive = f.attribute("heartbeatActive") ? f.attribute("heartbeatActive") : c.heartbeatActive;	c.heartbeatFails = f.attribute("heartbeatFails") ? f.attribute("heartbeatFails") : c.heartbeatFails;	c.heartbeatTime = f.attribute("heartbeatTime") ? f.attribute("heartbeatTime") : c.heartbeatTime;	for (var h = 0; h < f.connections.length; ++h) {	b.ConnectionManager.create(f.connections[h])	}	for (var h = 0; h < f.storages.length; ++h) {	b.StorageManager.create(f.storages[h])	}	}	}) 	})(b.Config = b.Config || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, e) {	var d = (function() {	if (typeof console !== "undefined") {	return console	}	var f = {	log: function() {},	debug: function() {},	info: function() {},	warn: function() {},	error: function() {}	};	return f	})();	c.log = function(f) {	if (b.Config.debug === true) {	d.log(f)	}	};	c.debug = function(f) {	if (b.Config.debug === true) {	d.debug ? d.debug(f) : d.log(f)	}	};	c.info = function(f) {	if (b.Config.debug === true) {	d.info ? d.info(f) : d.log(f)	}	};	c.warn = function(f) {	if (b.Config.debug === true) {	d.warn ? d.warn(f) : d.log(f)	}	};	c.error = function(f) {	if (b.Config.debug === true) {	d.error ? d.error(f) : d.log(f)	}	if (b.Config.remoteTrace === true) {	this.fire({	error: {	error: f	}	})	}	};	b.Event.extend(c) 	})(b.Console = b.Console || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, f) {	var d = {	uiEffects: {	blind: true,	bounce: true,	clip: true,	drop: true,	explode: true,	fade: true,	fold: true,	highlight: true,	puff: true,	pulsate: true,	scale: true,	shake: true,	size: true,	slide: true,	transfer: true	},	cssPropsMapping: {	"padding-top": "paddingTop"	},	checkIfEffectFunctionAvailable: function(h) {	var g = (jQuery && jQuery.fn && ((typeof jQuery.fn[h]).toLowerCase() == "function")) || (jQuery && jQuery.effects && ((typeof jQuery.effects[h]).toLowerCase() == "function"));	if (!g) {	b.Error.raise({	code: b.Error.Codes.MISSING_LIBRARY,	info: {	library: "jQuery",	module: h,	className: "xRTML.Effect.Manager (internal class, no docs available)",	methodName: "checkIfEffectFunctionAvailable (internal method, no docs available)"	}	})	}	},	callJQueryEffect: function(g) {	b.Console.debug("jQuery effect: Running " + g.effectName + " on element " + g.element.id + " with options " + b.JSON.stringify(g.effectOptions) + " and properties: " + b.JSON.stringify(g.effectProperties));	this.checkIfEffectFunctionAvailable(g.effectName);	try {	if (this.uiEffects[g.effectName]) {	jQuery.fn.effect.call(jQuery(g.element), g.effectName, g.effectOptions, g.effectSpeed, g.effectCallback)	} else {	jQuery.fn[g.effectName].call(jQuery(g.element), g.effectProperties, g.effectOptions)	}	} catch (h) {	b.Error.raise({	code: b.Error.Codes.UNEXPECTED,	info: {	message: h.message,	className: "xRTML.Effect.Manager (internal class, no docs available)",	methodName: "callJQueryEffect (internal method, no docs available)"	}	})	}	},	buildReverseEffectProperties: function(g) {	var h = {};	for (var j in g.properties) {	var i = b.Common.Object.insensitiveGetter(g.element.style, j.replace("-", ""));	if (!i || i == "") {	i = b.Common.DOM.getStyle({	element: g.element,	rule: j	})	}	h[j] = i	}	return h	},	cloneJQueryOptions: function(h) {	var g = {};	for (prop in h) {	g[prop] = h[prop]	}	return g	}	},	e = {	runEffects: function(g) {	if (this.effects) {	if (typeof g.stopCurrent == "undefined" || g.stopCurrent) {	d.checkIfEffectFunctionAvailable("animate");	jQuery(g.element).stop(false, true)	}	for (var j = 0; j < this.effects.length; j++) {	try {	var k = d.cloneJQueryOptions(typeof this.effects[j].options == "object" ? this.effects[j].options : b.JSON.parse(this.effects[j].options)),	l = typeof this.effects[j].properties == "object" ? this.effects[j].properties : b.JSON.parse(this.effects[j].properties),	m = d.buildReverseEffectProperties({	properties: l,	element: g.element	})	} catch (h) {	b.Error.raise({	code: b.Error.Codes.JSON_PARSE,	info: {	message: h.message,	className: "xRTML.Effect.Provider (internal class, no docs available)",	methodName: "runEffects"	}	})	}	d.callJQueryEffect({	element: g.element,	effectName: this.effects[j].name,	effectOptions: k,	effectProperties: l,	effectSpeed: this.effects[j].speed,	effectCallback: this.effects[j].callback ? (typeof this.effects[j].callback == "function" ? this.effects[j].callback : new Function("", "return " + this.effects[j].callback + "();")) : null,	revert: this.effects[j].revert	});	if (this.effects[j].revert) {	d.callJQueryEffect({	element: g.element,	effectName: this.effects[j].name,	effectOptions: k,	effectProperties: m,	effectSpeed: this.effects[j].speed,	effectCallback: null,	revert: false	})	}	}	}	}	};	c.extend = function(h) {	for (var g in e) {	h[g] = e[g]	}	} 	})(b.Effect = b.Effect || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, e) {	b.Event.extend(c);	c.raise = function(f) {	var g = new c.XRTMLError(f);	new window.Error().stack ? b.Console.error(g) : d(g);	return g	};	c.XRTMLError = function(f) {	var g = !!f.code ? f.code : b.Error.Codes.UNEXPECTED;	this.name = g.type;	var h = !!f.info ? f.info : {};	h.className = !!h.className ? h.className : (!!f.target ? (!!f.target.name ? f.target.name : Object.prototype.toString.call(f.target)) : "Unknown");	h.id = !!h.id ? h.id : (!!f.target ? f.target.id : "Unknown");	h.message = !!h.message ? h.message : f.message;	h.arguments = f.arguments;	this.message = b.Common.String.template(g.message, h);	this.type = g.type;	this.target = f.target;	this.info = h;	c.fire({	exception: {	error: this	}	})	};	c.XRTMLError.prototype = window.Error.prototype;	c.Codes = {	MANDATORY_PROPERTY: {	type: "ValidationError",	message: "The property {property} is required for a {className} with the id {id}."	},	INVALID_PROPERTY: {	type: "ValidationError",	message: "The property {property} of a {className} with the id {id} has the wrong type. The appropriate type would be {validType}."	},	CONNECTION_INACTIVE: {	type: "ConnectionError",	message: "Tried to perform an operation on Connection {id} which is not active."	},	CONNECTION_EXCEPTION: {	type: "ConnectionError",	message: "An unexpected problem occured on the Connection {id}. {message}"	},	CONNECTION_NOT_FOUND: {	type: "ConnectionError",	message: "Unable to find a Connection with the specified id: {id}."	},	CONNECTION_PROCESS: {	type: "ConnectionError",	message: "An error ocurred while processing the message {xRTMLMessage} arrived at Connection {id}. {message}"	},	CONNECTION_ADAPT: {	type: "ConnectionError",	message: "An error ocurred while adapting the message {originalMessage} arrived at Connection {id}. {message}"	},	CONNECTION_DUPLICATE: {	type: "ConnectionError",	message: "Connection with id {id} already exists."	},	ORTC_NOT_FOUND: {	type: "ORTCError",	message: "Unable to obtain the ORTC library from the address specified."	},	ORTC_UNAVAILABLE: {	type: "ORTCError",	message: "Connection {id}: ORTC client is not created yet."	},	ORTC_DISCONNECTED: {	type: "ORTCError",	message: "Connection {id}: Disconnect not possible. ORTC client is not connected."	},	ORTC_EXCEPTION: {	type: "ORTCError",	message: "An unexpected problem occured on the Connection {id}. {message}"	},	TAG_NOT_CREATED: {	type: "TagError",	message: "A problem occured while trying to create a {className} Tag with id {id}. {message}"	},	TAG_INACTIVE: {	type: "TagError",	message: "Tried to perform an action on a {className} with {id} which is not active."	},	TAG_UNREGISTERED: {	type: "TagError",	message: "The specified Tag does not exist in the registered tags namespace."	},	TAG_INVALID_CONFIG: {	type: "TagError",	message: "Unable to register a Tag with the specified configuration. {message}"	},	TAG_ABSTRACT: {	type: "TagError",	message: "The specified tag {tag} should not be instantiated."	},	TAG_ACTION_UNDEFINED: {	type: "TagError",	message: "Tried to perform an action {action} which is not defined on a {className} with id {id}."	},	TAG_NOT_FOUND: {	type: "TagError",	message: "Unable to find a Tag with the specified id: {id}."	},	TAG_PROCESS: {	type: "TagError",	message: "An error ocurred while processing the arrived message on a {className} with id {id}. {message}"	},	INVALID_MESSAGE: {	type: "MessageError",	message: "Tried to create a message with invalid properties. {message}"	},	TRIGGER_UNREGISTERED: {	type: "MessageError",	message: "A message arrived containing a trigger which is not registered by any Tag."	},	STORAGE_CONNECTION_UNAVAILABLE: {	type: "StorageError",	message: "The Remote Storage component for a {className} provider with id {id} could not find a connection with connectionId: {connectionId}"	},	STORAGE_UNAVAILABLE: {	type: "StorageError",	message: "The Remote Storage component for a {className} provider with id {id} is not available."	},	STORAGE_SESSION: {	type: "StorageError",	message: "The Remote Storage component for a {className} provider with id {id} was not able to get a session. {message}"	},	STORAGE_ACTION_UNDEFINED: {	type: "StorageError",	message: "Tried to perform an action which is not defined on a {className} with id {id}."	},	STORAGE_PERMISSIONS: {	type: "StorageError",	message: "Tried to perform an action for which the {className} with id {id} does not have the necessary permissions. Were the right channel permissions set on the server-side?"	},	STORAGE_OPERATION_TIMEOUT: {	type: "StorageError",	message: "The Storage operation with the id: {opId} was not completed whithin the expected timeout: {timeout}"	},	STORAGE_CALLBACK_FAILURE: {	type: "StorageError",	message: "The Storage operation with the id: {opId} callback has failed. {message}"	},	REQUEST_FAILURE: {	type: "RequestError",	message: "An error occured while calling the specified address. {message}"	},	REQUEST_UNAVAILABLE: {	type: "RequestError",	message: "Unable to obtain a response from the specified address."	},	REQUEST_UNSUPPORTED: {	type: "RequestError",	message: "This browser does not support XMLHttpRequest neither XDomainRequest."	},	JSON_PARSE: {	type: "ParseError",	message: "Unable to parse the specified String according to JSON specification rules. {message}"	},	DOM_PARSE: {	type: "ParseError",	message: "Unable to parse an XRTML DOM Node. "	},	MISSING_ARGUMENT: {	type: "MethodError",	message: "A method {methodName} was called but the required argument {argument} was undefined."	},	INVALID_ARGUMENT: {	type: "MethodError",	message: "The method {methodName} was called but the argument {argument} was of an invalid type. The expected type was {expectedType}"	},	UNEXPECTED: {	type: "UnexpectedError",	message: "An unexpected error occured. Cause error message is: {message}"	},	FATAL: {	type: "FatalError",	message: "A critical error occured. The error message is: {message}"	},	INVALID_DOM_ATTRIBUTE: {	type: "InvalidDomAttribute",	message: "An error occured when trying to retrive an unexisting attribute: {attribute}"	},	TEMPLATING: {	type: "TemplateError",	message: "An error occured when trying to apply bindings to a template. The cause is: {message}"	},	TEMPLATING_EFFECTS: {	type: "TemplateError",	message: "An error occured when trying to run effects binded in a template. Are the effects configured in the tag? The error cause is: {message}"	},	UNEXPECTEDMEDIA: {	type: "UnexpectedMediaError",	message: "An error occurred when trying to operate on media. The cause is: {message}"	},	UNEXPECTEDEVENT: {	type: "UnexpectedEventError",	message: 'An error occurred when trying to process the "{eventType}" event handler. The cause is: {message}'	},	MISSING_LIBRARY: {	type: "MissingLibrary",	message: "A required library {library} {module} is not available. Please import this library."	},	INVALID_TEMPLATE_ENGINE: {	type: "MethodError",	message: "The method {methodName} was called but the argument was of an invalid type. The expected type was {expectedType}"	}	};	var d = function(g) {	var h = [];	h.push(g.name + ": " + g.message + "\n");	function f(j, k, n, q) {	var m = [];	for (var l = 0; l < n; l++) {	m.push(" ")	}	var o = m.join("");	if (q < 9) {	for (var p in j) {	if (j.hasOwnProperty(p) && p != "name" && p != "message") {	if (typeof j[p] === "string" || typeof j[p] === "number" || typeof j[p] === "boolean") {	k.push((o + p + ": " + j[p]) + "\n")	} else {	if (b.Common.Object.isObject(j[p])) {	k.push(o + p + ": \n");	f(j[p], k, n + 4, q + 1)	} else {	if (b.Common.Array.isArray(j[p])) {	k.push(o + p + ": \n");	for (var l = 0; l < j[p].length; l++) {	f(j[p], k, n + 4, q + 1)	}	}	}	}	}	}	} else {	k.push(o + j.toString() + "\n")	}	}	f(g, h, 0, 1);	b.Console.error(h.join(""))	} 	})(b.Error = b.Error || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(e, f) {	e.contains = function(g) {	var j = g.items;	for (var h = 0, k = j.length; h < k; h++) {	if (b.Common.Object.equals({	o1: j[h],	o2: g.obj	})) {	return true	}	}	return false	};	e.isArray = function(g) {	return Object.prototype.toString.call(g) === "[object Array]"	}	})(b.Common.Array = b.Common.Array || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(e, f) {	e.equals = function(g) {	return b.JSON.stringify(g.o1) === b.JSON.stringify(g.o2)	};	e.isObject = function(g) {	return "" + g == "[object Object]"	};	e.insensitiveGetter = function(g, i) {	for (var h in g) {	if (g.hasOwnProperty && g.hasOwnProperty(h) && (i + "").toLowerCase() == (h + "").toLowerCase()) {	return g[h];	break	}	}	};	e.keys = window.Object.keys || function(i) {	var h = [],	g;	for (g in i) {	if (window.Object.prototype.hasOwnProperty.call(i, g)) {	h.push(g)	}	}	return h	}	})(b.Common.Object = b.Common.Object || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(e, f) {	e.trim = function(g) {	return typeof window.String.prototype.trim == "function" ? g.trim() : g.replace(/^\s+|\s+/g, "")	};	e.template = function(i, j) {	for (var g in j) {	var h = new RegExp("\\{" + g + "\\}", "gm");	i = i.replace(h, j[g])	}	return i	}	})(b.Common.String = b.Common.String || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(e, g) {	var f = function(i, h) {	var j = document.createElement("script");	j.type = "text/javascript";	if (j.readyState) {	j.onreadystatechange = function() {	if (j.readyState == "loaded" || j.readyState == "complete") {	j.onreadystatechange = null;	h.apply(this, arguments)	}	}	} else {	j.onload = function() {	h.apply(this, arguments)	}	}	j.src = i;	document.getElementsByTagName("head")[0].appendChild(j)	};	e.loadScript = function(h) {	f(h.url, h.callback)	};	e.loadScripts = function(h, k) {	if (b.Common.Array.isArray(h)) {	var j = [];	for (var l = 0; l < h.length; l++) {	(function(i) {	j.push(function(m) {	f(i, function() {	m()	})	})	})(h[l])	}	b.Async.parallel(j, function() {	k()	})	} else {	f(h, k)	}	};	e.getStyle = function(h) {	if (document.defaultView && document.defaultView.getComputedStyle) {	return document.defaultView.getComputedStyle(h.element, "").getPropertyValue(h.rule)	}	if (h.element.currentStyle) {	var i = h.rule.replace(/\-(\w)/g, function(k, j) {	return j.toUpperCase()	});	return h.element.currentStyle[i]	}	return ""	}	})(b.Common.DOM = b.Common.DOM || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(f, h) {	f.post = function(k) {	k.method = "POST";	g(k)	};	f.get = function(k) {	k.method = "GET";	if (k.data != "undefined") {	var o = k.url,	l = k.data;	o += o.indexOf("?") == -1 ? "?" : "&";	for (var m in k.data) {	var n = l[m];	if (typeof n != "object" && typeof n != "boolean") {	o += m + "=" + n + "&"	}	}	if (o.lastIndexOf("&") == o.length - 1) {	o = o.slice(0, -1)	}	k.url = o	}	g(k)	};	var g = function(k) {	var l = e(k).create(k.method.toLowerCase(), k.url, b.Common.Function.proxy(function(n, m, o) {	if (typeof m != "undefined" && m != null) {	if (k.error) {	k.error(m)	}	} else {	if (k.success) {	k.success(n)	}	}	if (k.complete) {	k.complete(n, m, o)	}	}, this), k.async, k.headers);	l.send(k.data ? k.data : null)	},	e = function(k) {	if (window.XMLHttpRequest && (!k.crossDomain || "withCredentials" in j().getNativeObject())) {	return j()	} else {	if (window.XDomainRequest) {	return i()	} else {	b.Error.raise({	code: b.Error.Codes.REQUEST_UNSUPPORTED,	info: {	className: "xRTML.Common.Request",	methodName: "getRequestType (internal method, no docs available)"	}	})	}	}	},	j = function() {	return {	getNativeObject: function() {	if (window.XMLHttpRequest) {	return new XMLHttpRequest()	} else {	if (window.ActiveXObject) {	try {	return new ActiveXObject("Msxml2.XMLHTTP.6.0")	} catch (k) {}	try {	return new ActiveXObject("Msxml2.XMLHTTP.3.0")	} catch (k) {}	try {	return ActiveXObject("Microsoft.XMLHTTP")	} catch (k) {}	}	}	b.Error.raise({	code: b.Error.Codes.REQUEST_UNSUPPORTED,	info: {	className: "xRTML.Common.Request.XHR (internal class, no docs available)",	methodName: "getNativeObject (internal method, no docs available)"	}	})	},	create: function(n, q, l, k, m) {	var p = this;	p.xhr = this.getNativeObject();	p.callback = l;	n = n.toUpperCase();	p.xhr.onreadystatechange = function() {	try {	if (this.readyState == 4) {	if (this.status == 200) {	p.callback(this.responseText, null, this.status)	} else {	if (this.status == 0) {	p.callback(null, "The status code is 0 which likely means that the server is unavailable.", this.status)	} else {	p.callback(null, this.responseText, this.status)	}	}	}	} catch (r) {	b.Console.error(r)	}	};	p.xhr.open(n, q, !!k ? k : true);	if (m) {	for (var o in m) {	p.xhr.setRequestHeader(o, m[o])	}	} else {	p.xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=utf-8");	p.xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest")	}	return p	},	send: function(k) {	if (k && typeof(k) != "string") {	k = b.JSON.stringify(k)	}	b.Console.debug("Performing request with payload: " + k);	this.xhr.send(k)	}	}	},	i = function() {	return {	create: function(n, p, l, k) {	var o = this;	o.xdr = new XDomainRequest();	o.callback = l;	n = n.toUpperCase();	o.xdr.onload = function() {	try {	o.callback(o.xdr.responseText)	} catch (q) {	b.Error.raise({	code: b.Error.Codes.UNEXPECTED,	info: {	message: q.message,	className: "xRTML.Common.Request.XDR (internal class, no docs available)",	methodName: "onload (internal method, no docs available)"	}	})	}	};	o.xdr.onerror = function() {	try {	o.callback(null, o.xdr.responseText)	} catch (q) {	b.Error.raise({	code: b.Error.Codes.UNEXPECTED,	info: {	message: q.message,	className: "xRTML.Common.Request.XDR (internal class, no docs available)",	methodName: "onerror (internal method, no docs available)"	}	})	}	};	o.xdr.open(n, p, !!k ? k : true);	try {	o.xdr.contentType = "text/plain"	} catch (m) {}	return o	},	send: function(k) {	var l = this;	function m(n) {	if (n && typeof(n) != "string") {	n = b.JSON.stringify(n)	}	b.Console.debug("Performing request with payload: " + n);	l.xdr.send(n);	if (l.xdrTimeout) {	clearTimeout(l.xdrTimeout);	l.xdrTimeout = h	}	}	if (l.xdrReady) {	m(k)	} else {	l.xdrTimeout = setTimeout(function() {	m(k)	}, 200)	}	}	}	}	})(b.Common.Request = b.Common.Request || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(e, f) {	e.setCookie = function(g) {	var h = g.name + "=" + escape(g.value);	if (g.expires) {	h += "; expires=" + g.expires.toGMTString()	}	if (g.path) {	h += "; path=" + escape(g.path)	} else {	h += "; path=/"	}	if (g.domain) {	h += "; domain=" + escape(g.domain)	}	if (g.secure) {	h += "; secure"	}	document.cookie = h	};	e.getCookie = function(g) {	var h = document.cookie.match("(^|;) ?" + g.name + "=([^;]*)(;|$)");	if (h) {	return (unescape(h[2]))	}	return f	};	e.deleteCookie = function(g) {	g.value = "";	g.expires = new Date("Thu, 01 Jan 1970 00:00:01 GMT");	e.setCookie(g)	}	})(b.Common.Cookie = b.Common.Cookie || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(f, e) {	f.validateRequired = function(g) {	if (!g.target[g.prop] && g.target[g.prop] != 0 || (b.Common.Array.isArray(g.target[g.prop]) && g.target[g.prop].length <= 0)) {	b.Error.raise({	code: b.Error.Codes.MANDATORY_PROPERTY,	target: g.target,	info: {	property: g.prop	}	})	}	}	})(b.Common.Validator = b.Common.Validator || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(e, f) {	e.toBoolean = function(g) {	return typeof g === "undefined" ? g : (/^true|1|yes$/i).test(g)	};	e.toNumber = function(g) {	if (typeof g === "undefined") {	return g	}	if (typeof g == "number") {	return g	}	if (typeof g == "string") {	return b.Common.String.trim(g) == "" ? 0 : window.Number(g)	}	};	e.toDate = function(j) {	var i = j.split(" "),	g = i[0].split("-"),	h = i[1].split(":");	return new Date(parseInt(g[2]), parseInt(g[1]) - 1, parseInt(g[0]), parseInt(h[0]), parseInt(h[1]), parseInt(h[2]), 0)	}	})(b.Common.Converter = b.Common.Converter || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(g, f) {	var e = function() {	return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1)	};	g.guidGenerator = function() {	return (e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e())	};	g.idGenerator = function() {	return (e() + e())	}	})(b.Common.Util = b.Common.Util || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(e, f) {	e.proxy = function(h, g) {	if (typeof h === "function" && typeof g === "object") {	return function() {	return h.apply(g, arguments)	}	}	};	e.parse = function(j) {	if (typeof j == "function") {	return j	}	if (typeof j != "string") {	return null	}	var g = "",	h = "return " + j + "(";	if (arguments.length != 1) {	for (var k = 1; k < arguments.length; ++k) {	g += arguments[k] + ","	}	g = g.substring(0, g.length - 1)	}	h += g + ");";	return new window.Function(g, h)	};	e.paramNames = function(g) {	var h = g.toString();	return h.match(/\(.*?\)/)[0].replace(/[()]/gi, "").replace(/\s/gi, "").split(",")	}	})(b.Common.Function = b.Common.Function || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	(function(f, i) {	b.Event.extend(f);	f.ieVersion = (function() {	var k = -1;	if (navigator.appName == "Microsoft Internet Explorer") {	var l = navigator.userAgent;	var j = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");	if (j.exec(l) != null) {	k = parseFloat(RegExp.$1)	}	}	return k	})();	var e = window.document.hasFocus ? window.document.hasFocus() : false;	f.isPageFocused = function() {	return e	};	var h = function(j) {	if (f.isPageFocused()) {	return	}	e = true;	setTimeout(function() {	f.fire({	focus: {	isPageFocused: f.isPageFocused()	}	})	}, 10)	};	var g = function(j) {	if (!f.isPageFocused()) {	return	}	e = false;	setTimeout(function() {	f.fire({	blur: {	isPageFocused: f.isPageFocused()	}	})	}, 10)	};	if (f.ieVersion < 9 && f.ieVersion > 0) {	b.Event.bind(window.document, {	focusout: g,	focusin: h	})	} else {	b.Event.bind(window, {	blur: g,	focus: h	})	}	})(b.Common.Browser = b.Common.Browser || {}) 	})(b.Common = b.Common || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, g) {	var d = {},	e = function(h) {	for (var i in d) {	if (d[i].id === h) {	return d[i]	}	}	return g	},	f = {	add: function(h) {	var i = h.connection.id;	if (!this.bConnections[i]) {	this.bConnections[i] = [];	h.connection.bind({	connect: this.send	})	}	this.bConnections[i].push(h.message)	},	bConnections: {},	send: function(j) {	var l = f.bConnections[j.target.id],	h = j.target;	for (var k = 0; k < l.length; ++k) {	h.send(l[k])	}	h.unbind({	connect: f.send	});	f.bConnections[j.target.id] = g	}	};	c.create = function(h) {	h.attribute = function(i) {	return b.Common.Object.insensitiveGetter(this, i)	};	return this.add(new this.Connection(h))	};	c.add = function(h) {	if (this.getById(h.id)) {	throw new b.Error({	code: b.Error.Codes.CONNECTION_DUPLICATE,	target: h	})	}	this.Connections.push(h.id);	this.fire({	connectionCreate: {	connection: h	}	});	d[h.internalId] = h;	h.bind({	xrtmlMessage: function(i) {	c.fire({	xrtmlMessage: {	connection: i.target,	channel: i.channel,	message: i.message	}	})	},	message: function(i) {	c.fire({	message: {	connection: i.target,	channel: i.channel,	message: i.message	}	})	}	});	h.bind({	dispose: function(m) {	var j = m.target.internalId,	l = d[j];	d[j] = null;	delete d[j];	for (var n = 0, k = c.Connections, o = k.length; n < o; n++) {	if (k[n] === m.target.id) {	k.splice(n, 1);	break	}	}	c.fire({	connectionDispose: {	connection: m.target	}	})	}	});	return h	};	c.getById = function(h) {	return d[h] || e(h)	};	c.dispose = function(i) {	var h = this.getById(i);	if (h) {	h.dispose()	} else {	b.Console.warn("ConnectionManager: Connection " + i + " was not found.")	}	};	c.addChannel = function(h) {	var i = this.getById(h.connectionId);	if (typeof i === "undefined") {	i = this.getConnectionById(h.connectionId);	if (i === null) {	b.Error.raise({	code: b.Error.Codes.CONNECTION_NOT_FOUND,	target: this,	info: {	className: "xRTML.ConnectionManager",	methodName: "addChannel"	}	})	}	}	i.createChannel(h)	};	c.sendMessage = function(k) {	var h = null;	for (var j = 0; j < k.connections.length; ++j) {	h = this.getById(k.connections[j]);	if (h) {	if (h.isConnected()) {	h.send(k)	} else {	f.add({	connection: h,	message: {	channel: k.channel,	content: k.content,	sendOnly: k.sendOnly	}	});	b.Console.debug("ConnectionManager: Connection with id " + k.connections[j] + " is not connected. Buffering message:");	b.Console.debug(k)	}	} else {	b.Error.raise({	code: b.Error.Codes.CONNECTION_NOT_FOUND,	target: this,	info: {	className: "xRTML.ConnectionManager",	methodName: "sendMessage"	}	})	}	}	};	c.Connections = [];	b.Event.extend(c) 	})(b.ConnectionManager = b.ConnectionManager || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	c.Connection = function(f) {	var l = null,	e = true;	b.Event.extend(this);	this.internalId = b.Common.Util.guidGenerator();	this.id = f.attribute("id") || this.internalId;	this.appKey = f.attribute("appKey");	this.authToken = f.attribute("authToken");	this.sendRetries = parseInt(f.attribute("sendRetries")) || 5;	this.sendInterval = parseInt(f.attribute("sendInterval")) || 1000;	this.timeout = f.attribute("timeout") || b.Config.connectionTimeout;	this.connectAttempts = f.attribute("connectAttempts") || b.Config.connectionAttempts;	this.connectionAttemptsCounter = 0;	this.autoConnect = typeof f.attribute("autoConnect") == "undefined" ? true : b.Common.Converter.toBoolean(f.attribute("autoConnect"));	this.metadata = f.attribute("metadata");	this.serverType = f.attribute("serverType") || "IbtRealTimeSJ";	this.url = f.attribute("url") || b.Console.error("Connection " + this.id + ": ORTC Server URL must be set.");	this.isCluster = typeof f.attribute("isCluster") == "undefined" ? true : b.Common.Converter.toBoolean(f.attribute("isCluster"));	this.announcementSubChannel = f.attribute("announcementSubChannel");	this.heartbeatActive = typeof f.attribute("heartbeatActive") == "undefined" ? b.Config.heartbeatActive : b.Common.Converter.toBoolean(f.attribute("heartbeatActive"));	this.heartbeatFails = typeof f.attribute("heartbeatFails") == "undefined" ? b.Config.heartbeatFails : b.Common.Converter.toNumber(f.attribute("heartbeatFails"));	this.heartbeatTime = typeof f.attribute("heartbeatTime") == "undefined" ? b.Config.heartbeatTime : b.Common.Converter.toNumber(f.attribute("heartbeatTime"));	this.protocol = f.protocol || null;	this.channels = {};	var o = b.Common.Function.parse,	m = b.Common.Function.proxy;	this.messageAdapter = o(f.attribute("messageAdapter"), "message");	this.bind({	create: o(f.attribute("onCreate"), "e"),	connect: o(f.attribute("onConnect"), "e"),	channelCreate: o(f.attribute("onChannelCreate"), "e"),	disconnect: o(f.attribute("onDisconnect"), "e"),	subscribe: o(f.attribute("onSubscribe"), "e"),	unsubscribe: o(f.attribute("onUnsubscribe"), "e"),	exception: o(f.attribute("onException"), "e"),	reconnect: o(f.attribute("onReconnect"), "e"),	reconnecting: o(f.attribute("onReconnecting"), "e"),	message: o(f.attribute("onMessage"), "e"),	dispose: o(f.attribute("onDispose"), "e"),	xrtmlMessage: o(f.attribute("onXrtmlMessage"), "e")	});	var k = m(function(p, i, q) {	this.process({	channel: i,	message: q	})	}, this),	j = function(i) {	l = i.createClient();	l.setId(this.internalId);	l.setConnectionTimeout(this.timeout);	l.setConnectionMetadata(typeof this.metadata == "object" ? b.JSON.stringify(this.metadata) : this.metadata);	if (this.protocol) {	l.setProtocol(this.protocol)	}	if (typeof l.setHeartbeatActive != "undefined") {	l.setHeartbeatActive(this.heartbeatActive);	l.setHeartbeatFails(this.heartbeatFails);	l.setHeartbeatTime(this.heartbeatTime)	} else {	if (this.heartbeatActive) {	b.Console.warn("The heartbeat feature is not available for the ORTC version loaded.")	}	}	l.setAnnouncementSubChannel(this.announcementSubChannel);	!this.isCluster ? l.setUrl(this.url) : l.setClusterUrl(this.url);	l.onConnected = m(function(r) {	for (var q in this.channels) {	var p = this.channels[q];	if (p.subscribe) {	r.subscribe(p.name, p.subscribeOnReconnect, k)	}	}	this.fire({	connect: {}	})	}, this);	l.onDisconnected = m(function(p) {	this.fire({	disconnect: {}	})	}, this);	l.onSubscribed = m(function(q, p) {	this.channels[p].fire({	subscribe: {}	});	this.fire({	subscribe: {	channel: p	}	})	}, this);	l.onUnsubscribed = m(function(q, p) {	var r = this.channels[p];	delete this.channels[p];	r.fire({	unsubscribe: {}	});	this.fire({	unsubscribe: {	channel: p	}	})	}, this);	l.onException = m(function(q, p) {	this.fire({	exception: {	message: p	}	});	b.Error.raise({	code: b.Error.Codes.ORTC_EXCEPTION,	target: this,	info: {	className: "ORTCClient",	methodName: "onException",	message: p	}	})	}, this);	l.onReconnected = m(function(p) {	this.connectionAttemptsCounter = 0;	this.fire({	reconnect: {}	})	}, this);	l.onReconnecting = m(function(p) {	if (this.connectionAttemptsCounter >= this.connectAttempts) {	p.disconnect()	} else {	this.connectionAttemptsCounter++;	this.fire({	reconnecting: {}	})	}	}, this);	this.fire({	create: {}	});	if (this.autoConnect) {	l.connect(this.appKey, this.authToken)	}	};	var n = function(i, p) {	if (this.isCreated() && this.isConnected()) {	this.send(i)	} else {	if (++p <= this.sendRetries) {	setTimeout(m(function() {	m(n, this)(i, p)	}, this), this.sendInterval);	b.Console.debug("Message " + i.content + " not sent to channel " + i.channel + ". Retry " + p + "/" + this.sendRetries + " in " + this.sendInterval / 1000 + " seconds.")	} else {	b.Console.debug("Message " + i.content + " not sent to channel " + i.channel + ". Discarding message.")	}	}	};	this.active = function(i) {	if (!i) {	return e	}	e = b.Common.Converter.toBoolean(i);	return e	};	this.dispose = function() {	if (this.isConnected()) {	this.disconnect()	}	this.fire({	dispose: {}	})	};	this.createChannel = function(i) {	i.attribute = function(q) {	return b.Common.Object.insensitiveGetter(this, q)	};	var p = {	connectionId: i.attribute("connectionId") || this.id,	name: i.attribute("name"),	subscribeOnReconnect: typeof i.attribute("subscribeOnReconnect") == "undefined" ? true : b.Common.Converter.toBoolean(i.attribute("subscribeOnReconnect")),	subscribe: typeof i.attribute("subscribe") == "undefined" ? true : b.Common.Converter.toBoolean(i.attribute("subscribe")),	messageAdapter: o(i.attribute("messageAdapter", "message"))	};	b.Event.extend(p);	p.bind({	message: o(i.attribute("onMessage"), "e"),	subscribe: o(i.attribute("onSubscribe"), "e"),	unsubscribe: o(i.attribute("onUnsubscribe"), "e"),	xrtmlMessage: o(i.attribute("onXrtmlMessage"), "e")	});	this.channels[i.name] = p;	this.fire({	channelCreate: {	channel: p	}	});	return p	};	this.process = function(p) {	var i = p.channel,	q = p.message;	if (q.substring(0, 15) == "_X_SEND_ONLY_X_") {	if (this.internalId == q.substring(15, 51)) {	return	}	q = q.substring(54)	}	if (this.active()) {	b.Async.series([b.Common.Function.proxy(function(r) {	if (this.messageAdapter) {	try {	q = this.messageAdapter(q)	} catch (s) {	b.Error.raise({	code: b.Error.Codes.CONNECTION_ADAPT,	target: this,	info: {	className: "xRTML.ConnectionManager.Connection",	methodName: "process",	originalMessage: q,	message: s.message	}	})	}	}	r()	}, this), b.Common.Function.proxy(function(r) {	this.fire({	message: {	channel: i,	message: q	}	});	r()	}, this), b.Common.Function.proxy(function(r) {	if (b.MessageManager.isValid(q)) {	this.fire({	xrtmlMessage: {	message: b.MessageManager.toJson(q).xrtml,	channel: i	}	})	}	r()	}, this)]);	if (this.channels[i]) {	b.Async.series([b.Common.Function.proxy(function(r) {	if (this.channels[i].messageAdapter) {	try {	q = this.channels[i].messageAdapter(q)	} catch (s) {	b.Error.raise({	code: b.Error.Codes.CONNECTION_ADAPT,	target: this.channels[i],	info: {	className: "xRTML.ConnectionManager.Channel",	methodName: "process",	originalMessage: q,	message: s.message	}	})	}	}	r()	}, this), b.Common.Function.proxy(function(r) {	this.channels[i].fire({	message: {	message: q	}	});	r()	}, this), b.Common.Function.proxy(function(r) {	if (b.MessageManager.isValid(q)) {	this.channels[i].fire({	xrtmlMessage: {	message: b.MessageManager.toJson(q).xrtml	}	})	}	r()	}, this)])	}	} else {	b.Console.debug("Connection " + this.id + " : Not active. Message received wasn't processed.")	}	};	this.send = function(i) {	var p = i.channel,	q = i.content;	if (this.isCreated() && this.isConnected()) {	if (this.active()) {	var r = typeof q === "object" ? q.stringify() : q;	if (i.sendOnly) {	r = "_X_SEND_ONLY_X_" + this.internalId + "_X_" + r	}	l.send(p, r);	b.Console.debug("Connection " + this.id + ": Message sent to channel " + p);	b.Console.debug(q)	} else {	b.Console.debug("Connection " + this.id + ": Not active. Message not sent to channel " + p);	b.Console.debug(q)	}	} else {	setTimeout(m(function() {	m(n, this)(i, 0)	}, this), this.sendInterval);	b.Console.debug("Connection " + this.id + ": Not ready. Message not sent to channel " + p + ". Retrying in " + this.sendInterval / 1000 + " seconds.");	b.Console.debug(q)	}	return	};	this.connect = function(i) {	if (this.isCreated()) {	if (i) {	this.appKey = i.appKey;	this.authToken = i.authToken	}	l.connect(this.appKey, this.authToken)	} else {	b.Error.raise({	code: b.Error.Codes.ORTC_UNAVAILABLE,	target: this,	info: {	className: "xRTML.ConnectionManager.Connection",	methodName: "connect"	}	})	}	};	this.disconnect = function() {	this.isConnected() ? l.disconnect() : b.Error.raise({	code: b.Error.Codes.ORTC_DISCONNECTED,	target: this,	info: {	className: "xRTML.ConnectionManager.Connection",	methodName: "disconnect"	}	})	};	this.subscribe = function(i) {	if (!this.channels[i.name]) {	i = this.createChannel(i)	}	l.subscribe(this.channels[i.name].name, this.channels[i.name].subscribeOnReconnect, k)	};	this.unsubscribe = function(i) {	l.unsubscribe(i)	};	this.isCreated = function() {	return l != null	};	this.isConnected = function() {	return this.isCreated() ? l.getIsConnected() : false	};	this.isSubscribed = function(i) {	return this.isConnected() ? l.isSubscribed(i) : false	};	this.getMetadata = function() {	if (this.isCreated()) {	try {	return b.JSON.parse(l.getConnectionMetadata())	} catch (i) {	return l.getConnectionMetadata()	}	} else {	b.Error.raise({	code: b.Error.Codes.ORTC_UNAVAILABLE,	target: this,	info: {	className: "xRTML.ConnectionManager.Connection",	methodName: "getMetadata"	}	})	}	};	this.setMetadata = function(i) {	return this.isCreated() ? l.setConnectionMetadata(typeof i == "object" ? b.JSON.stringify(i) : i) : b.Error.raise({	code: b.Error.Codes.ORTC_UNAVAILABLE,	target: this,	info: {	className: "xRTML.ConnectionManager.Connection",	methodName: "setMetadata"	}	})	};	this.getAnnouncementSubChannel = function() {	return this.isCreated() ? l.getAnnouncementSubChannel() : b.Error.raise({	code: b.Error.Codes.ORTC_UNAVAILABLE,	target: this,	info: {	className: "xRTML.ConnectionManager.Connection",	methodName: "getAnnouncementSubChannel"	}	})	};	this.getProtocol = function() {	return this.isConnected() ? l.getProtocol() : b.Error.raise({	code: b.Error.Codes.ORTC_UNAVAILABLE,	target: this,	info: {	className: "xRTML.ConnectionManager.Connection",	methodName: "getProtocol"	}	})	};	this.setProtocol = function(i) {	if (this.isCreated()) {	l.setProtocol(i)	}	};	if (typeof loadOrtcFactory != "undefined") {	loadOrtcFactory(this.serverType, m(j, this))	} else {	b.bind({	ready: m(function() {	m(loadOrtcFactory, this)(this.serverType, m(j, this))	}, this)	})	}	this.getHeartbeatActive = function() {	if (this.isCreated()) {	if (typeof l.getHeartbeatActive != "undefined") {	return l.getHeartbeatActive()	} else {	b.Console.warn("The heartbeat feature is not available for the ORTC version loaded.")	}	}	};	this.getHeartbeatFails = function() {	if (this.isCreated()) {	if (typeof l.getHeartbeatFails != "undefined") {	return l.getHeartbeatFails()	} else {	b.Console.warn("The heartbeat feature is not available for the ORTC version loaded.")	}	}	};	this.getHeartbeatTime = function() {	if (this.isCreated()) {	if (typeof l.getHeartbeatTime != "undefined") {	return l.getHeartbeatTime()	} else {	b.Console.warn("The heartbeat feature is not available for the ORTC version loaded.")	}	}	};	this.setHeartbeatActive = function(i) {	if (this.isCreated()) {	if (typeof l.setHeartbeatActive != "undefined") {	l.setHeartbeatActive(i)	} else {	b.Console.warn("The heartbeat feature is not available for the ORTC version loaded.")	}	}	};	this.setHeartbeatFails = function(i) {	if (this.isCreated()) {	if (typeof l.setHeartbeatFails != "undefined") {	l.setHeartbeatFails(i)	} else {	b.Console.warn("The heartbeat feature is not available for the ORTC version loaded.")	}	}	};	this.setHeartbeatTime = function(i) {	if (this.isCreated()) {	if (typeof l.setHeartbeatTime != "undefined") {	l.setHeartbeatTime(i)	} else {	b.Console.warn("The heartbeat feature is not available for the ORTC version loaded.")	}	}	};	if (f.attribute("channels")) {	var g = f.attribute("channels");	for (var h = 0; h < g.length; ++h) {	this.createChannel(g[h])	}	}	} 	})(b.ConnectionManager = b.ConnectionManager || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(j, l) {	var i = {},	k = {},	d = null,	f = function(m) {	for (var n in i) {	if (i[n].id === m) {	return i[n]	}	}	b.Console.log("Tag with id: " + m + " was not found.");	return l	},	e = function(n) {	if (n.base != "Tag") {	var m = e(new k[n.base]());	n = m.extend(n)	} else {	n = d.extend(n)	}	return n	},	c = function(m) {	return b.Common.Object.insensitiveGetter(this, m)	},	h = [];	if (!b.domLoaded()) {	function g() {	var m;	for (var n = 0; n < h.length; ++n) {	m = h[n];	b.Console.debug("TagManager: Creating a " + m.tagObject.name + " tag after the HTML page has been fully loaded.");	b.TagManager.create(m.tagObject, m.fn)	}	h = [];	b.Event.unbind(window, {	load: g	})	}	b.Event.bind(window, {	load: g	})	}	j.register = function(n) {	var m = n.name;	if (m) {	if (m != "Tag") {	if (!k[m]) {	if (!n.base) {	n.base = "Tag"	}	k[m] = n.struct;	k[m].prototype.base = n.base;	k[m].prototype.name = n.name;	k[m].prototype.decorators = n.decorators;	k[m].prototype["abstract"] = n["abstract"] || false;	k[m].prototype.resources = n.resources || {}	}	} else {	d = n.struct	}	} else {	b.Error.raise({	code: b.Error.Codes.TAG_INVALID_CONFIG,	target: this,	info: {	message: "Please provide the tag name.",	className: "xRTML.TagManager",	methodName: "register"	}	})	}	};	j.create = function(p, n) {	try {	if ((p.target || p.template) && !b.domLoaded()) {	h.push({	tagObject: p,	fn: n	});	b.Console.debug("TagManager: Creating a " + p.name + " tag was postponed until HTML page has been fully loaded.");	return	}	p.attribute = c;	if (!k[p.name]) {	throw b.Error.raise({	code: b.Error.Codes.TAG_UNREGISTERED,	info: {	tagName: p.name,	className: "xRTML.TagManager",	methodName: "create"	}	})	}	var o = new k[p.name]();	if (!!o["abstract"]) {	throw b.Error.raise({	code: b.Error.Codes.TAG_ABSTRACT,	target: this,	info: {	tag: o,	className: "xRTML.TagManager",	methodName: "create"	}	})	}	var q = o.base == "Tag" ? d.extend(o) : e(o);	q = new q(p, function(r) {	i[r.internalId] = r;	j.fire({	tagCreate: {	tag: r	}	});	b.Async.series([function(s) {	r.fire({	postInit: {}	});	r.bind({	dispose: function(u) {	var v = u.target.internalId;	var t = i[v];	i[v] = null;	delete i[v];	j.fire({	tagDispose: {	tag: u.target	}	})	}	});	s()	}, function(s) {	if (n) {	n(r);	s()	}	}])	})	} catch (m) {	b.Error.raise({	code: b.Error.Codes.TAG_NOT_CREATED,	target: this,	info: {	id: p.id,	className: "xRTML.TagManager." + p.name,	methodName: "init",	message: m.message,	tagConfig: p	}	})	}	};	j.getById = function(m) {	return i[m] || f(m)	};	j.getClasses = function() {	var n = [];	for (var m in k) {	n.push(m)	}	return n	};	b.Event.extend(j);	b.DomParser.bind({	tagsLoad: function(m) {	var o = m.tags;	for (var n = 0; n < o.length; ++n) {	j.create(o[n])	}	}	}) 	})(b.TagManager = b.TagManager || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	b.TagManager.register({	name: "Tag",	"abstract": true,	struct: b.Class.extend(new function() {	this.init = function(e) {	b.Event.extend(this);	var f = b.Common.Function.parse;	this.bind({	preInit: f(e.attribute("onPreInit")),	postInit: f(e.attribute("onPostInit")),	active: f(e.attribute("onActive")),	preProcess: f(e.attribute("onPreProcess")),	postProcess: f(e.attribute("onPostProcess")),	dispose: f(e.attribute("onDispose"))	});	this.fire({	preInit: {}	});	this.internalId = b.Common.Util.guidGenerator();	this.id = e.attribute("id") || this.internalId;	this.connections = e.attribute("connections") || [];	this.channelId = e.attribute("channelId");	this.triggers = e.attribute("triggers") || [];	this.receiveOwnMessages = !!e.attribute("receiveOwnMessages");	var d = e.attribute("resources") || [];	for (var c = 0; c < d.length; c++) {	this.resources[d[c].name.toLowerCase()] = d[c].src	}	this.target = (function() {	var g = b.Sizzle(e.attribute("target"));	if (g.length == 0) {	g.push(document.body)	}	return g	})();	this.template = e.attribute("template");	this.active = e.attribute("active") ? b.Common.Converter.toBoolean(e.attribute("active")) : true;	this.storage = e.attribute("storage");	if (!this.storage) {	this.storageId = e.attribute("storageId");	this.storageKey = e.attribute("storageKey");	if (this.storageId || this.storageKey) {	this.storage = {	id: this.storageId,	key: this.storageKey || ""	}	}	} else {	if (!this.storage.key) {	this.storage.key = ""	}	this.storageId = this.storage.id;	this.storageKey = this.storage.key	}	};	this.activate = function(c) {	this.active = b.Common.Converter.toBoolean(c.active);	this.fire({	active: {	value: this.active	}	})	};	this.process = function(c) {};	this.sendMessage = function(c) {	b.ConnectionManager.sendMessage({	connections: c.connectionId ? [c.connectionId] : this.connections,	channel: c.channel || this.channelId,	content: b.MessageManager.create({	trigger: c.trigger ? [c.trigger] : this.triggers,	action: c.action,	data: c.data,	senderId: this.internalId	})	})	};	this.dispose = function() {	this.target = null;	this.fire({	dispose: {}	})	};	this.registerTrigger = function(c) {	b.MessageBroker.registerTrigger({	name: c,	tagId: this.internalId	});	this.triggers.push(c)	};	this.unregisterTrigger = function(d) {	b.MessageBroker.unregisterTrigger({	name: d,	tagId: this.internalId	});	for (var c = 0; c < this.triggers.length; c++) {	if (this.triggers[c] == d) {	this.triggers.splice(c, 1)	}	}	};	this.registerResources = function(c) {	for (var d = 0; d < c.length; d++) {	this.resources[c[d].name.toLowerCase()] = c[d].src	}	};	this.unregisterResources = function(c) {	for (var d = 0; d < c.length; d++) {	if (this.resources[c[d].name.toLowerCase()]) {	this.resources[c[d].name.toLowerCase()] = null;	delete this.resources[c[d].name.toLowerCase()]	}	}	}	}) 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, h) {	var f = {},	e = function(o) {	if (f[o.name]) {	for (var n in f[o.name]) {	var m = b.TagManager.getById(n),	l = o.message;	if (m.active || l.data.action == "activate") {	if (m.receiveOwnMessages || !l.senderId || m.internalId !== l.senderId) {	var k = l.data,	j = l.action;	b.Async.series([function(p) {	m.fire({	preProcess: {	data: k	}	});	p()	}, function(p) {	if (j) {	if (m[j]) {	m[j].call(m, k);	m.fire({	process: {	data: k,	action: j	}	});	return p()	} else {	b.Console.warn("Tried to perform an action " + j + " which is not defined on a " + m.name + " with id " + m.id + ".")	}	}	m.process(k);	m.fire({	process: {	data: k	}	});	p()	}, function(p) {	m.fire({	postProcess: {	data: k	}	});	p()	}])	}	} else {	b.Error.raise({	code: b.Error.Codes.TAG_INACTIVE,	target: m,	className: "xRTML.MessageBroker",	methodName: "triggerCall (internal method, no docs available)"	})	}	}	} else {	b.Console.log("Trigger " + o.name + " is not registered with any xRTML Tag.")	}	},	d = function(j) {	var l = j.tag,	m;	for (var k = 0; k < l.triggers.length; ++k) {	m = l.triggers[k];	c.registerTrigger({	tagId: l.internalId,	name: m	})	}	},	i = function(j) {	var l = j.tag,	m;	for (var k = 0; k < l.triggers.length; ++k) {	m = l.triggers[k];	c.unregisterTrigger({	tagId: l.internalId,	name: m	})	}	},	g = function(j) {	var l = j.message.trigger;	if (typeof l == "string") {	e({	name: l,	message: j.message	})	} else {	if (l instanceof Array) {	for (var k = 0; k < l.length; ++k) {	j.message.trigger = l[k];	e({	name: l[k],	message: j.message	})	}	}	}	};	c.registerTrigger = function(j) {	if (!f[j.name]) {	f[j.name] = {}	}	f[j.name][j.tagId] = h;	c.fire({	triggerRegister: {	trigger: j	}	})	};	c.unregisterTrigger = function(k) {	var j = f[k.name];	if (!j) {	b.Console.warn("The trigger " + k.name + " is not registered.");	return	}	if (j.hasOwnProperty(k.tagId)) {	delete f[k.name][k.tagId];	if (!b.Common.Object.keys(j).length) {	delete f[k.name]	}	c.fire({	triggerUnregister: {	trigger: k	}	})	} else {	b.Console.warn("The tag " + k.tagId + " is not listening to messages with the trigger " + k.name + ".")	}	};	b.Event.extend(c);	b.TagManager.bind({	tagCreate: d,	tagDispose: i	});	b.ConnectionManager.bind({	xrtmlMessage: g	}) 	})(b.MessageBroker = b.MessageBroker || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(c, d) {	c.isValid = function(g) {	try {	if (typeof g === "string") {	var f = g.substring(g.indexOf('"'), g.indexOf('"', g.indexOf('"') + 1) + 1);	if ('"xrtml"' != b.Common.String.trim(f)) {	return false	}	b.JSON.parse(g);	return true	}	if ((typeof g === "object") && g.xrtml) {	return true	}	return false	} catch (e) {	b.Error.raise({	code: b.Error.Codes.INVALID_MESSAGE,	target: this,	message: e.message,	info: {	className: "xRTML.MessageManager",	methodName: "isValid"	}	})	}	};	c.toJson = function(f) {	if (typeof f === "string" && c.isValid(f)) {	var e = b.JSON.parse(f).xrtml;	var g = {	xrtml: {	senderId: e.s,	trigger: e.t,	action: e.a,	data: e.d	}	};	return g	}	return f	};	c.stringify = function(e) {	var f = {	xrtml: {	s: e.senderId,	t: e.trigger,	a: e.action,	d: e.data && typeof e.data != "object" ? b.JSON.parse(e.data) : e.data	}	};	return b.JSON.stringify(f)	};	c.create = function(e) {	e.data = e.data && typeof e.data != "object" ? b.JSON.parse(e.data) : e.data;	e.stringify = function() {	return c.stringify(this)	};	return e	} 	})(b.MessageManager = b.MessageManager || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(e, f) {	var d = function(i, j) {	if (b.Config.remoteTrace) {	var g = null;	try {	g = b.JSON.stringify(j)	} catch (h) {}	var k = b.MessageManager.create({	data: {	message: i,	content: g	}	});	b.ConnectionManager.sendMessage(b.TraceMonitor.channelId, k)	}	};	e.channelId = "trace";	b.Console.bind({	error: function(g) {	d("Error", g.error)	}	});	b.ConnectionManager.bind({	connectionCreate: function(h) {	var g = h.connection;	d("Connection found: \n AppKey: " + g.appKey + " \n AuthToken: " + g.authToken + " \n Url: " + g.url, g);	g.bind({	create: function(i) {	var j = "Connection " + i.target.id + " created. " + (i.target.autoConnect ? "Connecting..." : "Waiting for explicit connect...");	b.Console.debug(j);	d(j, i.target)	},	connect: function(i) {	var j = "Connection " + i.target.id + " established. Using " + i.target.getProtocol() + " protocol.";	b.Console.debug(j);	d(j, i.target)	},	disconnect: function(i) {	var j = "Connection " + i.target.id + " closed.";	b.Console.debug(j);	d(j, i.target)	},	subscribe: function(i) {	var j = "Connection " + i.target.id + ": Channel " + i.channel + " subscribed.";	b.Console.debug(j);	d(j, i.target)	},	unsubscribe: function(i) {	var j = "Connection " + i.target.id + ": Channel " + i.channel + " unsubscribed.";	b.Console.debug(j);	d(j, i.target)	},	exception: function(i) {	var j = "Connection " + i.target.id + " threw an exception: " + i.event;	b.Console.debug(j);	d(j, i.target)	},	reconnect: function(i) {	var j = "Connection " + i.target.id + " is restored. Using " + i.target.getProtocol() + " protocol.";	b.Console.debug(j);	d(j, i.target)	},	reconnecting: function(i) {	var j = "Connection " + i.target.id + " was lost. ";	if (i.target.connectionAttemptsCounter >= i.target.connectAttempts) {	j += "Maximum number of attempts reached: " + i.target.connectAttempts + " Stop trying to reconnect."	} else {	j += "Trying to reconnect. Attempt " + i.target.connectionAttemptsCounter + " out of " + i.target.connectAttempts	}	b.Console.debug(j);	d(j, i.target)	},	message: function(i) {	var k = "Connection " + i.target.id + ": Message received from channel " + i.channel,	l;	try {	l = b.JSON.parse(i.message)	} catch (j) {	l = i.message	}	b.Console.debug(k);	b.Console.debug(l);	d(l, i.target)	},	xrtmlMessage: function(i) {	var j = "Connection " + i.target.id + ": xRTML Message received from channel " + i.channel;	b.Console.debug(j);	b.Console.debug(i.message);	d(i.message, i.target)	}	})	}	});	var c = function(g) {	var h = "Tag " + g.target.id + ": " + g.type + " message";	b.Console.debug(h);	b.Console.debug(g.data);	d(h, g.data)	};	b.TagManager.bind({	tagCreate: function(g) {	var h = g.tag;	b.Console.debug("Tag of type " + h.name + " created with id " + (h.id || h.internalId));	b.Console.debug(h);	h.bind({	init: function(i) {	b.Console.debug("")	},	load: function(i) {	b.Console.debug("")	},	active: function(i) {	b.Console.debug("")	},	process: c,	preProcess: c,	postProcess: c	})	},	tagDispose: function(g) {	var i = g.tag,	h = "Tag of type " + g.name + " with id " + (i.id || i.internalId) + " disposed.";	b.Console.debug(h);	d(h, g.tag)	}	});	b.MessageBroker.bind({	triggerRegister: function(g) {	var h = "Tag " + g.trigger.tagId + " registered trigger: " + g.trigger.name;	b.Console.debug(h);	d(h, g.target)	},	triggerUnregister: function(g) {	var h = "Tag " + g.trigger.tagId + " unregistered trigger: " + g.trigger.name;	b.Console.debug(h);	d(h, g.target)	}	});	b.DomParser.bind({	configLoad: function(g) {	b.Console.debug("DOM Parser: the following connections were read from DOM: ");	b.Console.debug(g.config.connections);	b.Console.debug("DOM Parser: the following storages were read from DOM: ");	b.Console.debug(g.config.storages)	},	tagsLoad: function(g) {	b.Console.debug("DOM Parser: the following tags were read from DOM: ");	b.Console.debug(g.tags)	}	}) 	})(b.TraceMonitor = b.TraceMonitor || {}) })(window.xRTML = window.xRTML || {}); (function(d, c) { 	var b = function() {	d.isReady = true;	d.fire({	ready: {}	}) 	}; 	(typeof loadOrtcFactory == "undefined") ? d.Config.ortcLibrary(((document.location.protocol == "file:") ? "http:" : document.location.protocol) + "//www73.bb.com.br/web/static/visitor/scripts/ortcstandalone.js", b): b(); 	var a = function() {	d.DomParser.read();	if (d.isReady) {	d.isLoaded = true;	d.fire({	load: {}	})	} else {	d.ready(function() {	d.isLoaded = true;	d.fire({	load: {}	})	})	} 	}; 	d.domLoaded() ? a() : d.Event.bind(window, {	load: a 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(e, f) {	var d = (typeof window.jQuery != "undefined" && parseFloat(window.jQuery().jquery) < 1.3) ? f : window.jQuery;	var c = f;	(function(l, h, j, i, k) {	var g = true;	! function(m) {	m(c = {})	}(function(t) {	var s = typeof t !== "undefined" ? t : {};	s.exportSymbol = function(C, D) {	var F = C.split(".");	var E = s;	for (var B = 0; B < F.length - 1; B++) {	E = E[F[B]]	}	E[F[F.length - 1]] = D	};	s.exportProperty = function(C, D, B) {	C[D] = B	};	s.version = "2.2.1";	s.exportSymbol("version", s.version);	s.utils = new(function() {	var N = /^(\s|\u00A0)+|(\s|\u00A0)+$/g;	var K = {},	M = {};	var J = /Firefox\/2/i.test(j.userAgent) ? "KeyboardEvent" : "UIEvents";	K[J] = ["keyup", "keydown", "keypress"];	K.MouseEvents = ["click", "dblclick", "mousedown", "mouseup", "mousemove", "mouseover", "mouseout", "mouseenter", "mouseleave"];	for (var C in K) {	var L = K[C];	if (L.length) {	for (var D = 0, I = L.length; D < I; D++) {	M[L[D]] = C	}	}	}	var B = {	propertychange: true	};	var E = (function() {	var Q = 3,	O = h.createElement("div"),	P = O.getElementsByTagName("i");	while (O.innerHTML = "<!--[if gt IE " + (++Q) + "]><i></i><![endif]-->", P[0]) {}	return Q > 4 ? Q : k	}());	var G = E === 6,	H = E === 7;	function F(O, P) {	if ((s.utils.tagNameLower(O) !== "input") || !O.type) {	return false	}	if (P.toLowerCase() != "click") {	return false	}	var Q = O.type;	return (Q == "checkbox") || (Q == "radio")	}	return {	fieldsIncludedWithJsonPost: ["authenticity_token", /^__RequestVerificationToken(_.*)?$/],	arrayForEach: function(P, O) {	for (var Q = 0, R = P.length; Q < R; Q++) {	O(P[Q])	}	},	arrayIndexOf: function(O, Q) {	if (typeof Array.prototype.indexOf == "function") {	return Array.prototype.indexOf.call(O, Q)	}	for (var P = 0, R = O.length; P < R; P++) {	if (O[P] === Q) {	return P	}	}	return -1	},	arrayFirst: function(O, R, S) {	for (var P = 0, Q = O.length; P < Q; P++) {	if (R.call(S, O[P])) {	return O[P]	}	}	return null	},	arrayRemoveItem: function(O, Q) {	var P = s.utils.arrayIndexOf(O, Q);	if (P >= 0) {	O.splice(P, 1)	}	},	arrayGetDistinctValues: function(O) {	O = O || [];	var R = [];	for (var P = 0, Q = O.length; P < Q; P++) {	if (s.utils.arrayIndexOf(R, O[P]) < 0) {	R.push(O[P])	}	}	return R	},	arrayMap: function(O, R) {	O = O || [];	var S = [];	for (var P = 0, Q = O.length; P < Q; P++) {	S.push(R(O[P]))	}	return S	},	arrayFilter: function(O, R) {	O = O || [];	var S = [];	for (var P = 0, Q = O.length; P < Q; P++) {	if (R(O[P])) {	S.push(O[P])	}	}	return S	},	arrayPushAll: function(O, R) {	if (R instanceof Array) {	O.push.apply(O, R)	} else {	for (var P = 0, Q = R.length; P < Q; P++) {	O.push(R[P])	}	}	return O	},	extend: function(Q, P) {	if (P) {	for (var O in P) {	if (P.hasOwnProperty(O)) {	Q[O] = P[O]	}	}	}	return Q	},	emptyDomNode: function(O) {	while (O.firstChild) {	s.removeNode(O.firstChild)	}	},	moveCleanedNodesToContainerElement: function(R) {	var S = s.utils.makeArray(R);	var O = h.createElement("div");	for (var P = 0, Q = S.length; P < Q; P++) {	O.appendChild(s.cleanNode(S[P]))	}	return O	},	cloneNodes: function(S, T) {	for (var P = 0, Q = S.length, R = []; P < Q; P++) {	var O = S[P].cloneNode(true);	R.push(T ? s.cleanNode(O) : O)	}	return R	},	setDomNodeChildren: function(P, O) {	s.utils.emptyDomNode(P);	if (O) {	for (var Q = 0, R = O.length; Q < R; Q++) {	P.appendChild(O[Q])	}	}	},	replaceDomNodes: function(T, R) {	var S = T.nodeType ? [T] : T;	if (S.length > 0) {	var P = S[0];	var U = P.parentNode;	for (var O = 0, Q = R.length; O < Q; O++) {	U.insertBefore(R[O], P)	}	for (var O = 0, Q = S.length; O < Q; O++) {	s.removeNode(S[O])	}	}	},	setOptionNodeSelectionState: function(P, O) {	if (E < 7) {	P.setAttribute("selected", O)	} else {	P.selected = O	}	},	stringTrim: function(O) {	return (O || "").replace(N, "")	},	stringTokenize: function(S, O) {	var R = [];	var T = (S || "").split(O);	for (var P = 0, Q = T.length; P < Q; P++) {	var U = s.utils.stringTrim(T[P]);	if (U !== "") {	R.push(U)	}	}	return R	},	stringStartsWith: function(P, O) {	P = P || "";	if (O.length > P.length) {	return false	}	return P.substring(0, O.length) === O	},	domNodeIsContainedBy: function(P, O) {	if (O.compareDocumentPosition) {	return (O.compareDocumentPosition(P) & 16) == 16	}	while (P != null) {	if (P == O) {	return true	}	P = P.parentNode	}	return false	},	domNodeIsAttachedToDocument: function(O) {	return s.utils.domNodeIsContainedBy(O, O.ownerDocument)	},	tagNameLower: function(O) {	return O && O.tagName && O.tagName.toLowerCase()	},	registerEventHandler: function(O, P, Q) {	var R = E && B[P];	if (!R && typeof i != "undefined") {	if (F(O, P)) {	var S = Q;	Q = function(T, U) {	var V = this.checked;	if (U) {	this.checked = U.checkedStateBeforeEvent !== true	}	S.call(this, T);	this.checked = V	}	}	i(O)["bind"](P, Q)	} else {	if (!R && typeof O.addEventListener == "function") {	O.addEventListener(P, Q, false)	} else {	if (typeof O.attachEvent != "undefined") {	O.attachEvent("on" + P, function(T) {	Q.call(O, T)	})	} else {	throw new Error("Browser doesn't support addEventListener or attachEvent")	}	}	}	},	triggerEvent: function(O, S) {	if (!(O && O.nodeType)) {	throw new Error("element must be a DOM node when calling triggerEvent")	}	if (typeof i != "undefined") {	var R = [];	if (F(O, S)) {	R.push({	checkedStateBeforeEvent: O.checked	})	}	i(O)["trigger"](S, R)	} else {	if (typeof h.createEvent == "function") {	if (typeof O.dispatchEvent == "function") {	var Q = M[S] || "HTMLEvents";	var P = h.createEvent(Q);	P.initEvent(S, true, true, l, 0, 0, 0, 0, 0, false, false, false, false, 0, O);	O.dispatchEvent(P)	} else {	throw new Error("The supplied element doesn't support dispatchEvent")	}	} else {	if (typeof O.fireEvent != "undefined") {	if (F(O, S)) {	O.checked = O.checked !== true	}	O.fireEvent("on" + S)	} else {	throw new Error("Browser doesn't support triggering events")	}	}	}	},	unwrapObservable: function(O) {	return s.isObservable(O) ? O() : O	},	peekObservable: function(O) {	return s.isObservable(O) ? O.peek() : O	},	toggleDomNodeCssClass: function(R, O, S) {	if (O) {	var P = /[\w-]+/g,	Q = R.className.match(P) || [];	s.utils.arrayForEach(O.match(P), function(T) {	var U = s.utils.arrayIndexOf(Q, T);	if (U >= 0) {	if (!S) {	Q.splice(U, 1)	}	} else {	if (S) {	Q.push(T)	}	}	});	R.className = Q.join(" ")	}	},	setTextContent: function(O, Q) {	var R = s.utils.unwrapObservable(Q);	if ((R === null) || (R === k)) {	R = ""	}	if (O.nodeType === 3) {	O.data = R	} else {	var P = s.virtualElements.firstChild(O);	if (!P || P.nodeType != 3 || s.virtualElements.nextSibling(P)) {	s.virtualElements.setDomNodeChildren(O, [h.createTextNode(R)])	} else {	P.data = R	}	s.utils.forceRefresh(O)	}	},	setElementName: function(P, Q) {	P.name = Q;	if (E <= 7) {	try {	P.mergeAttributes(h.createElement("<input name='" + P.name + "'/>"), false)	} catch (O) {}	}	},	forceRefresh: function(P) {	if (E >= 9) {	var O = P.nodeType == 1 ? P : P.parentNode;	if (O.style) {	O.style.zoom = O.style.zoom	}	}	},	ensureSelectElementIsRenderedCorrectly: function(P) {	if (E >= 9) {	var O = P.style.width;	P.style.width = 0;	P.style.width = O	}	},	range: function(Q, P) {	Q = s.utils.unwrapObservable(Q);	P = s.utils.unwrapObservable(P);	var R = [];	for (var O = Q; O <= P; O++) {	R.push(O)	}	return R	},	makeArray: function(O) {	var R = [];	for (var P = 0, Q = O.length; P < Q; P++) {	R.push(O[P])	}	return R	},	isIe6: G,	isIe7: H,	ieVersion: E,	getFormFields: function(Q, O) {	var P = s.utils.makeArray(Q.getElementsByTagName("input")).concat(s.utils.makeArray(Q.getElementsByTagName("textarea")));	var S = (typeof O == "string") ? function(U) {	return U.name === O	} : function(U) {	return O.test(U.name)	};	var T = [];	for (var R = P.length - 1; R >= 0; R--) {	if (S(P[R])) {	T.push(P[R])	}	}	return T	},	parseJson: function(O) {	if (typeof O == "string") {	O = s.utils.stringTrim(O);	if (O) {	if (l.JSON && l.JSON.parse) {	return l.JSON.parse(O)	}	return (new Function("return " + O))()	}	}	return null	},	stringifyJson: function(O, P, Q) {	if ((typeof JSON == "undefined") || (typeof JSON.stringify == "undefined")) {	throw new Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js")	}	return JSON.stringify(s.utils.unwrapObservable(O), P, Q)	},	postJson: function(aa, O, W) {	W = W || {};	var Y = W.params || {};	var S = W.includeFields || this.fieldsIncludedWithJsonPost;	var Z = aa;	if ((typeof aa == "object") && (s.utils.tagNameLower(aa) === "form")) {	var X = aa;	Z = X.action;	for (var R = S.length - 1; R >= 0; R--) {	var P = s.utils.getFormFields(X, S[R]);	for (var U = P.length - 1; U >= 0; U--) {	Y[P[U].name] = P[U].value	}	}	}	O = s.utils.unwrapObservable(O);	var Q = h.createElement("form");	Q.style.display = "none";	Q.action = Z;	Q.method = "post";	for (var V in O) {	var T = h.createElement("input");	T.name = V;	T.value = s.utils.stringifyJson(s.utils.unwrapObservable(O[V]));	Q.appendChild(T)	}	for (var V in Y) {	var T = h.createElement("input");	T.name = V;	T.value = Y[V];	Q.appendChild(T)	}	h.body.appendChild(Q);	W.submitter ? W.submitter(Q) : Q.submit();	setTimeout(function() {	Q.parentNode.removeChild(Q)	}, 0)	}	}	})();	s.exportSymbol("utils", s.utils);	s.exportSymbol("utils.arrayForEach", s.utils.arrayForEach);	s.exportSymbol("utils.arrayFirst", s.utils.arrayFirst);	s.exportSymbol("utils.arrayFilter", s.utils.arrayFilter);	s.exportSymbol("utils.arrayGetDistinctValues", s.utils.arrayGetDistinctValues);	s.exportSymbol("utils.arrayIndexOf", s.utils.arrayIndexOf);	s.exportSymbol("utils.arrayMap", s.utils.arrayMap);	s.exportSymbol("utils.arrayPushAll", s.utils.arrayPushAll);	s.exportSymbol("utils.arrayRemoveItem", s.utils.arrayRemoveItem);	s.exportSymbol("utils.extend", s.utils.extend);	s.exportSymbol("utils.fieldsIncludedWithJsonPost", s.utils.fieldsIncludedWithJsonPost);	s.exportSymbol("utils.getFormFields", s.utils.getFormFields);	s.exportSymbol("utils.peekObservable", s.utils.peekObservable);	s.exportSymbol("utils.postJson", s.utils.postJson);	s.exportSymbol("utils.parseJson", s.utils.parseJson);	s.exportSymbol("utils.registerEventHandler", s.utils.registerEventHandler);	s.exportSymbol("utils.stringifyJson", s.utils.stringifyJson);	s.exportSymbol("utils.range", s.utils.range);	s.exportSymbol("utils.toggleDomNodeCssClass", s.utils.toggleDomNodeCssClass);	s.exportSymbol("utils.triggerEvent", s.utils.triggerEvent);	s.exportSymbol("utils.unwrapObservable", s.utils.unwrapObservable);	if (!Function.prototype.bind) {	Function.prototype.bind = function(C) {	var D = this,	B = Array.prototype.slice.call(arguments),	C = B.shift();	return function() {	return D.apply(C, B.concat(Array.prototype.slice.call(arguments)))	}	}	}	s.utils.domData = new(function() {	var D = 0;	var C = "__ko__" + (new Date).getTime();	var B = {};	return {	get: function(G, F) {	var E = s.utils.domData.getAll(G, false);	return E === k ? k : E[F]	},	set: function(G, F, H) {	if (H === k) {	if (s.utils.domData.getAll(G, false) === k) {	return	}	}	var E = s.utils.domData.getAll(G, true);	E[F] = H	},	getAll: function(H, E) {	var F = H[C];	var G = F && (F !== "null") && B[F];	if (!G) {	if (!E) {	return k	}	F = H[C] = "ko" + D++;	B[F] = {}	}	return B[F]	},	clear: function(F) {	var E = F[C];	if (E) {	delete B[E];	F[C] = null;	return true	}	return false	}	}	})();	s.exportSymbol("utils.domData", s.utils.domData);	s.exportSymbol("utils.domData.clear", s.utils.domData.clear);	s.utils.domNodeDisposal = new(function() {	var G = "__ko_domNodeDisposal__" + (new Date).getTime();	var B = {	1: true,	8: true,	9: true	};	var C = {	1: true,	9: true	};	function H(K, J) {	var I = s.utils.domData.get(K, G);	if ((I === k) && J) {	I = [];	s.utils.domData.set(K, G, I)	}	return I	}	function F(I) {	s.utils.domData.set(I, G, k)	}	function E(K) {	var I = H(K, false);	if (I) {	I = I.slice(0);	for (var J = 0; J < I.length; J++) {	I[J](K)	}	}	s.utils.domData.clear(K);	if ((typeof i == "function") && (typeof i.cleanData == "function")) {	i.cleanData([K])	}	if (C[K.nodeType]) {	D(K)	}	}	function D(K) {	var I, J = K.firstChild;	while (I = J) {	J = I.nextSibling;	if (I.nodeType === 8) {	E(I)	}	}	}	return {	addDisposeCallback: function(J, I) {	if (typeof I != "function") {	throw new Error("Callback must be a function")	}	H(J, true).push(I)	},	removeDisposeCallback: function(K, I) {	var J = H(K, false);	if (J) {	s.utils.arrayRemoveItem(J, I);	if (J.length == 0) {	F(K)	}	}	},	cleanNode: function(L) {	if (B[L.nodeType]) {	E(L);	if (C[L.nodeType]) {	var I = [];	s.utils.arrayPushAll(I, L.getElementsByTagName("*"));	for (var J = 0, K = I.length; J < K; J++) {	E(I[J])	}	}	}	return L	},	removeNode: function(I) {	s.cleanNode(I);	if (I.parentNode) {	I.parentNode.removeChild(I)	}	}	}	})();	s.cleanNode = s.utils.domNodeDisposal.cleanNode;	s.removeNode = s.utils.domNodeDisposal.removeNode;	s.exportSymbol("cleanNode", s.cleanNode);	s.exportSymbol("removeNode", s.removeNode);	s.exportSymbol("utils.domNodeDisposal", s.utils.domNodeDisposal);	s.exportSymbol("utils.domNodeDisposal.addDisposeCallback", s.utils.domNodeDisposal.addDisposeCallback);	s.exportSymbol("utils.domNodeDisposal.removeDisposeCallback", s.utils.domNodeDisposal.removeDisposeCallback);	(function() {	var C = /^(\s*)<!--(.*?)-->/;	function D(F) {	var H = s.utils.stringTrim(F).toLowerCase(),	E = h.createElement("div");	var I = H.match(/^<(thead|tbody|tfoot)/) && [1, "<table>", "</table>"] || !H.indexOf("<tr") && [2, "<table><tbody>", "</tbody></table>"] || (!H.indexOf("<td") || !H.indexOf("<th")) && [3, "<table><tbody><tr>", "</tr></tbody></table>"] || [0, "", ""];	var G = "ignored<div>" + I[1] + F + I[2] + "</div>";	if (typeof l.innerShiv == "function") {	E.appendChild(l.innerShiv(G))	} else {	E.innerHTML = G	}	while (I[0] --) {	E = E.lastChild	}	return s.utils.makeArray(E.lastChild.childNodes)	}	function B(G) {	if (i.parseHTML) {	return i.parseHTML(G)	} else {	var F = i.clean([G]);	if (F && F[0]) {	var E = F[0];	while (E.parentNode && E.parentNode.nodeType !== 11) {	E = E.parentNode	}	if (E.parentNode) {	E.parentNode.removeChild(E)	}	}	return F	}	}	s.utils.parseHtmlFragment = function(E) {	return typeof i != "undefined" ? B(E) : D(E)	};	s.utils.setHtml = function(G, E) {	s.utils.emptyDomNode(G);	E = s.utils.unwrapObservable(E);	if ((E !== null) && (E !== k)) {	if (typeof E != "string") {	E = E.toString()	}	if (typeof i != "undefined") {	i(G)["html"](E)	} else {	var H = s.utils.parseHtmlFragment(E);	for (var F = 0; F < H.length; F++) {	G.appendChild(H[F])	}	}	}	}	})();	s.exportSymbol("utils.parseHtmlFragment", s.utils.parseHtmlFragment);	s.exportSymbol("utils.setHtml", s.utils.setHtml);	s.memoization = (function() {	var D = {};	function E() {	return (((1 + Math.random()) * 4294967296) | 0).toString(16).substring(1)	}	function C() {	return E() + E()	}	function B(K, F) {	if (!K) {	return	}	if (K.nodeType == 8) {	var J = s.memoization.parseMemoText(K.nodeValue);	if (J != null) {	F.push({	domNode: K,	memoId: J	})	}	} else {	if (K.nodeType == 1) {	for (var H = 0, G = K.childNodes, I = G.length; H < I; H++) {	B(G[H], F)	}	}	}	}	return {	memoize: function(F) {	if (typeof F != "function") {	throw new Error("You can only pass a function to ko.memoization.memoize()")	}	var G = C();	D[G] = F;	return "<!--[ko_memo:" + G + "]-->"	},	unmemoize: function(H, G) {	var F = D[H];	if (F === k) {	throw new Error("Couldn't find any memo with ID " + H + ". Perhaps it's already been unmemoized.")	}	try {	F.apply(null, G || []);	return true	} finally {	delete D[H]	}	},	unmemoizeDomNodeAndDescendants: function(G, H) {	var K = [];	B(G, K);	for (var I = 0, J = K.length; I < J; I++) {	var L = K[I].domNode;	var F = [L];	if (H) {	s.utils.arrayPushAll(F, H)	}	s.memoization.unmemoize(K[I].memoId, F);	L.nodeValue = "";	if (L.parentNode) {	L.parentNode.removeChild(L)	}	}	},	parseMemoText: function(G) {	var F = G.match(/^\[ko_memo\:(.*?)\]$/);	return F ? F[1] : null	}	}	})();	s.exportSymbol("memoization", s.memoization);	s.exportSymbol("memoization.memoize", s.memoization.memoize);	s.exportSymbol("memoization.unmemoize", s.memoization.unmemoize);	s.exportSymbol("memoization.parseMemoText", s.memoization.parseMemoText);	s.exportSymbol("memoization.unmemoizeDomNodeAndDescendants", s.memoization.unmemoizeDomNodeAndDescendants);	s.extenders = {	throttle: function(B, C) {	B.throttleEvaluation = C;	var D = null;	return s.dependentObservable({	read: B,	write: function(E) {	clearTimeout(D);	D = setTimeout(function() {	B(E)	}, C)	}	})	},	notify: function(C, B) {	C.equalityComparer = B == "always" ? function() {	return false	} : s.observable.fn["equalityComparer"];	return C	}	};	function m(D) {	var E = this;	if (D) {	for (var C in D) {	var B = s.extenders[C];	if (typeof B == "function") {	E = B(E, D[C])	}	}	}	return E	}	s.exportSymbol("extenders", s.extenders);	s.subscription = function(D, B, C) {	this.target = D;	this.callback = B;	this.disposeCallback = C;	s.exportProperty(this, "dispose", this.dispose)	};	s.subscription.prototype.dispose = function() {	this.isDisposed = true;	this.disposeCallback()	};	s.subscribable = function() {	this._subscriptions = {};	s.utils.extend(this, s.subscribable.fn);	s.exportProperty(this, "subscribe", this.subscribe);	s.exportProperty(this, "extend", this.extend);	s.exportProperty(this, "getSubscriptionsCount", this.getSubscriptionsCount)	};	var p = "change";	s.subscribable.fn = {	subscribe: function(C, D, E) {	E = E || p;	var B = D ? C.bind(D) : C;	var F = new s.subscription(this, B, function() {	s.utils.arrayRemoveItem(this._subscriptions[E], F)	}.bind(this));	if (!this._subscriptions[E]) {	this._subscriptions[E] = []	}	this._subscriptions[E].push(F);	return F	},	notifySubscribers: function(C, B) {	B = B || p;	if (this._subscriptions[B]) {	s.dependencyDetection.ignore(function() {	s.utils.arrayForEach(this._subscriptions[B].slice(0), function(D) {	if (D && (D.isDisposed !== true)) {	D.callback(C)	}	})	}, this)	}	},	getSubscriptionsCount: function() {	var C = 0;	for (var B in this._subscriptions) {	if (this._subscriptions.hasOwnProperty(B)) {	C += this._subscriptions[B].length	}	}	return C	},	extend: m	};	s.isSubscribable = function(B) {	return typeof B.subscribe == "function" && typeof B.notifySubscribers == "function"	};	s.exportSymbol("subscribable", s.subscribable);	s.exportSymbol("isSubscribable", s.isSubscribable);	s.dependencyDetection = (function() {	var B = [];	return {	begin: function(C) {	B.push({	callback: C,	distinctDependencies: []	})	},	end: function() {	B.pop()	},	registerDependency: function(C) {	if (!s.isSubscribable(C)) {	throw new Error("Only subscribable things can act as dependencies")	}	if (B.length > 0) {	var D = B[B.length - 1];	if (!D || s.utils.arrayIndexOf(D.distinctDependencies, C) >= 0) {	return	}	D.distinctDependencies.push(C);	D.callback(C)	}	},	ignore: function(C, E, D) {	try {	B.push(null);	return C.apply(E, D || [])	} finally {	B.pop()	}	}	}	})();	var w = {	"undefined": true,	"boolean": true,	number: true,	string: true	};	s.observable = function(C) {	var B = C;	function D() {	if (arguments.length > 0) {	if ((!D.equalityComparer) || !D.equalityComparer(B, arguments[0])) {	D.valueWillMutate();	B = arguments[0];	if (g) {	D._latestValue = B	}	D.valueHasMutated()	}	return this	} else {	s.dependencyDetection.registerDependency(D);	return B	}	}	if (g) {	D._latestValue = B	}	s.subscribable.call(D);	D.peek = function() {	return B	};	D.valueHasMutated = function() {	D.notifySubscribers(B)	};	D.valueWillMutate = function() {	D.notifySubscribers(B, "beforeChange")	};	s.utils.extend(D, s.observable.fn);	s.exportProperty(D, "peek", D.peek);	s.exportProperty(D, "valueHasMutated", D.valueHasMutated);	s.exportProperty(D, "valueWillMutate", D.valueWillMutate);	return D	};	s.observable.fn = {	equalityComparer: function z(B, C) {	var D = (B === null) || (typeof(B) in w);	return D ? (B === C) : false	}	};	var y = s.observable.protoProperty = "__ko_proto__";	s.observable.fn[y] = s.observable;	s.hasPrototype = function(B, C) {	if ((B === null) || (B === k) || (B[y] === k)) {	return false	}	if (B[y] === C) {	return true	}	return s.hasPrototype(B[y], C)	};	s.isObservable = function(B) {	return s.hasPrototype(B, s.observable)	};	s.isWriteableObservable = function(B) {	if ((typeof B == "function") && B[y] === s.observable) {	return true	}	if ((typeof B == "function") && (B[y] === s.dependentObservable) && (B.hasWriteFunction)) {	return true	}	return false	};	s.exportSymbol("observable", s.observable);	s.exportSymbol("isObservable", s.isObservable);	s.exportSymbol("isWriteableObservable", s.isWriteableObservable);	s.observableArray = function(B) {	if (arguments.length == 0) {	B = []	}	if ((B !== null) && (B !== k) && !("length" in B)) {	throw new Error("The argument passed when initializing an observable array must be an array, or null, or undefined.")	}	var C = s.observable(B);	s.utils.extend(C, s.observableArray.fn);	return C	};	s.observableArray.fn = {	remove: function(G) {	var E = this.peek();	var D = [];	var C = typeof G == "function" ? G : function(H) {	return H === G	};	for (var B = 0; B < E.length; B++) {	var F = E[B];	if (C(F)) {	if (D.length === 0) {	this.valueWillMutate()	}	D.push(F);	E.splice(B, 1);	B--	}	}	if (D.length) {	this.valueHasMutated()	}	return D	},	removeAll: function(C) {	if (C === k) {	var D = this.peek();	var B = D.slice(0);	this.valueWillMutate();	D.splice(0, D.length);	this.valueHasMutated();	return B	}	if (!C) {	return []	}	return this["remove"](function(E) {	return s.utils.arrayIndexOf(C, E) >= 0	})	},	destroy: function(F) {	var D = this.peek();	var C = typeof F == "function" ? F : function(G) {	return G === F	};	this.valueWillMutate();	for (var B = D.length - 1; B >= 0; B--) {	var E = D[B];	if (C(E)) {	D[B]["_destroy"] = true	}	}	this.valueHasMutated()	},	destroyAll: function(B) {	if (B === k) {	return this["destroy"](function() {	return true	})	}	if (!B) {	return []	}	return this["destroy"](function(C) {	return s.utils.arrayIndexOf(B, C) >= 0	})	},	indexOf: function(B) {	var C = this();	return s.utils.arrayIndexOf(C, B)	},	replace: function(D, C) {	var B = this["indexOf"](D);	if (B >= 0) {	this.valueWillMutate();	this.peek()[B] = C;	this.valueHasMutated()	}	}	};	s.utils.arrayForEach(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(B) {	s.observableArray.fn[B] = function() {	var D = this.peek();	this.valueWillMutate();	var C = D[B].apply(D, arguments);	this.valueHasMutated();	return C	}	});	s.utils.arrayForEach(["slice"], function(B) {	s.observableArray.fn[B] = function() {	var C = this();	return C[B].apply(C, arguments)	}	});	s.exportSymbol("observableArray", s.observableArray);	s.dependentObservable = function(O, P, S) {	var D, B = false,	C = false,	U = O;	if (U && typeof U == "object") {	S = U;	U = S.read	} else {	S = S || {};	if (!U) {	U = S.read	}	}	if (typeof U != "function") {	throw new Error("Pass a function that returns the value of the ko.computed")	}	function F(W) {	E.push(W.subscribe(M))	}	function I() {	s.utils.arrayForEach(E, function(W) {	W.dispose()	});	E = []	}	function M() {	var W = G.throttleEvaluation;	if (W && W >= 0) {	clearTimeout(N);	N = setTimeout(L, W)	} else {	L()	}	}	function L() {	if (C) {	return	}	if (B && J()) {	H();	return	}	C = true;	try {	var W = s.utils.arrayMap(E, function(Z) {	return Z.target	});	s.dependencyDetection.begin(function(aa) {	var Z;	if ((Z = s.utils.arrayIndexOf(W, aa)) >= 0) {	W[Z] = k	} else {	F(aa)	}	});	var Y = U.call(P);	for (var X = W.length - 1; X >= 0; X--) {	if (W[X]) {	E.splice(X, 1)[0].dispose()	}	}	B = true;	G.notifySubscribers(D, "beforeChange");	D = Y;	if (g) {	G._latestValue = D	}	} finally {	s.dependencyDetection.end()	}	G.notifySubscribers(D);	C = false;	if (!E.length) {	H()	}	}	function G() {	if (arguments.length > 0) {	if (typeof V === "function") {	V.apply(P, arguments)	} else {	throw new Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.")	}	return this	} else {	if (!B) {	L()	}	s.dependencyDetection.registerDependency(G);	return D	}	}	function T() {	if (!B) {	L()	}	return D	}	function R() {	return !B || E.length > 0	}	var V = S.write,	K = S.disposeWhenNodeIsRemoved || S.disposeWhenNodeIsRemoved || null,	J = S.disposeWhen || S.disposeWhen || function() {	return false	},	H = I,	E = [],	N = null;	if (!P) {	P = S.owner	}	G.peek = T;	G.getDependenciesCount = function() {	return E.length	};	G.hasWriteFunction = typeof S.write === "function";	G.dispose = function() {	H()	};	G.isActive = R;	s.subscribable.call(G);	s.utils.extend(G, s.dependentObservable.fn);	s.exportProperty(G, "peek", G.peek);	s.exportProperty(G, "dispose", G.dispose);	s.exportProperty(G, "isActive", G.isActive);	s.exportProperty(G, "getDependenciesCount", G.getDependenciesCount);	if (S.deferEvaluation !== true) {	L()	}	if (K && R()) {	H = function() {	s.utils.domNodeDisposal.removeDisposeCallback(K, arguments.callee);	I()	};	s.utils.domNodeDisposal.addDisposeCallback(K, H);	var Q = J;	J = function() {	return !s.utils.domNodeIsAttachedToDocument(K) || Q()	}	}	return G	};	s.isComputed = function(B) {	return s.hasPrototype(B, s.dependentObservable)	};	var x = s.observable.protoProperty;	s.dependentObservable[x] = s.observable;	s.dependentObservable.fn = {};	s.dependentObservable.fn[x] = s.dependentObservable;	s.exportSymbol("dependentObservable", s.dependentObservable);	s.exportSymbol("computed", s.dependentObservable);	s.exportSymbol("isComputed", s.isComputed);	(function() {	var C = 10;	s.toJS = function(F) {	if (arguments.length == 0) {	throw new Error("When calling ko.toJS, pass the object you want to convert.")	}	return B(F, function(H) {	for (var G = 0; s.isObservable(H) && (G < C); G++) {	H = H()	}	return H	})	};	s.toJSON = function(H, G, I) {	var F = s.toJS(H);	return s.utils.stringifyJson(F, G, I)	};	function B(I, G, J) {	J = J || new D();	I = G(I);	var F = (typeof I == "object") && (I !== null) && (I !== k) && (!(I instanceof Date));	if (!F) {	return I	}	var H = I instanceof Array ? [] : {};	J.save(I, H);	E(I, function(K) {	var M = G(I[K]);	switch (typeof M) {	case "boolean":	case "number":	case "string":	case "function":	H[K] = M;	break;	case "object":	case "undefined":	var L = J.get(M);	H[K] = (L !== k) ? L : B(M, G, J);	break	}	});	return H	}	function E(H, I) {	if (H instanceof Array) {	for (var F = 0; F < H.length; F++) {	I(F)	}	if (typeof H.toJSON == "function") {	I("toJSON")	}	} else {	for (var G in H) {	I(G)	}	}	}	function D() {	var F = [];	var G = [];	this.save = function(I, J) {	var H = s.utils.arrayIndexOf(F, I);	if (H >= 0) {	G[H] = J	} else {	F.push(I);	G.push(J)	}	};	this.get = function(I) {	var H = s.utils.arrayIndexOf(F, I);	return (H >= 0) ? G[H] : k	}	}	})();	s.exportSymbol("toJS", s.toJS);	s.exportSymbol("toJSON", s.toJSON);	(function() {	var B = "__ko__hasDomDataOptionValue__";	s.selectExtensions = {	readValue: function(C) {	switch (s.utils.tagNameLower(C)) {	case "option":	if (C[B] === true) {	return s.utils.domData.get(C, s.bindingHandlers.options.optionValueDomDataKey)	}	return s.utils.ieVersion <= 7 ? (C.getAttributeNode("value").specified ? C.value : C.text) : C.value;	case "select":	return C.selectedIndex >= 0 ? s.selectExtensions.readValue(C.options[C.selectedIndex]) : k;	default:	return C.value	}	},	writeValue: function(C, E) {	switch (s.utils.tagNameLower(C)) {	case "option":	switch (typeof E) {	case "string":	s.utils.domData.set(C, s.bindingHandlers.options.optionValueDomDataKey, k);	if (B in C) {	delete C[B]	}	C.value = E;	break;	default:	s.utils.domData.set(C, s.bindingHandlers.options.optionValueDomDataKey, E);	C[B] = true;	C.value = typeof E === "number" ? E : "";	break	}	break;	case "select":	for (var D = C.options.length - 1; D >= 0; D--) {	if (s.selectExtensions.readValue(C.options[D]) == E) {	C.selectedIndex = D;	break	}	}	break;	default:	if ((E === null) || (E === k)) {	E = ""	}	C.value = E;	break	}	}	}	})();	s.exportSymbol("selectExtensions", s.selectExtensions);	s.exportSymbol("selectExtensions.readValue", s.selectExtensions.readValue);	s.exportSymbol("selectExtensions.writeValue", s.selectExtensions.writeValue);	s.expressionRewriting = (function() {	var F = /\@ko_token_(\d+)\@/g;	var E = ["true", "false"];	var D = /^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i;	function G(I, J) {	var H = null;	while (I != H) {	H = I;	I = I.replace(F, function(K, L) {	return J[L]	})	}	return I	}	function C(H) {	if (s.utils.arrayIndexOf(E, s.utils.stringTrim(H).toLowerCase()) >= 0) {	return false	}	var I = H.match(D);	return I === null ? false : I[1] ? ("Object(" + I[1] + ")" + I[2]) : H	}	function B(H) {	var I = s.utils.stringTrim(H);	switch (I.length && I.charAt(0)) {	case "'":	case '"':	return H;	default:	return "'" + I + "'"	}	}	return {	bindingRewriteValidators: [],	parseObjectLiteral: function(N) {	var S = s.utils.stringTrim(N);	if (S.length < 3) {	return []	}	if (S.charAt(0) === "{") {	S = S.substring(1, S.length - 1)	}	var W = [];	var X = null,	V;	for (var P = 0; P < S.length; P++) {	var H = S.charAt(P);	if (X === null) {	switch (H) {	case '"':	case "'":	case "/":	X = P;	V = H;	break	}	} else {	if ((H == V) && (S.charAt(P - 1) !== "\\")) {	var T = S.substring(X, P + 1);	W.push(T);	var Q = "@ko_token_" + (W.length - 1) + "@";	S = S.substring(0, X) + Q + S.substring(P + 1);	P -= (T.length - Q.length);	X = null	}	}	}	X = null;	V = null;	var U = 0,	Y = null;	for (var P = 0; P < S.length; P++) {	var H = S.charAt(P);	if (X === null) {	switch (H) {	case "{":	X = P;	Y = H;	V = "}";	break;	case "(":	X = P;	Y = H;	V = ")";	break;	case "[":	X = P;	Y = H;	V = "]";	break	}	}	if (H === Y) {	U++	} else {	if (H === V) {	U--;	if (U === 0) {	var T = S.substring(X, P + 1);	W.push(T);	var Q = "@ko_token_" + (W.length - 1) + "@";	S = S.substring(0, X) + Q + S.substring(P + 1);	P -= (T.length - Q.length);	X = null	}	}	}	}	var R = [];	var M = S.split(",");	for (var J = 0, K = M.length; J < K; J++) {	var O = M[J];	var I = O.indexOf(":");	if ((I > 0) && (I < O.length - 1)) {	var L = O.substring(0, I);	var Z = O.substring(I + 1);	R.push({	key: G(L, W),	value: G(Z, W)	})	} else {	R.push({	unknown: G(O, W)	})	}	}	return R	},	preProcessBindings: function(M) {	var K = typeof M === "string" ? s.expressionRewriting.parseObjectLiteral(M) : M;	var P = [],	N = [];	var L;	for (var J = 0; L = K[J]; J++) {	if (P.length > 0) {	P.push(",")	}	if (L.key) {	var O = B(L.key),	Q = L.value;	P.push(O);	P.push(":");	P.push(Q);	if (Q = C(s.utils.stringTrim(Q))) {	if (N.length > 0) {	N.push(", ")	}	N.push(O + " : function(__ko_value) { " + Q + " = __ko_value; }")	}	} else {	if (L.unknown) {	P.push(L.unknown)	}	}	}	var I = P.join("");	if (N.length > 0) {	var H = N.join("");	I = I + ", '_ko_property_writers' : { " + H + " } "	}	return I	},	keyValueArrayContainsKey: function(J, I) {	for (var H = 0; H < J.length; H++) {	if (s.utils.stringTrim(J[H]["key"]) == I) {	return true	}	}	return false	},	writeValueToProperty: function(K, H, J, M, I) {	if (!K || !s.isWriteableObservable(K)) {	var L = H()["_ko_property_writers"];	if (L && L[J]) {	L[J](M)	}	} else {	if (!I || K.peek() !== M) {	K(M)	}	}	}	}	})();	s.exportSymbol("expressionRewriting", s.expressionRewriting);	s.exportSymbol("expressionRewriting.bindingRewriteValidators", s.expressionRewriting.bindingRewriteValidators);	s.exportSymbol("expressionRewriting.parseObjectLiteral", s.expressionRewriting.parseObjectLiteral);	s.exportSymbol("expressionRewriting.preProcessBindings", s.expressionRewriting.preProcessBindings);	s.exportSymbol("jsonExpressionRewriting", s.expressionRewriting);	s.exportSymbol("jsonExpressionRewriting.insertPropertyAccessorsIntoJson", s.expressionRewriting.preProcessBindings);	(function() {	var B = h.createComment("test").text === "<!--test-->";	var J = B ? /^<!--\s*ko(?:\s+(.+\s*\:[\s\S]*))?\s*-->$/ : /^\s*ko(?:\s+(.+\s*\:[\s\S]*))?\s*$/;	var C = B ? /^<!--\s*\/ko\s*-->$/ : /^\s*\/ko\s*$/;	var G = {	ul: true,	ol: true	};	function I(K) {	return (K.nodeType == 8) && (B ? K.text : K.nodeValue).match(J)	}	function H(K) {	return (K.nodeType == 8) && (B ? K.text : K.nodeValue).match(C)	}	function F(O, K) {	var M = O;	var N = 1;	var L = [];	while (M = M.nextSibling) {	if (H(M)) {	N--;	if (N === 0) {	return L	}	}	L.push(M);	if (I(M)) {	N++	}	}	if (!K) {	throw new Error("Cannot find closing comment tag to match: " + O.nodeValue)	}	return null	}	function D(M, K) {	var L = F(M, K);	if (L) {	if (L.length > 0) {	return L[L.length - 1].nextSibling	}	return M.nextSibling	} else {	return null	}	}	function E(N) {	var L = N.firstChild,	K = null;	if (L) {	do {	if (K) {	K.push(L)	} else {	if (I(L)) {	var M = D(L, true);	if (M) {	L = M	} else {	K = [L]	}	} else {	if (H(L)) {	K = [L]	}	}	}	} while (L = L.nextSibling)	}	return K	}	s.virtualElements = {	allowedBindings: {},	childNodes: function(K) {	return I(K) ? F(K) : K.childNodes	},	emptyNode: function(M) {	if (!I(M)) {	s.utils.emptyDomNode(M)	} else {	var N = s.virtualElements.childNodes(M);	for (var K = 0, L = N.length; K < L; K++) {	s.removeNode(N[K])	}	}	},	setDomNodeChildren: function(O, K) {	if (!I(O)) {	s.utils.setDomNodeChildren(O, K)	} else {	s.virtualElements.emptyNode(O);	var L = O.nextSibling;	for (var M = 0, N = K.length; M < N; M++) {	L.parentNode.insertBefore(K[M], L)	}	}	},	prepend: function(K, L) {	if (!I(K)) {	if (K.firstChild) {	K.insertBefore(L, K.firstChild)	} else {	K.appendChild(L)	}	} else {	K.parentNode.insertBefore(L, K.nextSibling)	}	},	insertAfter: function(K, M, L) {	if (!L) {	s.virtualElements.prepend(K, M)	} else {	if (!I(K)) {	if (L.nextSibling) {	K.insertBefore(M, L.nextSibling)	} else {	K.appendChild(M)	}	} else {	K.parentNode.insertBefore(M, L.nextSibling)	}	}	},	firstChild: function(K) {	if (!I(K)) {	return K.firstChild	}	if (!K.nextSibling || H(K.nextSibling)) {	return null	}	return K.nextSibling	},	nextSibling: function(K) {	if (I(K)) {	K = D(K)	}	if (K.nextSibling && H(K.nextSibling)) {	return null	}	return K.nextSibling	},	virtualNodeBindingValue: function(K) {	var L = I(K);	return L ? L[1] : null	},	normaliseVirtualElementDomStructure: function(L) {	if (!G[s.utils.tagNameLower(L)]) {	return	}	var K = L.firstChild;	if (K) {	do {	if (K.nodeType === 1) {	var O = E(K);	if (O) {	var N = K.nextSibling;	for (var M = 0; M < O.length; M++) {	if (N) {	L.insertBefore(O[M], N)	} else {	L.appendChild(O[M])	}	}	}	}	} while (K = K.nextSibling)	}	}	}	})();	s.exportSymbol("virtualElements", s.virtualElements);	s.exportSymbol("virtualElements.allowedBindings", s.virtualElements.allowedBindings);	s.exportSymbol("virtualElements.emptyNode", s.virtualElements.emptyNode);	s.exportSymbol("virtualElements.insertAfter", s.virtualElements.insertAfter);	s.exportSymbol("virtualElements.prepend", s.virtualElements.prepend);	s.exportSymbol("virtualElements.setDomNodeChildren", s.virtualElements.setDomNodeChildren);	(function() {	var D = "data-bind";	s.bindingProvider = function() {	this.bindingCache = {}	};	s.utils.extend(s.bindingProvider.prototype, {	nodeHasBindings: function(E) {	switch (E.nodeType) {	case 1:	return E.getAttribute(D) != null;	case 8:	return s.virtualElements.virtualNodeBindingValue(E) != null;	default:	return false	}	},	getBindings: function(G, E) {	var F = this["getBindingsString"](G, E);	return F ? this["parseBindingsString"](F, E, G) : null	},	getBindingsString: function(F, E) {	switch (F.nodeType) {	case 1:	return F.getAttribute(D);	case 8:	return s.virtualElements.virtualNodeBindingValue(F);	default:	return null	}	},	parseBindingsString: function(G, E, I) {	try {	var F = C(G, this.bindingCache);	return F(E, I)	} catch (H) {	throw new Error("Unable to parse bindings.\nMessage: " + H + ";\nBindings value: " + G)	}	}	});	s.bindingProvider.instance = new s.bindingProvider();	function C(E, F) {	var G = E;	return F[G] || (F[G] = B(E))	}	function B(E) {	var G = s.expressionRewriting.preProcessBindings(E),	F = "with($context){with($data||{}){return{" + G + "}}}";	return new Function("$context", "$element", F)	}	})();	s.exportSymbol("bindingProvider", s.bindingProvider);	(function() {	s.bindingHandlers = {};	s.bindingContext = function(G, I, H) {	if (I) {	s.utils.extend(this, I);	this["$parentContext"] = I;	this["$parent"] = I["$data"];	this["$parents"] = (I["$parents"] || []).slice(0);	this["$parents"].unshift(this["$parent"])	} else {	this["$parents"] = [];	this["$root"] = G;	this["ko"] = s	}	this["$data"] = G;	if (H) {	this[H] = G	}	};	s.bindingContext.prototype.createChildContext = function(G, H) {	return new s.bindingContext(G, this, H)	};	s.bindingContext.prototype.extend = function(H) {	var G = s.utils.extend(new s.bindingContext(), this);	return s.utils.extend(G, H)	};	function F(G) {	var H = s.virtualElements.allowedBindings[G];	if (!H) {	throw new Error("The binding '" + G + "' cannot be used with virtual elements")	}	}	function B(K, I, G) {	var H, J = s.virtualElements.firstChild(I);	while (H = J) {	J = s.virtualElements.nextSibling(H);	C(K, H, G)	}	}	function C(L, I, G) {	var K = true;	var H = (I.nodeType === 1);	if (H) {	s.virtualElements.normaliseVirtualElementDomStructure(I)	}	var J = (H && G) || s.bindingProvider.instance["nodeHasBindings"](I);	if (J) {	K = D(I, null, L, G).shouldBindDescendants	}	if (K) {	B(L, I, !H)	}	}	function D(L, I, O, G) {	var J = 0;	var M;	function K(P) {	return function() {	return M[P]	}	}	function N() {	return M	}	var H;	s.dependentObservable(function() {	var Q = O && (O instanceof s.bindingContext) ? O : new s.bindingContext(s.utils.unwrapObservable(O));	var W = Q["$data"];	if (G) {	s.storedBindingContextForNode(L, Q)	}	var S = (typeof I == "function") ? I(Q, L) : I;	M = S || s.bindingProvider.instance["getBindings"](L, Q);	if (M) {	if (J === 0) {	J = 1;	for (var R in M) {	var P = s.bindingHandlers[R];	if (P && L.nodeType === 8) {	F(R)	}	if (P && typeof P.init == "function") {	var T = P.init;	var V = T(L, K(R), N, W, Q);	if (V && V.controlsDescendantBindings) {	if (H !== k) {	throw new Error("Multiple bindings (" + H + " and " + R + ") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.")	}	H = R	}	}	}	J = 2	}	if (J === 2) {	for (var R in M) {	var P = s.bindingHandlers[R];	if (P && typeof P.update == "function") {	var U = P.update;	U(L, K(R), N, W, Q)	}	}	}	}	}, null, {	disposeWhenNodeIsRemoved: L	});	return {	shouldBindDescendants: H === k	}	}	var E = "__ko_bindingContext__";	s.storedBindingContextForNode = function(H, G) {	if (arguments.length == 2) {	s.utils.domData.set(H, E, G)	} else {	return s.utils.domData.get(H, E)	}	};	s.applyBindingsToNode = function(H, G, I) {	if (H.nodeType === 1) {	s.virtualElements.normaliseVirtualElementDomStructure(H)	}	return D(H, G, I, true)	};	s.applyBindingsToDescendants = function(H, G) {	if (G.nodeType === 1 || G.nodeType === 8) {	B(H, G, true)	}	};	s.applyBindings = function(H, G) {	if (G && (G.nodeType !== 1) && (G.nodeType !== 8)) {	throw new Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node")	}	G = G || l.document.body;	C(H, G, true)	};	s.contextFor = function(H) {	switch (H.nodeType) {	case 1:	case 8:	var G = s.storedBindingContextForNode(H);	if (G) {	return G	}	if (H.parentNode) {	return s.contextFor(H.parentNode)	}	break	}	return k	};	s.dataFor = function(H) {	var G = s.contextFor(H);	return G ? G["$data"] : k	};	s.exportSymbol("bindingHandlers", s.bindingHandlers);	s.exportSymbol("applyBindings", s.applyBindings);	s.exportSymbol("applyBindingsToDescendants", s.applyBindingsToDescendants);	s.exportSymbol("applyBindingsToNode", s.applyBindingsToNode);	s.exportSymbol("contextFor", s.contextFor);	s.exportSymbol("dataFor", s.dataFor)	})();	var n = {	"class": "className",	"for": "htmlFor"	};	s.bindingHandlers.attr = {	update: function(E, H, B) {	var G = s.utils.unwrapObservable(H()) || {};	for (var C in G) {	if (typeof C == "string") {	var D = s.utils.unwrapObservable(G[C]);	var F = (D === false) || (D === null) || (D === k);	if (F) {	E.removeAttribute(C)	}	if (s.utils.ieVersion <= 8 && C in n) {	C = n[C];	if (F) {	E.removeAttribute(C)	} else {	E[C] = D	}	} else {	if (!F) {	E.setAttribute(C, D.toString())	}	}	if (C === "name") {	s.utils.setElementName(E, F ? "" : D.toString())	}	}	}	}	};	s.bindingHandlers.checked = {	init: function(C, E, B) {	var D = function() {	var I;	if (C.type == "checkbox") {	I = C.checked	} else {	if ((C.type == "radio") && (C.checked)) {	I = C.value	} else {	return	}	}	var G = E(),	H = s.utils.unwrapObservable(G);	if ((C.type == "checkbox") && (H instanceof Array)) {	var F = s.utils.arrayIndexOf(H, C.value);	if (C.checked && (F < 0)) {	G.push(C.value)	} else {	if ((!C.checked) && (F >= 0)) {	G.splice(F, 1)	}	}	} else {	s.expressionRewriting.writeValueToProperty(G, B, "checked", I, true)	}	};	s.utils.registerEventHandler(C, "click", D);	if ((C.type == "radio") && !C.name) {	s.bindingHandlers.uniqueName["init"](C, function() {	return true	})	}	},	update: function(B, D) {	var C = s.utils.unwrapObservable(D());	if (B.type == "checkbox") {	if (C instanceof Array) {	B.checked = s.utils.arrayIndexOf(C, B.value) >= 0	} else {	B.checked = C	}	} else {	if (B.type == "radio") {	B.checked = (B.value == C)	}	}	}	};	var o = "__ko__cssValue";	s.bindingHandlers.css = {	update: function(C, F) {	var E = s.utils.unwrapObservable(F());	if (typeof E == "object") {	for (var B in E) {	var D = s.utils.unwrapObservable(E[B]);	s.utils.toggleDomNodeCssClass(C, B, D)	}	} else {	E = String(E || "");	s.utils.toggleDomNodeCssClass(C, C[o], false);	C[o] = E;	s.utils.toggleDomNodeCssClass(C, E, true)	}	}	};	s.bindingHandlers.enable = {	update: function(B, D) {	var C = s.utils.unwrapObservable(D());	if (C && B.disabled) {	B.removeAttribute("disabled")	} else {	if ((!C) && (!B.disabled)) {	B.disabled = true	}	}	}	};	s.bindingHandlers.disable = {	update: function(B, C) {	s.bindingHandlers.enable["update"](B, function() {	return !s.utils.unwrapObservable(C())	})	}	};	function u(B) {	s.bindingHandlers[B] = {	init: function(D, F, C, G) {	var E = function() {	var H = {};	H[B] = F();	return H	};	return s.bindingHandlers.event["init"].call(this, D, E, C, G)	}	}	}	s.bindingHandlers.event = {	init: function(C, F, B, G) {	var E = F() || {};	for (var D in E) {	(function() {	var H = D;	if (typeof H == "string") {	s.utils.registerEventHandler(C, H, function(L) {	var N;	var M = F()[H];	if (!M) {	return	}	var I = B();	try {	var J = s.utils.makeArray(arguments);	J.unshift(G);	N = M.apply(G, J)	} finally {	if (N !== true) {	if (L.preventDefault) {	L.preventDefault()	} else {	L.returnValue = false	}	}	}	var K = I[H + "Bubble"] !== false;	if (!K) {	L.cancelBubble = true;	if (L.stopPropagation) {	L.stopPropagation()	}	}	})	}	})()	}	}	};	s.bindingHandlers.foreach = {	makeTemplateValueAccessor: function(B) {	return function() {	var C = B(),	D = s.utils.peekObservable(C);	if ((!D) || typeof D.length == "number") {	return {	foreach: C,	templateEngine: s.nativeTemplateEngine.instance	}	}	s.utils.unwrapObservable(C);	return {	foreach: D.data,	as: D.as,	includeDestroyed: D.includeDestroyed,	afterAdd: D.afterAdd,	beforeRemove: D.beforeRemove,	afterRender: D.afterRender,	beforeMove: D.beforeMove,	afterMove: D.afterMove,	templateEngine: s.nativeTemplateEngine.instance	}	}	},	init: function(D, E, B, F, C) {	return s.bindingHandlers.template["init"](D, s.bindingHandlers.foreach.makeTemplateValueAccessor(E))	},	update: function(D, E, B, F, C) {	return s.bindingHandlers.template["update"](D, s.bindingHandlers.foreach.makeTemplateValueAccessor(E), B, F, C)	}	};	s.expressionRewriting.bindingRewriteValidators.foreach = false;	s.virtualElements.allowedBindings.foreach = true;	var r = "__ko_hasfocusUpdating";	s.bindingHandlers.hasfocus = {	init: function(C, G, B) {	var D = function(H) {	C[r] = true;	var J = C.ownerDocument;	if ("activeElement" in J) {	H = (J.activeElement === C)	}	var I = G();	s.expressionRewriting.writeValueToProperty(I, B, "hasfocus", H, true);	C[r] = false	};	var E = D.bind(null, true);	var F = D.bind(null, false);	s.utils.registerEventHandler(C, "focus", E);	s.utils.registerEventHandler(C, "focusin", E);	s.utils.registerEventHandler(C, "blur", F);	s.utils.registerEventHandler(C, "focusout", F)	},	update: function(B, D) {	var C = s.utils.unwrapObservable(D());	if (!B[r]) {	C ? B.focus() : B.blur();	s.dependencyDetection.ignore(s.utils.triggerEvent, null, [B, C ? "focusin" : "focusout"])	}	}	};	s.bindingHandlers.html = {	init: function() {	return {	controlsDescendantBindings: true	}	},	update: function(B, C) {	s.utils.setHtml(B, C())	}	};	var A = "__ko_withIfBindingData";	function v(B, D, C, E) {	s.bindingHandlers[B] = {	init: function(H, I, F, J, G) {	s.utils.domData.set(H, A, {});	return {	controlsDescendantBindings: true	}	},	update: function(I, M, F, N, G) {	var O = s.utils.domData.get(I, A),	H = s.utils.unwrapObservable(M()),	L = !C !== !H,	J = !O.savedNodes,	K = J || D || (L !== O.didDisplayOnLastUpdate);	if (K) {	if (J) {	O.savedNodes = s.utils.cloneNodes(s.virtualElements.childNodes(I), true)	}	if (L) {	if (!J) {	s.virtualElements.setDomNodeChildren(I, s.utils.cloneNodes(O.savedNodes))	}	s.applyBindingsToDescendants(E ? E(G, H) : G, I)	} else {	s.virtualElements.emptyNode(I)	}	O.didDisplayOnLastUpdate = L	}	}	};	s.expressionRewriting.bindingRewriteValidators[B] = false;	s.virtualElements.allowedBindings[B] = true	}	v("if");	v("ifnot", false, true);	v("with", true, false, function(B, C) {	return B.createChildContext(C)	});	function q(B, C, D) {	if (D) {	if (C !== s.selectExtensions.readValue(B)) {	s.selectExtensions.writeValue(B, C)	}	}	if (C !== s.selectExtensions.readValue(B)) {	s.dependencyDetection.ignore(s.utils.triggerEvent, null, [B, "change"])	}	}	s.bindingHandlers.options = {	update: function(G, T, C) {	if (s.utils.tagNameLower(G) !== "select") {	throw new Error("options binding applies only to SELECT elements")	}	var R = G.length == 0;	var P = s.utils.arrayMap(s.utils.arrayFilter(G.childNodes, function(U) {	return U.tagName && (s.utils.tagNameLower(U) === "option") && U.selected	}), function(U) {	return s.selectExtensions.readValue(U) || U.innerText || U.textContent	});	var O = G.scrollTop;	var S = s.utils.unwrapObservable(T());	var Q = G.value;	while (G.length > 0) {	s.cleanNode(G.options[0]);	G.remove(0)	}	if (S) {	var B = C(),	I = B.optionsIncludeDestroyed;	if (typeof S.length != "number") {	S = [S]	}	if (B.optionsCaption) {	var L = h.createElement("option");	s.utils.setHtml(L, B.optionsCaption);	s.selectExtensions.writeValue(L, k);	G.appendChild(L)	}	for (var H = 0, J = S.length; H < J; H++) {	var E = S[H];	if (E && E._destroy && !I) {	continue	}	var L = h.createElement("option");	function D(V, W, U) {	var X = typeof W;	if (X == "function") {	return W(V)	} else {	if (X == "string") {	return V[W]	} else {	return U	}	}	}	var N = D(E, B.optionsValue, E);	s.selectExtensions.writeValue(L, s.utils.unwrapObservable(N));	var M = D(E, B.optionsText, N);	s.utils.setTextContent(L, M);	G.appendChild(L)	}	var K = G.getElementsByTagName("option");	var F = 0;	for (var H = 0, J = K.length; H < J; H++) {	if (s.utils.arrayIndexOf(P, s.selectExtensions.readValue(K[H])) >= 0) {	s.utils.setOptionNodeSelectionState(K[H], true);	F++	}	}	G.scrollTop = O;	if (R && ("value" in B)) {	q(G, s.utils.peekObservable(B.value), true)	}	s.utils.ensureSelectElementIsRenderedCorrectly(G)	}	}	};	s.bindingHandlers.options.optionValueDomDataKey = "__ko.optionValueDomData__";	s.bindingHandlers.selectedOptions = {	init: function(C, D, B) {	s.utils.registerEventHandler(C, "change", function() {	var E = D(),	F = [];	s.utils.arrayForEach(C.getElementsByTagName("option"), function(G) {	if (G.selected) {	F.push(s.selectExtensions.readValue(G))	}	});	s.expressionRewriting.writeValueToProperty(E, B, "value", F)	})	},	update: function(B, D) {	if (s.utils.tagNameLower(B) != "select") {	throw new Error("values binding applies only to SELECT elements")	}	var C = s.utils.unwrapObservable(D());	if (C && typeof C.length == "number") {	s.utils.arrayForEach(B.getElementsByTagName("option"), function(F) {	var E = s.utils.arrayIndexOf(C, s.selectExtensions.readValue(F)) >= 0;	s.utils.setOptionNodeSelectionState(F, E)	})	}	}	};	s.bindingHandlers.style = {	update: function(B, F) {	var E = s.utils.unwrapObservable(F() || {});	for (var C in E) {	if (typeof C == "string") {	var D = s.utils.unwrapObservable(E[C]);	B.style[C] = D || ""	}	}	}	};	s.bindingHandlers.submit = {	init: function(C, D, B, E) {	if (typeof D() != "function") {	throw new Error("The value for a submit binding must be a function")	}	s.utils.registerEventHandler(C, "submit", function(F) {	var G;	var H = D();	try {	G = H.call(E, C)	} finally {	if (G !== true) {	if (F.preventDefault) {	F.preventDefault()	} else {	F.returnValue = false	}	}	}	})	}	};	s.bindingHandlers.text = {	update: function(B, C) {	s.utils.setTextContent(B, C())	}	};	s.virtualElements.allowedBindings.text = true;	s.bindingHandlers.uniqueName = {	init: function(B, D) {	if (D()) {	var C = "ko_unique_" + (++s.bindingHandlers.uniqueName.currentIndex);	s.utils.setElementName(B, C)	}	}	};	s.bindingHandlers.uniqueName.currentIndex = 0;	s.bindingHandlers.value = {	init: function(C, H, B) {	var D = ["change"];	var G = B()["valueUpdate"];	var F = false;	if (G) {	if (typeof G == "string") {	G = [G]	}	s.utils.arrayPushAll(D, G);	D = s.utils.arrayGetDistinctValues(D)	}	var I = function() {	F = false;	var K = H();	var J = s.selectExtensions.readValue(C);	s.expressionRewriting.writeValueToProperty(K, B, "value", J)	};	var E = s.utils.ieVersion && C.tagName.toLowerCase() == "input" && C.type == "text" && C.autocomplete != "off" && (!C.form || C.form.autocomplete != "off");	if (E && s.utils.arrayIndexOf(D, "propertychange") == -1) {	s.utils.registerEventHandler(C, "propertychange", function() {	F = true	});	s.utils.registerEventHandler(C, "blur", function() {	if (F) {	I()	}	})	}	s.utils.arrayForEach(D, function(J) {	var K = I;	if (s.utils.stringStartsWith(J, "after")) {	K = function() {	setTimeout(I, 0)	};	J = J.substring("after".length)	}	s.utils.registerEventHandler(C, J, K)	})	},	update: function(D, G) {	var I = s.utils.tagNameLower(D) === "select";	var F = s.utils.unwrapObservable(G());	var E = s.selectExtensions.readValue(D);	var H = (F != E);	if ((F === 0) && (E !== 0) && (E !== "0")) {	H = true	}	if (H) {	var C = function() {	s.selectExtensions.writeValue(D, F)	};	C();	var B = I;	if (B) {	setTimeout(C, 0)	}	}	if (I && (D.length > 0)) {	q(D, F, false)	}	}	};	s.bindingHandlers.visible = {	update: function(B, E) {	var D = s.utils.unwrapObservable(E());	var C = !(B.style.display == "none");	if (D && !C) {	B.style.display = ""	} else {	if ((!D) && C) {	B.style.display = "none"	}	}	}	};	u("click");	s.templateEngine = function() {};	s.templateEngine.prototype.renderTemplateSource = function(D, B, C) {	throw new Error("Override renderTemplateSource")	};	s.templateEngine.prototype.createJavaScriptEvaluatorBlock = function(B) {	throw new Error("Override createJavaScriptEvaluatorBlock")	};	s.templateEngine.prototype.makeTemplateSource = function(C, D) {	if (typeof C == "string") {	D = D || h;	var B = D.getElementById(C);	if (!B) {	throw new Error("Cannot find template with ID " + C)	}	return new s.templateSources.domElement(B)	} else {	if ((C.nodeType == 1) || (C.nodeType == 8)) {	return new s.templateSources.anonymousTemplate(C)	} else {	throw new Error("Unknown template type: " + C)	}	}	};	s.templateEngine.prototype.renderTemplate = function(D, B, C, E) {	var F = this["makeTemplateSource"](D, E);	return this["renderTemplateSource"](F, B, C)	};	s.templateEngine.prototype.isTemplateRewritten = function(B, C) {	if (this["allowTemplateRewriting"] === false) {	return true	}	return this["makeTemplateSource"](B, C)["data"]("isRewritten")	};	s.templateEngine.prototype.rewriteTemplate = function(D, B, E) {	var F = this["makeTemplateSource"](D, E);	var C = B(F.text());	F.text(C);	F.data("isRewritten", true)	};	s.exportSymbol("templateEngine", s.templateEngine);	s.templateRewriting = (function() {	var C = /(<[a-z]+\d*(\s+(?!data-bind=)[a-z0-9\-]+(=(\"[^\"]*\"|\'[^\']*\'))?)*\s+)data-bind=(["'])([\s\S]*?)\5/gi;	var D = /<!--\s*ko\b\s*([\s\S]*?)\s*-->/g;	function E(I) {	var F = s.expressionRewriting.bindingRewriteValidators;	for (var G = 0; G < I.length; G++) {	var H = I[G]["key"];	if (F.hasOwnProperty(H)) {	var K = F[H];	if (typeof K === "function") {	var J = K(I[G]["value"]);	if (J) {	throw new Error(J)	}	} else {	if (!K) {	throw new Error("This template engine does not support the '" + H + "' binding within its templates")	}	}	}	}	}	function B(G, J, K) {	var H = s.expressionRewriting.parseObjectLiteral(G);	E(H);	var I = s.expressionRewriting.preProcessBindings(H);	var F = "ko.__tr_ambtns(function($context,$element){return(function(){return{ " + I + " } })()})";	return K.createJavaScriptEvaluatorBlock(F) + J	}	return {	ensureTemplateIsRewritten: function(F, H, G) {	if (!H.isTemplateRewritten(F, G)) {	H.rewriteTemplate(F, function(I) {	return s.templateRewriting.memoizeBindingAttributeSyntax(I, H)	}, G)	}	},	memoizeBindingAttributeSyntax: function(F, G) {	return F.replace(C, function() {	return B(arguments[6], arguments[1], G)	}).replace(D, function() {	return B(arguments[1], "<!-- ko -->", G)	})	},	applyMemoizedBindingsToNextSibling: function(F) {	return s.memoization.memoize(function(H, G) {	if (H.nextSibling) {	s.applyBindingsToNode(H.nextSibling, F, G)	}	})	}	}	})();	s.exportSymbol("__tr_ambtns", s.templateRewriting.applyMemoizedBindingsToNextSibling);	(function() {	s.templateSources = {};	s.templateSources.domElement = function(C) {	this.domElement = C	};	s.templateSources.domElement.prototype.text = function() {	var D = s.utils.tagNameLower(this.domElement),	C = D === "script" ? "text" : D === "textarea" ? "value" : "innerHTML";	if (arguments.length == 0) {	return this.domElement[C]	} else {	var E = arguments[0];	if (C === "innerHTML") {	s.utils.setHtml(this.domElement, E)	} else {	this.domElement[C] = E	}	}	};	s.templateSources.domElement.prototype.data = function(C) {	if (arguments.length === 1) {	return s.utils.domData.get(this.domElement, "templateSourceData_" + C)	} else {	s.utils.domData.set(this.domElement, "templateSourceData_" + C, arguments[1])	}	};	var B = "__ko_anon_template__";	s.templateSources.anonymousTemplate = function(C) {	this.domElement = C	};	s.templateSources.anonymousTemplate.prototype = new s.templateSources.domElement();	s.templateSources.anonymousTemplate.prototype.text = function() {	if (arguments.length == 0) {	var C = s.utils.domData.get(this.domElement, B) || {};	if (C.textData === k && C.containerData) {	C.textData = C.containerData.innerHTML	}	return C.textData	} else {	var D = arguments[0];	s.utils.domData.set(this.domElement, B, {	textData: D	})	}	};	s.templateSources.domElement.prototype.nodes = function() {	if (arguments.length == 0) {	var C = s.utils.domData.get(this.domElement, B) || {};	return C.containerData	} else {	var D = arguments[0];	s.utils.domData.set(this.domElement, B, {	containerData: D	})	}	};	s.exportSymbol("templateSources", s.templateSources);	s.exportSymbol("templateSources.domElement", s.templateSources.domElement);	s.exportSymbol("templateSources.anonymousTemplate", s.templateSources.anonymousTemplate)	})();	(function() {	var B;	s.setTemplateEngine = function(I) {	if ((I != k) && !(I instanceof s.templateEngine)) {	throw new Error("templateEngine must inherit from ko.templateEngine")	}	B = I	};	function G(J, L, I) {	var N, M = J,	K = s.virtualElements.nextSibling(L);	while (M && ((N = M) !== K)) {	M = s.virtualElements.nextSibling(N);	if (N.nodeType === 1 || N.nodeType === 8) {	I(N)	}	}	}	function C(J, I) {	if (J.length) {	var K = J[0],	L = J[J.length - 1];	G(K, L, function(M) {	s.applyBindings(I, M)	});	G(K, L, function(M) {	s.memoization.unmemoizeDomNodeAndDescendants(M, [I])	})	}	}	function F(I) {	return I.nodeType ? I : I.length > 0 ? I[0] : null	}	function E(O, N, P, I, L) {	L = L || {};	var J = O && F(O);	var Q = J && J.ownerDocument;	var R = (L.templateEngine || B);	s.templateRewriting.ensureTemplateIsRewritten(P, R, Q);	var M = R.renderTemplate(P, I, L, Q);	if ((typeof M.length != "number") || (M.length > 0 && typeof M[0].nodeType != "number")) {	throw new Error("Template engine must return an array of DOM nodes")	}	var K = false;	switch (N) {	case "replaceChildren":	s.virtualElements.setDomNodeChildren(O, M);	K = true;	break;	case "replaceNode":	s.utils.replaceDomNodes(O, M);	K = true;	break;	case "ignoreTargetNode":	break;	default:	throw new Error("Unknown renderMode: " + N)	}	if (K) {	C(M, I);	if (L.afterRender) {	s.dependencyDetection.ignore(L.afterRender, null, [M, I["$data"]])	}	}	return M	}	s.renderTemplate = function(O, J, L, N, M) {	L = L || {};	if ((L.templateEngine || B) == k) {	throw new Error("Set a template engine before calling renderTemplate")	}	M = M || "replaceChildren";	if (N) {	var K = F(N);	var P = function() {	return (!K) || !s.utils.domNodeIsAttachedToDocument(K)	};	var I = (K && M == "replaceNode") ? K.parentNode : K;	return s.dependentObservable(function() {	var Q = (J && (J instanceof s.bindingContext)) ? J : new s.bindingContext(s.utils.unwrapObservable(J));	var S = typeof(O) == "function" ? O(Q["$data"], Q) : O;	var R = E(N, M, S, Q, L);	if (M == "replaceNode") {	N = R;	K = F(N)	}	}, null, {	disposeWhen: P,	disposeWhenNodeIsRemoved: I	})	} else {	return s.memoization.memoize(function(Q) {	s.renderTemplate(O, J, L, Q, "replaceNode")	})	}	};	s.renderTemplateForEach = function(P, K, M, O, N) {	var J;	var L = function(Q, R) {	J = N.createChildContext(s.utils.unwrapObservable(Q), M.as);	J["$index"] = R;	var S = typeof(P) == "function" ? P(Q, J) : P;	return E(null, "ignoreTargetNode", S, J, M)	};	var I = function(R, Q, S) {	C(Q, J);	if (M.afterRender) {	M.afterRender(Q, R)	}	};	return s.dependentObservable(function() {	var R = s.utils.unwrapObservable(K) || [];	if (typeof R.length == "undefined") {	R = [R]	}	var Q = s.utils.arrayFilter(R, function(S) {	return M.includeDestroyed || S === k || S === null || !s.utils.unwrapObservable(S._destroy)	});	s.dependencyDetection.ignore(s.utils.setDomNodeChildrenFromArrayMapping, null, [O, Q, L, M, I])	}, null, {	disposeWhenNodeIsRemoved: O	})	};	var H = "__ko__templateComputedDomDataKey__";	function D(I, J) {	var K = s.utils.domData.get(I, H);	if (K && (typeof(K.dispose) == "function")) {	K.dispose()	}	s.utils.domData.set(I, H, (J && J.isActive()) ? J : k)	}	s.bindingHandlers.template = {	init: function(K, M) {	var I = s.utils.unwrapObservable(M());	if ((typeof I != "string") && (!I.name) && (K.nodeType == 1 || K.nodeType == 8)) {	var L = K.nodeType == 1 ? K.childNodes : s.virtualElements.childNodes(K),	J = s.utils.moveCleanedNodesToContainerElement(L);	new s.templateSources.anonymousTemplate(K)["nodes"](J)	}	return {	controlsDescendantBindings: true	}	},	update: function(M, S, I, T, J) {	var R = s.utils.unwrapObservable(S()),	O = {},	P = true,	L, Q = null;	if (typeof R != "string") {	O = R;	R = O.name;	if ("if" in O) {	P = s.utils.unwrapObservable(O["if"])	}	if (P && "ifnot" in O) {	P = !s.utils.unwrapObservable(O.ifnot)	}	L = s.utils.unwrapObservable(O.data)	}	if ("foreach" in O) {	var K = (P && O.foreach) || [];	Q = s.renderTemplateForEach(R || M, K, O, M, J)	} else {	if (!P) {	s.virtualElements.emptyNode(M)	} else {	var N = ("data" in O) ? J.createChildContext(L, O.as) : J;	Q = s.renderTemplate(R || M, N, O, M)	}	}	D(M, Q)	}	};	s.expressionRewriting.bindingRewriteValidators.template = function(I) {	var J = s.expressionRewriting.parseObjectLiteral(I);	if ((J.length == 1) && J[0]["unknown"]) {	return null	}	if (s.expressionRewriting.keyValueArrayContainsKey(J, "name")) {	return null	}	return "This template engine does not support anonymous templates nested within its templates"	};	s.virtualElements.allowedBindings.template = true	})();	s.exportSymbol("setTemplateEngine", s.setTemplateEngine);	s.exportSymbol("renderTemplate", s.renderTemplate);	s.utils.compareArrays = (function() {	var E = "added",	D = "deleted";	function B(H, G, F) {	H = H || [];	G = G || [];	if (H.length <= G.length) {	return C(H, G, E, D, F)	} else {	return C(G, H, D, E, F)	}	}	function C(ac, G, ag, af, N) {	var W = Math.min,	V = Math.max,	O = [],	ad, ae = ac.length,	H, I = G.length,	L = (I - ae) || 1,	T = ae + I + 1,	ah, R, J, K;	for (ad = 0; ad <= ae; ad++) {	R = ah;	O.push(ah = []);	J = W(I, ad + L);	K = V(0, ad - 1);	for (H = K; H <= J; H++) {	if (!H) {	ah[H] = ad + 1	} else {	if (!ad) {	ah[H] = H + 1	} else {	if (ac[ad - 1] === G[H - 1]) {	ah[H] = R[H - 1]	} else {	var X = R[H] || T;	var ai = ah[H - 1] || T;	ah[H] = W(X, ai) + 1	}	}	}	}	}	var P = [],	U, aa = [],	Y = [];	for (ad = ae, H = I; ad || H;) {	U = O[ad][H] - 1;	if (H && U === O[ad][H - 1]) {	aa.push(P[P.length] = {	status: ag,	value: G[--H],	index: H	})	} else {	if (ad && U === O[ad - 1][H]) {	Y.push(P[P.length] = {	status: af,	value: ac[--ad],	index: ad	})	} else {	P.push({	status: "retained",	value: G[--H]	});	--ad	}	}	}	if (aa.length && Y.length) {	var S = ae * 10,	Q, F, M, ab, Z;	for (Q = F = 0;	(N || Q < S) && (ab = aa[F]); F++) {	for (M = 0; Z = Y[M]; M++) {	if (ab.value === Z.value) {	ab.moved = Z.index;	Z.moved = ab.index;	Y.splice(M, 1);	Q = M = 0;	break	}	}	Q += M	}	}	return P.reverse()	}	return B	})();	s.exportSymbol("utils.compareArrays", s.utils.compareArrays);	(function() {	function B(E) {	while (E.length && !s.utils.domNodeIsAttachedToDocument(E[0])) {	E.splice(0, 1)	}	if (E.length > 1) {	var F = E[0],	G = E[E.length - 1],	H = [F];	while (F !== G) {	F = F.nextSibling;	if (!F) {	return	}	H.push(F)	}	Array.prototype.splice.apply(E, [0, E.length].concat(H))	}	return E	}	function D(F, J, K, E, H) {	var I = [];	var G = s.dependentObservable(function() {	var L = J(K, H) || [];	if (I.length > 0) {	s.utils.replaceDomNodes(B(I), L);	if (E) {	s.dependencyDetection.ignore(E, null, [K, L, H])	}	}	I.splice(0, I.length);	s.utils.arrayPushAll(I, L)	}, null, {	disposeWhenNodeIsRemoved: F,	disposeWhen: function() {	return (I.length == 0) || !s.utils.domNodeIsAttachedToDocument(I[0])	}	});	return {	mappedNodes: I,	dependentObservable: (G.isActive() ? G : k)	}	}	var C = "setDomNodeChildrenFromArrayMapping_lastMappingResult";	s.utils.setDomNodeChildrenFromArrayMapping = function(H, E, X, ae, F) {	E = E || [];	ae = ae || {};	var L = s.utils.domData.get(H, C) === k;	var T = s.utils.domData.get(H, C) || [];	var S = s.utils.arrayMap(T, function(af) {	return af.arrayEntry	});	var I = s.utils.compareArrays(S, E);	var Z = [];	var U = 0;	var aa = 0;	var ad = [];	var Q = [];	var O = [];	var P = [];	var N = [];	var W;	function M(af, ag) {	W = T[ag];	if (aa !== ag) {	P[af] = W	}	W.indexObservable(aa++);	B(W.mappedNodes);	Z.push(W);	Q.push(W)	}	function G(af, ah) {	if (af) {	for (var ag = 0, ai = ah.length; ag < ai; ag++) {	if (ah[ag]) {	s.utils.arrayForEach(ah[ag].mappedNodes, function(aj) {	af(aj, ag, ah[ag].arrayEntry)	})	}	}	}	}	for (var K = 0, J, Y; J = I[K]; K++) {	Y = J.moved;	switch (J.status) {	case "deleted":	if (Y === k) {	W = T[U];	if (W.dependentObservable) {	W.dependentObservable.dispose()	}	ad.push.apply(ad, B(W.mappedNodes));	if (ae.beforeRemove) {	O[K] = W;	Q.push(W)	}	}	U++;	break;	case "retained":	M(K, U++);	break;	case "added":	if (Y !== k) {	M(K, Y)	} else {	W = {	arrayEntry: J.value,	indexObservable: s.observable(aa++)	};	Z.push(W);	Q.push(W);	if (!L) {	N[K] = W	}	}	break	}	}	G(ae.beforeMove, P);	s.utils.arrayForEach(ad, ae.beforeRemove ? s.cleanNode : s.removeNode);	for (var K = 0, ab = s.virtualElements.firstChild(H), V, ac; W = Q[K]; K++) {	if (!W.mappedNodes) {	s.utils.extend(W, D(H, X, W.arrayEntry, F, W.indexObservable))	}	for (var R = 0; ac = W.mappedNodes[R]; ab = ac.nextSibling, V = ac, R++) {	if (ac !== ab) {	s.virtualElements.insertAfter(H, ac, V)	}	}	if (!W.initialized && F) {	F(W.arrayEntry, W.mappedNodes, W.indexObservable);	W.initialized = true	}	}	G(ae.beforeRemove, O);	G(ae.afterMove, P);	G(ae.afterAdd, N);	s.utils.domData.set(H, C, Z)	}	})();	s.exportSymbol("utils.setDomNodeChildrenFromArrayMapping", s.utils.setDomNodeChildrenFromArrayMapping);	s.nativeTemplateEngine = function() {	this["allowTemplateRewriting"] = false	};	s.nativeTemplateEngine.prototype = new s.templateEngine();	s.nativeTemplateEngine.prototype.renderTemplateSource = function(F, B, C) {	var H = !(s.utils.ieVersion < 9),	E = H ? F.nodes : null,	D = E ? F.nodes() : null;	if (D) {	return s.utils.makeArray(D.cloneNode(true).childNodes)	} else {	var G = F.text();	return s.utils.parseHtmlFragment(G)	}	};	s.nativeTemplateEngine.instance = new s.nativeTemplateEngine();	s.setTemplateEngine(s.nativeTemplateEngine.instance);	s.exportSymbol("nativeTemplateEngine", s.nativeTemplateEngine);	(function() {	s.jqueryTmplTemplateEngine = function() {	var E = this.jQueryTmplVersion = (function() {	if ((typeof(i) == "undefined") || !(i.tmpl)) {	return 0	}	try {	if (i.tmpl["tag"]["tmpl"]["open"].toString().indexOf("__") >= 0) {	return 2	}	} catch (F) {}	return 1	})();	function C() {	if (E < 2) {	throw new Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.")	}	}	function D(F, G, H) {	return i.tmpl(F, G, H)	}	this["renderTemplateSource"] = function(L, F, I) {	I = I || {};	C();	var J = L.data("precompiled");	if (!J) {	var M = L.text() || "";	M = "{{ko_with $item.koBindingContext}}" + M + "{{/ko_with}}";	J = i.template(null, M);	L.data("precompiled", J)	}	var G = [F["$data"]];	var H = i.extend({	koBindingContext: F	}, I.templateOptions);	var K = D(J, G, H);	K.appendTo(h.createElement("div"));	i.fragments = {};	return K	};	this["createJavaScriptEvaluatorBlock"] = function(F) {	return "{{ko_code ((function() { return " + F + " })()) }}"	};	this["addTemplate"] = function(G, F) {	h.write("<script type='text/html' id='" + G + "'>" + F + "</script>")	};	if (E > 1) {	i.tmpl["tag"]["ko_code"] = {	open: "__.push($1 || '');"	};	i.tmpl["tag"]["ko_with"] = {	open: "with($1) {",	close: "} "	}	}	};	s.jqueryTmplTemplateEngine.prototype = new s.templateEngine();	var B = new s.jqueryTmplTemplateEngine();	if (B.jQueryTmplVersion > 0) {	s.setTemplateEngine(B)	}	s.exportSymbol("jqueryTmplTemplateEngine", s.jqueryTmplTemplateEngine)	})()	})	})(window, document, navigator, d);	e.observable = function(g) {	if (typeof(g) === "object" && g.constructor == Array) {	return c.observableArray(g)	}	if (typeof(g) === "function") {	return c.computed(g)	}	return c.observable(g)	};	e.applyBindings = function(g) {	if (!g.node) {	g.node = window.document.body	}	if (g.binding) {	c.applyBindingsToNode(g.node, g.binding, g.viewModel)	} else {	c.applyBindings(g.viewModel, g.node)	}	};	e.inject = function(g) {	var j = '<script id="' + g.id + '" type="text/html">';	j += g.content;	j += "</script>";	if (typeof g.target == "undefined" || g.target.toLowerCase() == "body") {	var h = document.createElement("div");	h.setAttribute("style", "display:none;");	document.body.appendChild(h);	c.utils.setHtml(h, j)	} else {	var i = b.Sizzle(g.target)[0];	c.utils.setHtml(i, j)	}	};	e.clearNode = function(g) {	c.cleanNode(g)	};	c.bindingHandlers.cssClass = {	update: function(g, i) {	var h = c.utils.unwrapObservable(i());	g.className = h	}	};	e.bindingHandlers = c.bindingHandlers;	e.TemplateEngine = {	Native: 1,	jQuery: 2	};	e.forceTemplateEngine = function(g) {	if (g === e.TemplateEngine.Native) {	c.setTemplateEngine(new c.nativeTemplateEngine())	} else {	if (g === e.TemplateEngine.jQuery) {	c.setTemplateEngine(new c.jqueryTmplTemplateEngine())	} else {	b.Error.raise({	code: b.Error.Codes.INVALID_TEMPLATE_ENGINE,	target: e,	info: {	methodName: "ForceTemplateEngine",	expectedType: "Templating.TemplateEngine"	}	})	}	}	} 	})(b.Templating = b.Templating || {}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	(function(a0, aT) {	var aj, aY = "2.4.0",	B = this,	aO = Math.round,	E, a1 = 0,	al = 1,	m = 2,	D = 3,	ai = 4,	aP = 5,	ah = 6,	Q = {},	C = (typeof module !== "undefined" && module.exports && typeof require !== "undefined"),	f = /^\/?Date\((\-?\d+)/i,	g = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,	K = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,	x = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,	U = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,	ay = /\d\d?/,	aB = /\d{1,3}/,	az = /\d{1,4}/,	aA = /[+\-]?\d{1,6}/,	av = /\d+/,	aI = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,	aG = /Z|[\+\-]\d\d:?\d\d/i,	aD = /T/i,	aF = /[\+\-]?\d+(\.\d{1,3})?/,	ax = /\d/,	aH = /\d\d/,	aE = /\d{3}/,	aw = /\d{4}/,	aC = /[+\-]?\d{6}/,	M = /^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d:?\d\d|\s*Z)?)?$/,	L = "YYYY-MM-DDTHH:mm:ssZ",	J = ["YYYY-MM-DD", "GGGG-[W]WW", "GGGG-[W]WW-E", "YYYY-DDD"],	N = [	["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d{1,3}/],	["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],	["HH:mm", /(T| )\d\d:\d\d/],	["HH", /(T| )\d\d/]	],	au = /([\+\-]|\d\d)/gi,	aK = "Date|Hours|Minutes|Seconds|Milliseconds".split("|"),	aW = {	Milliseconds: 1,	Seconds: 1000,	Minutes: 60000,	Hours: 3600000,	Days: 86400000,	Months: 2592000000,	Years: 31536000000	},	aV = {	ms: "millisecond",	s: "second",	m: "minute",	h: "hour",	d: "day",	D: "date",	w: "week",	W: "isoWeek",	M: "month",	y: "year",	DDD: "dayOfYear",	e: "weekday",	E: "isoWeekday",	gg: "weekYear",	GG: "isoWeekYear"	},	h = {	dayofyear: "dayOfYear",	isoweekday: "isoWeekday",	isoweek: "isoWeek",	weekyear: "weekYear",	isoweekyear: "isoWeekYear"	},	v = {},	aq = "DDD w W M D d".split(" "),	ar = "M D H h m s w W".split(" "),	y = {	M: function() {	return this.month() + 1	},	MMM: function(i) {	return this.lang().monthsShort(this, i)	},	MMMM: function(i) {	return this.lang().months(this, i)	},	D: function() {	return this.date()	},	DDD: function() {	return this.dayOfYear()	},	d: function() {	return this.day()	},	dd: function(i) {	return this.lang().weekdaysMin(this, i)	},	ddd: function(i) {	return this.lang().weekdaysShort(this, i)	},	dddd: function(i) {	return this.lang().weekdays(this, i)	},	w: function() {	return this.week()	},	W: function() {	return this.isoWeek()	},	YY: function() {	return R(this.year() % 100, 2)	},	YYYY: function() {	return R(this.year(), 4)	},	YYYYY: function() {	return R(this.year(), 5)	},	gg: function() {	return R(this.weekYear() % 100, 2)	},	gggg: function() {	return this.weekYear()	},	ggggg: function() {	return R(this.weekYear(), 5)	},	GG: function() {	return R(this.isoWeekYear() % 100, 2)	},	GGGG: function() {	return this.isoWeekYear()	},	GGGGG: function() {	return R(this.isoWeekYear(), 5)	},	e: function() {	return this.weekday()	},	E: function() {	return this.isoWeekday()	},	a: function() {	return this.lang().meridiem(this.hours(), this.minutes(), true)	},	A: function() {	return this.lang().meridiem(this.hours(), this.minutes(), false)	},	H: function() {	return this.hours()	},	h: function() {	return this.hours() % 12 || 12	},	m: function() {	return this.minutes()	},	s: function() {	return this.seconds()	},	S: function() {	return aS(this.milliseconds() / 100)	},	SS: function() {	return R(aS(this.milliseconds() / 10), 2)	},	SSS: function() {	return R(this.milliseconds(), 3)	},	SSSS: function() {	return R(this.milliseconds(), 3)	},	Z: function() {	var i = -this.zone(),	a2 = "+";	if (i < 0) {	i = -i;	a2 = "-"	}	return a2 + R(aS(i / 60), 2) + ":" + R(aS(i) % 60, 2)	},	ZZ: function() {	var i = -this.zone(),	a2 = "+";	if (i < 0) {	i = -i;	a2 = "-"	}	return a2 + R(aS(10 * i / 6), 4)	},	z: function() {	return this.zoneAbbr()	},	zz: function() {	return this.zoneName()	},	X: function() {	return this.unix()	},	Q: function() {	return this.quarter()	}	},	S = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"];	function at(a2, i) {	return function(a3) {	return R(a2.call(this, a3), i)	}	}	function ap(i, a2) {	return function(a3) {	return this.lang().ordinal(i.call(this, a3), a2)	}	}	while (aq.length) {	E = aq.pop();	y[E + "o"] = ap(y[E], E)	}	while (ar.length) {	E = ar.pop();	y[E + E] = at(y[E], 2)	}	y.DDDD = at(y.DDD, 3);	function P() {}	function ak(i) {	j(i);	u(this, i)	}	function s(a2) {	var a7 = an(a2),	ba = a7.year || 0,	a6 = a7.month || 0,	a9 = a7.week || 0,	i = a7.day || 0,	a3 = a7.hour || 0,	a5 = a7.minute || 0,	a8 = a7.second || 0,	a4 = a7.millisecond || 0;	this._milliseconds = +a4 + a8 * 1000 + a5 * 60000 + a3 * 3600000;	this._days = +i + a9 * 7;	this._months = +a6 + ba * 12;	this._data = {};	this._bubble()	}	function u(a2, a3) {	for (var a4 in a3) {	if (a3.hasOwnProperty(a4)) {	a2[a4] = a3[a4]	}	}	if (a3.hasOwnProperty("toString")) {	a2.toString = a3.toString	}	if (a3.hasOwnProperty("valueOf")) {	a2.valueOf = a3.valueOf	}	return a2	}	function c(i) {	if (i < 0) {	return Math.ceil(i)	} else {	return Math.floor(i)	}	}	function R(i, a3) {	var a2 = i + "";	while (a2.length < a3) {	a2 = "0" + a2	}	return a2	}	function d(a8, a2, a5, a4) {	var a6 = a2._milliseconds,	i = a2._days,	a9 = a2._months,	a7, a3;	if (a6) {	a8._d.setTime(+a8._d + a6 * a5)	}	if (i || a9) {	a7 = a8.minute();	a3 = a8.hour()	}	if (i) {	a8.date(a8.date() + i * a5)	}	if (a9) {	a8.month(a8.month() + a9 * a5)	}	if (a6 && !a4) {	aj.updateOffset(a8)	}	if (i || a9) {	a8.minute(a7);	a8.hour(a3)	}	}	function G(i) {	return Object.prototype.toString.call(i) === "[object Array]"	}	function H(i) {	return Object.prototype.toString.call(i) === "[object Date]" || i instanceof Date	}	function k(a2, a3, a5) {	var a7 = Math.min(a2.length, a3.length),	a8 = Math.abs(a2.length - a3.length),	a4 = 0,	a6;	for (a6 = 0; a6 < a7; a6++) {	if ((a5 && a2[a6] !== a3[a6]) || (!a5 && aS(a2[a6]) !== aS(a3[a6]))) {	a4++	}	}	return a4 + a8	}	function ao(a2) {	if (a2) {	var i = a2.toLowerCase().replace(/(.)s$/, "$1");	a2 = aV[a2] || h[i] || i	}	return a2	}	function an(a2) {	var a3 = {},	a4, a5, i;	for (a5 in a2) {	if (a2.hasOwnProperty(a5)) {	a4 = ao(a5);	if (a4) {	a3[a4] = a2[a5]	}	}	}	return a3	}	function ae(a2) {	var i, a3;	if (a2.indexOf("week") === 0) {	i = 7;	a3 = "day"	} else {	if (a2.indexOf("month") === 0) {	i = 12;	a3 = "month"	} else {	return	}	}	aj[a2] = function(a4, a7) {	var a6, a5, a8 = aj.fn._lang[a2],	a9 = [];	if (typeof a4 === "number") {	a7 = a4;	a4 = aT	}	a5 = function(ba) {	var bb = aj().utc().set(a3, ba);	return a8.call(aj.fn._lang, bb, a4 || "")	};	if (a7 != null) {	return a5(a7)	} else {	for (a6 = 0; a6 < i; a6++) {	a9.push(a5(a6))	}	return a9	}	}	}	function aS(i) {	var a2 = +i,	a3 = 0;	if (a2 !== 0 && isFinite(a2)) {	if (a2 >= 0) {	a3 = Math.floor(a2)	} else {	a3 = Math.ceil(a2)	}	}	return a3	}	function q(a2, i) {	return new Date(Date.UTC(a2, i + 1, 0)).getUTCDate()	}	function r(i) {	return I(i) ? 366 : 365	}	function I(i) {	return (i % 4 === 0 && i % 100 !== 0) || i % 400 === 0	}	function j(i) {	var a2;	if (i._a && i._pf.overflow === -2) {	a2 = i._a[al] < 0 || i._a[al] > 11 ? al : i._a[m] < 1 || i._a[m] > q(i._a[a1], i._a[al]) ? m : i._a[D] < 0 || i._a[D] > 23 ? D : i._a[ai] < 0 || i._a[ai] > 59 ? ai : i._a[aP] < 0 || i._a[aP] > 59 ? aP : i._a[ah] < 0 || i._a[ah] > 999 ? ah : -1;	if (i._pf._overflowDayOfYear && (a2 < a1 || a2 > m)) {	a2 = m	}	i._pf.overflow = a2	}	}	function F(i) {	i._pf = {	empty: false,	unusedTokens: [],	unusedInput: [],	overflow: -2,	charsLeftOver: 0,	nullInput: false,	invalidMonth: null,	invalidFormat: false,	userInvalidated: false,	iso: false	}	}	function O(i) {	if (i._isValid == null) {	i._isValid = !isNaN(i._d.getTime()) && i._pf.overflow < 0 && !i._pf.empty && !i._pf.invalidMonth && !i._pf.nullInput && !i._pf.invalidFormat && !i._pf.userInvalidated;	if (i._strict) {	i._isValid = i._isValid && i._pf.charsLeftOver === 0 && i._pf.unusedTokens.length === 0	}	}	return i._isValid	}	function am(i) {	return i ? i.toLowerCase().replace("_", "-") : i	}	u(P.prototype, {	set: function(a2) {	var a4, a3;	for (a3 in a2) {	a4 = a2[a3];	if (typeof a4 === "function") {	this[a3] = a4	} else {	this["_" + a3] = a4	}	}	},	_months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),	months: function(i) {	return this._months[i.month()]	},	_monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),	monthsShort: function(i) {	return this._monthsShort[i.month()]	},	monthsParse: function(a4) {	var a2, a3, a5;	if (!this._monthsParse) {	this._monthsParse = []	}	for (a2 = 0; a2 < 12; a2++) {	if (!this._monthsParse[a2]) {	a3 = aj.utc([2000, a2]);	a5 = "^" + this.months(a3, "") + "|^" + this.monthsShort(a3, "");	this._monthsParse[a2] = new RegExp(a5.replace(".", ""), "i")	}	if (this._monthsParse[a2].test(a4)) {	return a2	}	}	},	_weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),	weekdays: function(i) {	return this._weekdays[i.day()]	},	_weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),	weekdaysShort: function(i) {	return this._weekdaysShort[i.day()]	},	_weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),	weekdaysMin: function(i) {	return this._weekdaysMin[i.day()]	},	weekdaysParse: function(a5) {	var a2, a3, a4;	if (!this._weekdaysParse) {	this._weekdaysParse = []	}	for (a2 = 0; a2 < 7; a2++) {	if (!this._weekdaysParse[a2]) {	a3 = aj([2000, 1]).day(a2);	a4 = "^" + this.weekdays(a3, "") + "|^" + this.weekdaysShort(a3, "") + "|^" + this.weekdaysMin(a3, "");	this._weekdaysParse[a2] = new RegExp(a4.replace(".", ""), "i")	}	if (this._weekdaysParse[a2].test(a5)) {	return a2	}	}	},	_longDateFormat: {	LT: "h:mm A",	L: "MM/DD/YYYY",	LL: "MMMM D YYYY",	LLL: "MMMM D YYYY LT",	LLLL: "dddd, MMMM D YYYY LT"	},	longDateFormat: function(i) {	var a2 = this._longDateFormat[i];	if (!a2 && this._longDateFormat[i.toUpperCase()]) {	a2 = this._longDateFormat[i.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(a3) {	return a3.slice(1)	});	this._longDateFormat[i] = a2	}	return a2	},	isPM: function(i) {	return ((i + "").toLowerCase().charAt(0) === "p")	},	_meridiemParse: /[ap]\.?m?\.?/i,	meridiem: function(i, a3, a2) {	if (i > 11) {	return a2 ? "pm" : "PM"	} else {	return a2 ? "am" : "AM"	}	},	_calendar: {	sameDay: "[Today at] LT",	nextDay: "[Tomorrow at] LT",	nextWeek: "dddd [at] LT",	lastDay: "[Yesterday at] LT",	lastWeek: "[Last] dddd [at] LT",	sameElse: "L"	},	calendar: function(i, a2) {	var a3 = this._calendar[i];	return typeof a3 === "function" ? a3.apply(a2) : a3	},	_relativeTime: {	future: "in %s",	past: "%s ago",	s: "a few seconds",	m: "a minute",	mm: "%d minutes",	h: "an hour",	hh: "%d hours",	d: "a day",	dd: "%d days",	M: "a month",	MM: "%d months",	y: "a year",	yy: "%d years"	},	relativeTime: function(a2, a5, a4, i) {	var a3 = this._relativeTime[a4];	return (typeof a3 === "function") ? a3(a2, a5, a4, i) : a3.replace(/%d/i, a2)	},	pastFuture: function(i, a3) {	var a2 = this._relativeTime[i > 0 ? "future" : "past"];	return typeof a2 === "function" ? a2(a3) : a2.replace(/%s/i, a3)	},	ordinal: function(i) {	return this._ordinal.replace("%d", i)	},	_ordinal: "%d",	preparse: function(i) {	return i	},	postformat: function(i) {	return i	},	week: function(i) {	return aZ(i, this._week.dow, this._week.doy).week	},	_week: {	dow: 0,	doy: 6	},	_invalidDate: "Invalid date",	invalidDate: function() {	return this._invalidDate	}	});	function T(i, a2) {	a2.abbr = i;	if (!Q[i]) {	Q[i] = new P()	}	Q[i].set(a2);	return Q[i]	}	function aX(i) {	delete Q[i]	}	function z(a5) {	var a3 = 0,	a4, a6, a7, a8, a2 = function(a9) {	if (!Q[a9] && C) {	try {	require("./lang/" + a9)	} catch (i) {}	}	return Q[a9]	};	if (!a5) {	return aj.fn._lang	}	if (!G(a5)) {	a6 = a2(a5);	if (a6) {	return a6	}	a5 = [a5]	}	while (a3 < a5.length) {	a8 = am(a5[a3]).split("-");	a4 = a8.length;	a7 = am(a5[a3 + 1]);	a7 = a7 ? a7.split("-") : null;	while (a4 > 0) {	a6 = a2(a8.slice(0, a4).join("-"));	if (a6) {	return a6	}	if (a7 && a7.length >= a4 && k(a8, a7, true) >= a4 - 1) {	break	}	a4--	}	a3++	}	return aj.fn._lang	}	function aN(i) {	if (i.match(/\[[\s\S]/)) {	return i.replace(/^\[|\]$/g, "")	}	return i.replace(/\\/g, "")	}	function ac(a3) {	var a2 = a3.match(x),	a4, a5;	for (a4 = 0, a5 = a2.length; a4 < a5; a4++) {	if (y[a2[a4]]) {	a2[a4] = y[a2[a4]]	} else {	a2[a4] = aN(a2[a4])	}	}	return function(i) {	var a6 = "";	for (a4 = 0; a4 < a5; a4++) {	a6 += a2[a4] instanceof Function ? a2[a4].call(i, a3) : a2[a4]	}	return a6	}	}	function w(a2, i) {	if (!a2.isValid()) {	return a2.lang().invalidDate()	}	i = t(i, a2.lang());	if (!v[i]) {	v[i] = ac(i)	}	return v[i](a2)	}	function t(a2, a4) {	var a3 = 5;	function a5(i) {	return a4.longDateFormat(i) || i	}	U.lastIndex = 0;	while (a3 >= 0 && U.test(a2)) {	a2 = a2.replace(U, a5);	U.lastIndex = 0;	a3 -= 1	}	return a2	}	function A(a4, a2) {	var i, a3 = a2._strict;	switch (a4) {	case "DDDD":	return aE;	case "YYYY":	case "GGGG":	case "gggg":	return a3 ? aw : az;	case "YYYYY":	case "GGGGG":	case "ggggg":	return a3 ? aC : aA;	case "S":	if (a3) {	return ax	}	case "SS":	if (a3) {	return aH	}	case "SSS":	case "DDD":	return a3 ? aE : aB;	case "MMM":	case "MMMM":	case "dd":	case "ddd":	case "dddd":	return aI;	case "a":	case "A":	return z(a2._l)._meridiemParse;	case "X":	return aF;	case "Z":	case "ZZ":	return aG;	case "T":	return aD;	case "SSSS":	return av;	case "MM":	case "DD":	case "YY":	case "GG":	case "gg":	case "HH":	case "hh":	case "mm":	case "ss":	case "ww":	case "WW":	return a3 ? aH : ay;	case "M":	case "D":	case "d":	case "H":	case "h":	case "m":	case "s":	case "w":	case "W":	case "e":	case "E":	return a3 ? ax : ay;	default:	i = new RegExp(aL(aU(a4.replace("\\", "")), "i"));	return i	}	}	function aR(a3) {	var a4 = (aG.exec(a3) || [])[0],	a2 = (a4 + "").match(au) || ["-", 0, 0],	i = +(a2[1] * 60) + aS(a2[2]);	return a2[0] === "+" ? -i : i	}	function e(a5, a4, a2) {	var i, a3 = a2._a;	switch (a5) {	case "M":	case "MM":	if (a4 != null) {	a3[al] = aS(a4) - 1	}	break;	case "MMM":	case "MMMM":	i = z(a2._l).monthsParse(a4);	if (i != null) {	a3[al] = i	} else {	a2._pf.invalidMonth = a4	}	break;	case "D":	case "DD":	if (a4 != null) {	a3[m] = aS(a4)	}	break;	case "DDD":	case "DDDD":	if (a4 != null) {	a2._dayOfYear = aS(a4)	}	break;	case "YY":	a3[a1] = aS(a4) + (aS(a4) > 68 ? 1900 : 2000);	break;	case "YYYY":	case "YYYYY":	a3[a1] = aS(a4);	break;	case "a":	case "A":	a2._isPm = z(a2._l).isPM(a4);	break;	case "H":	case "HH":	case "h":	case "hh":	a3[D] = aS(a4);	break;	case "m":	case "mm":	a3[ai] = aS(a4);	break;	case "s":	case "ss":	a3[aP] = aS(a4);	break;	case "S":	case "SS":	case "SSS":	case "SSSS":	a3[ah] = aS(("0." + a4) * 1000);	break;	case "X":	a2._d = new Date(parseFloat(a4) * 1000);	break;	case "Z":	case "ZZ":	a2._useUTC = true;	a2._tzm = aR(a4);	break;	case "w":	case "ww":	case "W":	case "WW":	case "d":	case "dd":	case "ddd":	case "dddd":	case "e":	case "E":	a5 = a5.substr(0, 1);	case "gg":	case "gggg":	case "GG":	case "GGGG":	case "GGGGG":	a5 = a5.substr(0, 2);	if (a4) {	a2._w = a2._w || {};	a2._w[a5] = a4	}	break	}	}	function n(a2) {	var a6, a4, a7 = [],	a3, bd, a5, ba, a9, a8, bc, bb;	if (a2._d) {	return	}	a3 = l(a2);	if (a2._w && a2._a[m] == null && a2._a[al] == null) {	a5 = function(i) {	return i ? (i.length < 3 ? (parseInt(i, 10) > 68 ? "19" + i : "20" + i) : i) : (a2._a[a1] == null ? aj().weekYear() : a2._a[a1])	};	ba = a2._w;	if (ba.GG != null || ba.W != null || ba.E != null) {	a9 = p(a5(ba.GG), ba.W || 1, ba.E, 4, 1)	} else {	a8 = z(a2._l);	bc = ba.d != null ? aJ(ba.d, a8) : (ba.e != null ? parseInt(ba.e, 10) + a8._week.dow : 0);	bb = parseInt(ba.w, 10) || 1;	if (ba.d != null && bc < a8._week.dow) {	bb++	}	a9 = p(a5(ba.gg), bb, bc, a8._week.doy, a8._week.dow)	}	a2._a[a1] = a9.year;	a2._dayOfYear = a9.dayOfYear	}	if (a2._dayOfYear) {	bd = a2._a[a1] == null ? a3[a1] : a2._a[a1];	if (a2._dayOfYear > r(bd)) {	a2._pf._overflowDayOfYear = true	}	a4 = ag(bd, 0, a2._dayOfYear);	a2._a[al] = a4.getUTCMonth();	a2._a[m] = a4.getUTCDate()	}	for (a6 = 0; a6 < 3 && a2._a[a6] == null; ++a6) {	a2._a[a6] = a7[a6] = a3[a6]	}	for (; a6 < 7; a6++) {	a2._a[a6] = a7[a6] = (a2._a[a6] == null) ? (a6 === 2 ? 1 : 0) : a2._a[a6]	}	a7[D] += aS((a2._tzm || 0) / 60);	a7[ai] += aS((a2._tzm || 0) % 60);	a2._d = (a2._useUTC ? ag : V).apply(null, a7)	}	function o(i) {	var a2;	if (i._d) {	return	}	a2 = an(i._i);	i._a = [a2.year, a2.month, a2.day, a2.hour, a2.minute, a2.second, a2.millisecond];	n(i)	}	function l(i) {	var a2 = new Date();	if (i._useUTC) {	return [a2.getUTCFullYear(), a2.getUTCMonth(), a2.getUTCDate()]	} else {	return [a2.getFullYear(), a2.getMonth(), a2.getDate()]	}	}	function Z(a2) {	a2._a = [];	a2._pf.empty = true;	var a4 = z(a2._l),	a7 = "" + a2._i,	a3, a5, ba, a9, a6, a8 = a7.length,	bb = 0;	ba = t(a2._f, a4).match(x) || [];	for (a3 = 0; a3 < ba.length; a3++) {	a9 = ba[a3];	a5 = (A(a9, a2).exec(a7) || [])[0];	if (a5) {	a6 = a7.substr(0, a7.indexOf(a5));	if (a6.length > 0) {	a2._pf.unusedInput.push(a6)	}	a7 = a7.slice(a7.indexOf(a5) + a5.length);	bb += a5.length	}	if (y[a9]) {	if (a5) {	a2._pf.empty = false	} else {	a2._pf.unusedTokens.push(a9)	}	e(a9, a5, a2)	} else {	if (a2._strict && !a5) {	a2._pf.unusedTokens.push(a9)	}	}	}	a2._pf.charsLeftOver = a8 - bb;	if (a7.length > 0) {	a2._pf.unusedInput.push(a7)	}	if (a2._isPm && a2._a[D] < 12) {	a2._a[D] += 12	}	if (a2._isPm === false && a2._a[D] === 12) {	a2._a[D] = 0	}	n(a2);	j(a2)	}	function aU(i) {	return i.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(a2, a3, a4, a5, a6) {	return a3 || a4 || a5 || a6	})	}	function aL(i) {	return i.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")	}	function Y(a3) {	var a7, a2, a6, a5, a4;	if (a3._f.length === 0) {	a3._pf.invalidFormat = true;	a3._d = new Date(NaN);	return	}	for (a5 = 0; a5 < a3._f.length; a5++) {	a4 = 0;	a7 = u({}, a3);	F(a7);	a7._f = a3._f[a5];	Z(a7);	if (!O(a7)) {	continue	}	a4 += a7._pf.charsLeftOver;	a4 += a7._pf.unusedTokens.length * 10;	a7._pf.score = a4;	if (a6 == null || a4 < a6) {	a6 = a4;	a2 = a7	}	}	u(a3, a2 || a7)	}	function X(a2) {	var a3, a5 = a2._i,	a4 = M.exec(a5);	if (a4) {	a2._pf.iso = true;	for (a3 = 4; a3 > 0; a3--) {	if (a4[a3]) {	a2._f = J[a3 - 1] + (a4[6] || " ");	break	}	}	for (a3 = 0; a3 < 4; a3++) {	if (N[a3][1].exec(a5)) {	a2._f += N[a3][0];	break	}	}	if (aG.exec(a5)) {	a2._f += "Z"	}	Z(a2)	} else {	a2._d = new Date(a5)	}	}	function W(i) {	var a2 = i._i,	a3 = f.exec(a2);	if (a2 === aT) {	i._d = new Date()	} else {	if (a3) {	i._d = new Date(+a3[1])	} else {	if (typeof a2 === "string") {	X(i)	} else {	if (G(a2)) {	i._a = a2.slice(0);	n(i)	} else {	if (H(a2)) {	i._d = new Date(+a2)	} else {	if (typeof(a2) === "object") {	o(i)	} else {	i._d = new Date(a2)	}	}	}	}	}	}	}	function V(a8, a4, i, a3, a5, a7, a6) {	var a2 = new Date(a8, a4, i, a3, a5, a7, a6);	if (a8 < 1970) {	a2.setFullYear(a8)	}	return a2	}	function ag(a2) {	var i = new Date(Date.UTC.apply(null, arguments));	if (a2 < 1970) {	i.setUTCFullYear(a2)	}	return i	}	function aJ(i, a2) {	if (typeof i === "string") {	if (!isNaN(i)) {	i = parseInt(i, 10)	} else {	i = a2.weekdaysParse(i);	if (typeof i !== "number") {	return null	}	}	}	return i	}	function aQ(a4, a3, a5, i, a2) {	return a2.relativeTime(a3 || 1, !!a5, a4, i)	}	function aM(a5, a8, a4) {	var a7 = aO(Math.abs(a5) / 1000),	a6 = aO(a7 / 60),	a3 = aO(a6 / 60),	a2 = aO(a3 / 24),	a9 = aO(a2 / 365),	i = a7 < 45 && ["s", a7] || a6 === 1 && ["m"] || a6 < 45 && ["mm", a6] || a3 === 1 && ["h"] || a3 < 22 && ["hh", a3] || a2 === 1 && ["d"] || a2 <= 25 && ["dd", a2] || a2 <= 45 && ["M"] || a2 < 345 && ["MM", aO(a2 / 30)] || a9 === 1 && ["y"] || ["yy", a9];	i[2] = a8;	i[3] = a5 > 0;	i[4] = a4;	return aQ.apply({}, i)	}	function aZ(a6, a4, a5) {	var a3 = a5 - a4,	a2 = a5 - a6.day(),	i;	if (a2 > a3) {	a2 -= 7	}	if (a2 < a3 - 7) {	a2 += 7	}	i = aj(a6).add("d", a2);	return {	week: Math.ceil(i.dayOfYear() / 7),	year: i.year()	}	}	function p(a8, a6, a7, a5, a4) {	var i = new Date(Date.UTC(a8, 0)).getUTCDay(),	a3, a2;	a7 = a7 != null ? a7 : a4;	a3 = a4 - i + (i > a5 ? 7 : 0);	a2 = 7 * (a6 - 1) + (a7 - a4) + a3 + 1;	return {	year: a2 > 0 ? a8 : a8 - 1,	dayOfYear: a2 > 0 ? a2 : r(a8 - 1) + a2	}	}	function af(i) {	var a3 = i._i,	a2 = i._f;	if (typeof i._pf === "undefined") {	F(i)	}	if (a3 === null) {	return aj.invalid({	nullInput: true	})	}	if (typeof a3 === "string") {	i._i = a3 = z().preparse(a3)	}	if (aj.isMoment(a3)) {	i = u({}, a3);	i._d = new Date(+a3._d)	} else {	if (a2) {	if (G(a2)) {	Y(i)	} else {	Z(i)	}	} else {	W(i)	}	}	return new ak(i)	}	aj = function(a2, i, a3, a4) {	if (typeof(a3) === "boolean") {	a4 = a3;	a3 = aT	}	return af({	_i: a2,	_f: i,	_l: a3,	_strict: a4,	_isUTC: false	})	};	aj.utc = function(a2, i, a3, a5) {	var a4;	if (typeof(a3) === "boolean") {	a5 = a3;	a3 = aT	}	a4 = af({	_useUTC: true,	_isUTC: true,	_l: a3,	_i: a2,	_f: i,	_strict: a5	}).utc();	return a4	};	aj.unix = function(i) {	return aj(i * 1000)	};	aj.duration = function(a3, a4) {	var a2 = a3,	a5 = null,	a8, a7, a6, a9, i;	if (aj.isDuration(a3)) {	a2 = {	ms: a3._milliseconds,	d: a3._days,	M: a3._months	}	} else {	if (typeof a3 === "number") {	a2 = {};	if (a4) {	a2[a4] = a3	} else {	a2.milliseconds = a3	}	} else {	if (!!(a5 = g.exec(a3))) {	a8 = (a5[1] === "-") ? -1 : 1;	a2 = {	y: 0,	d: aS(a5[m]) * a8,	h: aS(a5[D]) * a8,	m: aS(a5[ai]) * a8,	s: aS(a5[aP]) * a8,	ms: aS(a5[ah]) * a8	}	} else {	if (!!(a5 = K.exec(a3))) {	a8 = (a5[1] === "-") ? -1 : 1;	a6 = function(ba) {	var bb = ba && parseFloat(ba.replace(",", "."));	return (isNaN(bb) ? 0 : bb) * a8	};	a2 = {	y: a6(a5[2]),	M: a6(a5[3]),	d: a6(a5[4]),	h: a6(a5[5]),	m: a6(a5[6]),	s: a6(a5[7]),	w: a6(a5[8])	}	}	}	}	}	a7 = new s(a2);	if (aj.isDuration(a3) && a3.hasOwnProperty("_lang")) {	a7._lang = a3._lang	}	return a7	};	aj.version = aY;	aj.defaultFormat = L;	aj.updateOffset = function() {};	aj.lang = function(i, a3) {	var a2;	if (!i) {	return aj.fn._lang._abbr	}	if (a3) {	T(am(i), a3)	} else {	if (a3 === null) {	aX(i);	i = "en"	} else {	if (!Q[i]) {	z(i)	}	}	}	a2 = aj.duration.fn._lang = aj.fn._lang = z(i);	return a2._abbr	};	aj.langData = function(i) {	if (i && i._lang && i._lang._abbr) {	i = i._lang._abbr	}	return z(i)	};	aj.isMoment = function(i) {	return i instanceof ak	};	aj.isDuration = function(i) {	return i instanceof s	};	for (E = S.length - 1; E >= 0; --E) {	ae(S[E])	}	aj.normalizeUnits = function(i) {	return ao(i)	};	aj.invalid = function(i) {	var a2 = aj.utc(NaN);	if (i != null) {	u(a2._pf, i)	} else {	a2._pf.userInvalidated = true	}	return a2	};	aj.parseZone = function(i) {	return aj(i).parseZone()	};	u(aj.fn = ak.prototype, {	clone: function() {	return aj(this)	},	valueOf: function() {	return +this._d + ((this._offset || 0) * 60000)	},	unix: function() {	return Math.floor(+this / 1000)	},	toString: function() {	return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")	},	toDate: function() {	return this._offset ? new Date(+this) : this._d	},	toISOString: function() {	return w(aj(this).utc(), "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")	},	toArray: function() {	var i = this;	return [i.year(), i.month(), i.date(), i.hours(), i.minutes(), i.seconds(), i.milliseconds()]	},	isValid: function() {	return O(this)	},	isDSTShifted: function() {	if (this._a) {	return this.isValid() && k(this._a, (this._isUTC ? aj.utc(this._a) : aj(this._a)).toArray()) > 0	}	return false	},	parsingFlags: function() {	return u({}, this._pf)	},	invalidAt: function() {	return this._pf.overflow	},	utc: function() {	return this.zone(0)	},	local: function() {	this.zone(0);	this._isUTC = false;	return this	},	format: function(i) {	var a2 = w(this, i || aj.defaultFormat);	return this.lang().postformat(a2)	},	add: function(a2, a3) {	var i;	if (typeof a2 === "string") {	i = aj.duration(+a3, a2)	} else {	i = aj.duration(a2, a3)	}	d(this, i, 1);	return this	},	subtract: function(a2, a3) {	var i;	if (typeof a2 === "string") {	i = aj.duration(+a3, a2)	} else {	i = aj.duration(a2, a3)	}	d(this, i, -1);	return this	},	diff: function(a3, a6, i) {	var a5 = aj(a3),	a7 = (this.zone() - a5.zone()) * 60000,	a2, a4;	a6 = ao(a6);	if (a6 === "year" || a6 === "month") {	a2 = (this.daysInMonth() + a5.daysInMonth()) * 43200000;	a4 = ((this.year() - a5.year()) * 12) + (this.month() - a5.month());	a4 += ((this - aj(this).startOf("month")) - (a5 - aj(a5).startOf("month"))) / a2;	a4 -= ((this.zone() - aj(this).startOf("month").zone()) - (a5.zone() - aj(a5).startOf("month").zone())) * 60000 / a2;	if (a6 === "year") {	a4 = a4 / 12	}	} else {	a2 = (this - a5);	a4 = a6 === "second" ? a2 / 1000 : a6 === "minute" ? a2 / 60000 : a6 === "hour" ? a2 / 3600000 : a6 === "day" ? (a2 - a7) / 86400000 : a6 === "week" ? (a2 - a7) / 604800000 : a2	}	return i ? a4 : c(a4)	},	from: function(i, a2) {	return aj.duration(this.diff(i)).lang(this.lang()._abbr).humanize(!a2)	},	fromNow: function(i) {	return this.from(aj(), i)	},	calendar: function() {	var i = this.diff(aj().zone(this.zone()).startOf("day"), "days", true),	a2 = i < -6 ? "sameElse" : i < -1 ? "lastWeek" : i < 0 ? "lastDay" : i < 1 ? "sameDay" : i < 2 ? "nextDay" : i < 7 ? "nextWeek" : "sameElse";	return this.format(this.lang().calendar(a2, this))	},	isLeapYear: function() {	return I(this.year())	},	isDST: function() {	return (this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone())	},	day: function(a2) {	var i = this._isUTC ? this._d.getUTCDay() : this._d.getDay();	if (a2 != null) {	a2 = aJ(a2, this.lang());	return this.add({	d: a2 - i	})	} else {	return i	}	},	month: function(a2) {	var a3 = this._isUTC ? "UTC" : "",	i;	if (a2 != null) {	if (typeof a2 === "string") {	a2 = this.lang().monthsParse(a2);	if (typeof a2 !== "number") {	return this	}	}	i = this.date();	this.date(1);	this._d["set" + a3 + "Month"](a2);	this.date(Math.min(i, this.daysInMonth()));	aj.updateOffset(this);	return this	} else {	return this._d["get" + a3 + "Month"]()	}	},	startOf: function(i) {	i = ao(i);	switch (i) {	case "year":	this.month(0);	case "month":	this.date(1);	case "week":	case "isoWeek":	case "day":	this.hours(0);	case "hour":	this.minutes(0);	case "minute":	this.seconds(0);	case "second":	this.milliseconds(0)	}	if (i === "week") {	this.weekday(0)	} else {	if (i === "isoWeek") {	this.isoWeekday(1)	}	}	return this	},	endOf: function(i) {	i = ao(i);	return this.startOf(i).add((i === "isoWeek" ? "week" : i), 1).subtract("ms", 1)	},	isAfter: function(i, a2) {	a2 = typeof a2 !== "undefined" ? a2 : "millisecond";	return +this.clone().startOf(a2) > +aj(i).startOf(a2)	},	isBefore: function(i, a2) {	a2 = typeof a2 !== "undefined" ? a2 : "millisecond";	return +this.clone().startOf(a2) < +aj(i).startOf(a2)	},	isSame: function(i, a2) {	a2 = typeof a2 !== "undefined" ? a2 : "millisecond";	return +this.clone().startOf(a2) === +aj(i).startOf(a2)	},	min: function(i) {	i = aj.apply(null, arguments);	return i < this ? this : i	},	max: function(i) {	i = aj.apply(null, arguments);	return i > this ? this : i	},	zone: function(i) {	var a2 = this._offset || 0;	if (i != null) {	if (typeof i === "string") {	i = aR(i)	}	if (Math.abs(i) < 16) {	i = i * 60	}	this._offset = i;	this._isUTC = true;	if (a2 !== i) {	d(this, aj.duration(a2 - i, "m"), 1, true)	}	} else {	return this._isUTC ? a2 : this._d.getTimezoneOffset()	}	return this	},	zoneAbbr: function() {	return this._isUTC ? "UTC" : ""	},	zoneName: function() {	return this._isUTC ? "Coordinated Universal Time" : ""	},	parseZone: function() {	if (typeof this._i === "string") {	this.zone(this._i)	}	return this	},	hasAlignedHourOffset: function(i) {	if (!i) {	i = 0	} else {	i = aj(i).zone()	}	return (this.zone() - i) % 60 === 0	},	daysInMonth: function() {	return q(this.year(), this.month())	},	dayOfYear: function(a2) {	var i = aO((aj(this).startOf("day") - aj(this).startOf("year")) / 86400000) + 1;	return a2 == null ? i : this.add("d", (a2 - i))	},	quarter: function() {	return Math.ceil((this.month() + 1) / 3)	},	weekYear: function(i) {	var a2 = aZ(this, this.lang()._week.dow, this.lang()._week.doy).year;	return i == null ? a2 : this.add("y", (i - a2))	},	isoWeekYear: function(i) {	var a2 = aZ(this, 1, 4).year;	return i == null ? a2 : this.add("y", (i - a2))	},	week: function(i) {	var a2 = this.lang().week(this);	return i == null ? a2 : this.add("d", (i - a2) * 7)	},	isoWeek: function(i) {	var a2 = aZ(this, 1, 4).week;	return i == null ? a2 : this.add("d", (i - a2) * 7)	},	weekday: function(i) {	var a2 = (this.day() + 7 - this.lang()._week.dow) % 7;	return i == null ? a2 : this.add("d", i - a2)	},	isoWeekday: function(i) {	return i == null ? this.day() || 7 : this.day(this.day() % 7 ? i : i - 7)	},	get: function(i) {	i = ao(i);	return this[i]()	},	set: function(i, a2) {	i = ao(i);	if (typeof this[i] === "function") {	this[i](a2)	}	return this	},	lang: function(i) {	if (i === aT) {	return this._lang	} else {	this._lang = z(i);	return this	}	}	});	function ad(a2, i) {	aj.fn[a2] = aj.fn[a2 + "s"] = function(a3) {	var a4 = this._isUTC ? "UTC" : "";	if (a3 != null) {	this._d["set" + a4 + i](a3);	aj.updateOffset(this);	return this	} else {	return this._d["get" + a4 + i]()	}	}	}	for (E = 0; E < aK.length; E++) {	ad(aK[E].toLowerCase().replace(/s$/, ""), aK[E])	}	ad("year", "FullYear");	aj.fn.days = aj.fn.day;	aj.fn.months = aj.fn.month;	aj.fn.weeks = aj.fn.week;	aj.fn.isoWeeks = aj.fn.isoWeek;	aj.fn.toJSON = aj.fn.toISOString;	u(aj.duration.fn = s.prototype, {	_bubble: function() {	var a4 = this._milliseconds,	a2 = this._days,	a6 = this._months,	i = this._data,	a7, a5, a3, a8;	i.milliseconds = a4 % 1000;	a7 = c(a4 / 1000);	i.seconds = a7 % 60;	a5 = c(a7 / 60);	i.minutes = a5 % 60;	a3 = c(a5 / 60);	i.hours = a3 % 24;	a2 += c(a3 / 24);	i.days = a2 % 30;	a6 += c(a2 / 30);	i.months = a6 % 12;	a8 = c(a6 / 12);	i.years = a8	},	weeks: function() {	return c(this.days() / 7)	},	valueOf: function() {	return this._milliseconds + this._days * 86400000 + (this._months % 12) * 2592000000 + aS(this._months / 12) * 31536000000	},	humanize: function(a3) {	var i = +this,	a2 = aM(i, !a3, this.lang());	if (a3) {	a2 = this.lang().pastFuture(i, a2)	}	return this.lang().postformat(a2)	},	add: function(a2, a3) {	var i = aj.duration(a2, a3);	this._milliseconds += i._milliseconds;	this._days += i._days;	this._months += i._months;	this._bubble();	return this	},	subtract: function(a2, a3) {	var i = aj.duration(a2, a3);	this._milliseconds -= i._milliseconds;	this._days -= i._days;	this._months -= i._months;	this._bubble();	return this	},	get: function(i) {	i = ao(i);	return this[i.toLowerCase() + "s"]()	},	as: function(i) {	i = ao(i);	return this["as" + i.charAt(0).toUpperCase() + i.slice(1) + "s"]()	},	lang: aj.fn.lang,	toIsoString: function() {	var a6 = Math.abs(this.years()),	a4 = Math.abs(this.months()),	i = Math.abs(this.days()),	a2 = Math.abs(this.hours()),	a3 = Math.abs(this.minutes()),	a5 = Math.abs(this.seconds() + this.milliseconds() / 1000);	if (!this.asSeconds()) {	return "P0D"	}	return (this.asSeconds() < 0 ? "-" : "") + "P" + (a6 ? a6 + "Y" : "") + (a4 ? a4 + "M" : "") + (i ? i + "D" : "") + ((a2 || a3 || a5) ? "T" : "") + (a2 ? a2 + "H" : "") + (a3 ? a3 + "M" : "") + (a5 ? a5 + "S" : "")	}	});	function ab(i) {	aj.duration.fn[i] = function() {	return this._data[i]	}	}	function aa(a2, i) {	aj.duration.fn["as" + a2] = function() {	return +this / i	}	}	for (E in aW) {	if (aW.hasOwnProperty(E)) {	aa(E, aW[E]);	ab(E.toLowerCase())	}	}	aa("Weeks", 604800000);	aj.duration.fn.asMonths = function() {	return (+this - this.years() * 31536000000) / 2592000000 + this.years() * 12	};	aj.lang("en", {	ordinal: function(a2) {	var i = a2 % 10,	a3 = (aS(a2 % 100 / 10) === 1) ? "th" : (i === 1) ? "st" : (i === 2) ? "nd" : (i === 3) ? "rd" : "th";	return a2 + a3	}	});	a0.Moment = aj 	})(b.xRTML = b.xRTML || {}) })(window); (function() { 	xRTML.Moment.lang("pt", {	months: "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),	monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),	weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),	weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),	weekdaysMin: "Dom_2ª_3ª_4ª_5ª_6ª_Sáb".split("_"),	longDateFormat: {	LT: "HH:mm",	L: "DD/MM/YYYY",	LL: "D [de] MMMM [de] YYYY",	LLL: "D [de] MMMM [de] YYYY LT",	LLLL: "dddd, D [de] MMMM [de] YYYY LT"	},	calendar: {	sameDay: "[Hoje às] LT",	nextDay: "[Amanhã às] LT",	nextWeek: "dddd [às] LT",	lastDay: "[Ontem às] LT",	lastWeek: function() {	return (this.day() === 0 || this.day() === 6) ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"	},	sameElse: "L"	},	relativeTime: {	future: "em %s",	past: "%s atrás",	s: "segundos",	m: "um minuto",	mm: "%d minutos",	h: "uma hora",	hh: "%d horas",	d: "um dia",	dd: "%d dias",	M: "um mês",	MM: "%d meses",	y: "um ano",	yy: "%d anos"	},	ordinal: "%dº",	week: {	dow: 1,	doy: 4	} 	}) })(); (function() { 	xRTML.Moment.lang("fr", {	months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),	monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),	weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),	weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),	weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),	longDateFormat: {	LT: "HH:mm",	L: "DD/MM/YYYY",	LL: "D MMMM YYYY",	LLL: "D MMMM YYYY LT",	LLLL: "dddd D MMMM YYYY LT"	},	calendar: {	sameDay: "[Aujourd'hui à] LT",	nextDay: "[Demain à] LT",	nextWeek: "dddd [à] LT",	lastDay: "[Hier à] LT",	lastWeek: "dddd [dernier à] LT",	sameElse: "L"	},	relativeTime: {	future: "dans %s",	past: "il y a %s",	s: "quelques secondes",	m: "une minute",	mm: "%d minutes",	h: "une heure",	hh: "%d heures",	d: "un jour",	dd: "%d jours",	M: "un mois",	MM: "%d mois",	y: "un an",	yy: "%d ans"	},	ordinal: function(a) {	return a + (a === 1 ? "er" : "")	},	week: {	dow: 1,	doy: 4	} 	}) })(); (function() { 	var a = function(e, f, d, c) {	var b = {	m: ["eine Minute", "einer Minute"],	h: ["eine Stunde", "einer Stunde"],	d: ["ein Tag", "einem Tag"],	dd: [e + " Tage", e + " Tagen"],	M: ["ein Monat", "einem Monat"],	MM: [e + " Monate", e + " Monaten"],	y: ["ein Jahr", "einem Jahr"],	yy: [e + " Jahre", e + " Jahren"]	};	return f ? b[d][0] : b[d][1] 	}; 	xRTML.Moment.lang("de", {	months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),	monthsShort: "Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),	weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),	weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),	weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),	longDateFormat: {	LT: "H:mm [Uhr]",	L: "DD.MM.YYYY",	LL: "D. MMMM YYYY",	LLL: "D. MMMM YYYY LT",	LLLL: "dddd, D. MMMM YYYY LT"	},	calendar: {	sameDay: "[Heute um] LT",	sameElse: "L",	nextDay: "[Morgen um] LT",	nextWeek: "dddd [um] LT",	lastDay: "[Gestern um] LT",	lastWeek: "[letzten] dddd [um] LT"	},	relativeTime: {	future: "in %s",	past: "vor %s",	s: "ein paar Sekunden",	m: a,	mm: "%d Minuten",	h: a,	hh: "%d Stunden",	d: a,	dd: a,	M: a,	MM: a,	y: a,	yy: a	},	ordinal: "%d.",	week: {	dow: 1,	doy: 4	} 	}) })(); (function() { 	xRTML.Moment.lang("es", {	months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),	monthsShort: "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),	weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),	weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),	weekdaysMin: "Do_Lu_Ma_Mi_Ju_Vi_Sá".split("_"),	longDateFormat: {	LT: "H:mm",	L: "DD/MM/YYYY",	LL: "D [de] MMMM [de] YYYY",	LLL: "D [de] MMMM [de] YYYY LT",	LLLL: "dddd, D [de] MMMM [de] YYYY LT"	},	calendar: {	sameDay: function() {	return "[hoy a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"	},	nextDay: function() {	return "[mañana a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"	},	nextWeek: function() {	return "dddd [a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"	},	lastDay: function() {	return "[ayer a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"	},	lastWeek: function() {	return "[el] dddd [pasado a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"	},	sameElse: "L"	},	relativeTime: {	future: "en %s",	past: "hace %s",	s: "unos segundos",	m: "un minuto",	mm: "%d minutos",	h: "una hora",	hh: "%d horas",	d: "un día",	dd: "%d días",	M: "un mes",	MM: "%d meses",	y: "un año",	yy: "%d años"	},	ordinal: "%dº",	week: {	dow: 1,	doy: 4	} 	}) })(); (function(b, a) { 	b.TagManager.register({	name: "Media",	"abstract": true,	struct: function() {	var c = b.Common.Function.proxy(function() {	if (this.autoPlay && this.sources.next()) {	this.play(this.sources.current())	}	}, this);	var d = b.Common.Function.proxy(function() {	if (this.autoPlay && this.sources.current()) {	this.player.play(this.sources.current())	}	this.bind({	ended: d	});	this.bind({	ended: c	})	}, this);	this.init = function(h) {	this._super(h);	this.target = this.target[0];	this.width = b.Common.Converter.toNumber(h.attribute("width")) || null;	this.height = b.Common.Converter.toNumber(h.attribute("height")) || null;	this.autoPlay = typeof h.attribute("autoPlay") == "undefined" ? true : b.Common.Converter.toBoolean(h.attribute("autoPlay"));	this.loop = typeof h.attribute("loop") == "undefined" ? true : b.Common.Converter.toBoolean(h.attribute("loop"));	this.controlsBar = b.Common.Converter.toBoolean(h.attribute("controlsBar")) || false;	this.muted = b.Common.Converter.toBoolean(h.attribute("muted")) || false;	this.loadStatus = 0;	this.sources = (function() {	var i = [],	j = -1;	return {	current: function() {	return (i.length && j != -1) != 0 ? i[j] : null	},	currentIndex: function() {	return j	},	next: function() {	j = (++j) < i.length ? j : 0;	return i.length != 0 ? i[j] : null	},	previous: function() {	j = --j < 0 ? (i.length - 1) : j;	return i.length != 0 ? i[j] : null	},	insert: function(m, l) {	if (m && l > 0 && l < (i.length + 1)) {	if (!(m instanceof Array)) {	m = [m]	}	for (var k = m.length - 1; k >= 0; --k) {	i.splice(l, 0, m[k])	}	if (j != -1 && l < j) {	j += m.length	}	}	},	push: function(k) {	if (k) {	if (!(k instanceof Array)) {	k = [k]	}	i.push.apply(i, k)	}	},	removeAt: function(l) {	var k = null;	if (l >= 0 && l < i.length) {	k = i.splice(l, 1);	if (j > i.length || l < j) {	--j	}	}	return k	},	remove: function(o) {	for (var m = 0; m < i.length; ++m) {	var k = i[m],	n = true;	for (var l in o) {	if (!b.Common.Object.equals(o[l], k[l])) {	n = false;	break	}	}	if (n) {	return this.removeAt(m)	}	}	return null	},	pop: function() {	return this.removeAt(i.length - 1)	},	purge: function() {	i = [];	j = -1	},	length: function() {	return i.length	}	}	})();	var g = this;	if (!this.resources.swfobject) {	this.registerResources([{	name: "swfobject",	src: window.location.protocol + "//www73.bb.com.br/web/static/visitor/scripts/swfobject.js"	}])	}	this.players = {};	this.players.swf = function(i) {	b.Event.extend(this);	this.id = "FLVplayer_" + b.Common.Util.idGenerator();	this.isReady = false;	b.Common.DOM.loadScripts(g.resources.swfobject, b.Common.Function.proxy(function() {	if (swfobject.getFlashPlayerVersion().major == 0) {	if (b.Sizzle("#" + this.id, g.target).length == 0) {	var k = document.createElement("a");	k.setAttribute("id", "flashnotavailable");	k.setAttribute("href", window.location.protocol + "//www.adobe.com/go/getflashplayer");	k.setAttribute("target", "_blank");	var l = document.createElement("img");	l.setAttribute("src", window.location.protocol + "//www.adobe.com/images/shared/download_buttons/get_flash_player.gif");	l.setAttribute("alt", "Get Adobe Flash player");	k.appendChild(l);	g.target.appendChild(k);	return	}	}	this.isReady = true;	this.fire({	ready: {}	})	}, this));	this.target = i.target;	this.width = i.width;	this.height = i.height;	this.supportedMedia = {	swf: this.canPlayType("swf")	};	function j(k) {	g.fire({	loadedmetadata: {	event: k,	target: g	}	})	}	this.bind({	loadedmetadata: j	})	};	this.players.swf.prototype = {	play: function(o) {	if (!this.isReady) {	this.bind({	ready: b.Common.Function.proxy(function() {	this.play(o)	}, this)	});	return	}	var j = o.files.swf;	if (j) {	if (b.Sizzle(this.id + " object").length > 0) {	this.stop()	}	var l = document.createElement("span");	l.id = this.id;	this.target.appendChild(l);	var k = {},	n = {	allowScriptAccess: "always",	play: "true",	loop: "true"	},	i = {	align: "middle"	},	m = b.Common.Function.proxy(function(p) {	this.fire({	loadedmetadata: p	})	}, this);	swfobject.embedSWF(j, this.id, !!this.width ? this.width : "425", !!this.height ? this.height : "356", "8", null, {	allowScriptAccess: "always",	play: "true"	}, null, m);	this.restart = function() {	this.stop();	this.play(o)	}	}	},	isPlaying: function() {	return b.Sizzle("#" + this.id).length > 0	},	stop: function() {	if (typeof swfobject != "undefined") {	swfobject.removeSWF(this.id)	}	},	pause: function() {},	restart: function() {},	skip: function() {},	mute: function() {},	volume: function() {},	canPlayExtension: function(i) {	var j = this.supportedMedia[i];	if (typeof j === "undefined") {	return false	}	return this.canPlayType(j)	},	canPlayType: function(i) {	return i === "swf"	},	time: function() {	return {	current: 0,	duration: 0	}	}	};	var f = function(j) {	this.id = b.Common.Util.idGenerator();	var p = document.createElement(j.type);	p.id = this.id;	p.width = j.width;	p.height = j.height;	p.poster = j.poster;	p.autoplay = j.autoPlay;	p.loop = j.loop;	p.muted = j.muted;	p.controls = j.controls;	this.addPlayerDOM = function() {	g.target.appendChild(p);	b.Event.bind(p, {	progress: s	});	b.Event.bind(p, {	loadedmetadata: m	});	b.Event.bind(p, {	timeupdate: t	});	b.Event.bind(p, {	play: q	});	b.Event.bind(p, {	playing: r	});	b.Event.bind(p, {	pause: o	});	b.Event.bind(p, {	ended: k	})	};	this.fallback = typeof g.players.swf === "function" ? new g.players.swf(j) : g.players.swf;	this.supportedMedia = {};	for (var i in j.formats) {	this.supportedMedia[i] = p.canPlayType(j.formats[i]) == "maybe" || p.canPlayType(j.formats[i]) == "probably"	}	var n = this;	function s(u) {	var v = u.target.buffered.length != 0 ? u.target.buffered.end(0) : 0;	n.loadStatus = parseInt(((v / u.target.duration) * 100))	}	b.Event.bind(p, {	progress: s	});	function m(u) {	g.duration = u.target.duration;	g.currentTime = u.target.currentTime;	if (j.keepRatio) {	u.target.height = u.target.videoHeight;	u.target.width = u.target.videoWidth	}	if (p.paused) {	p.play()	}	g.fire({	loadedmetadata: {	event: u,	target: g	}	})	}	b.Event.bind(p, {	loadedmetadata: m	});	function t(u) {	g.currentTime = u.target.currentTime	}	b.Event.bind(p, {	timeupdate: t	});	function q(u) {}	b.Event.bind(p, {	play: q	});	function r(u) {}	b.Event.bind(p, {	playing: r	});	function o(u) {}	b.Event.bind(p, {	pause: o	});	function k(u) {	g.fire("ended", {	file: u	})	}	b.Event.bind(p, {	ended: k	});	function l(u) {	if (u.target.error !== null) {	var v = "";	switch (u.target.error.code) {	case u.target.error.MEDIA_ERR_ABORTED:	v = "You aborted the media playback.";	break;	case u.target.error.MEDIA_ERR_NETWORK:	v = "A network error caused the media download to fail part-way.";	break;	case u.target.error.MEDIA_ERR_DECODE:	v = "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.";	break;	case u.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:	v = "The media could not be loaded, either because the server or network failed or because the format is not supported.";	break;	default:	v = "An unknown error occurred.";	break	}	b.Error.raise({	code: b.Error.Codes.UNEXPECTEDMEDIA,	target: g,	message: v,	info: {	className: "xRTML.TagManager.Media",	methodName: "errorHandler (internal method, no docs available)"	}	})	}	}	b.Event.bind(p, {	error: l	});	this.isReady = true	};	f.prototype = {	loadStatus: 0,	play: function(k) {	for (var i in k.files) {	if (this.supportedMedia[i] === true) {	var j = document.getElementById(this.id);	if (!j) {	this.addPlayerDOM();	j = document.getElementById(this.id)	}	j.autoplay = k.autoPlay === j.autoplay ? j.autoplay : k.autoPlay;	j.loop = k.loop === j.loop ? j.loop : k.loop;	j.src = k.files[i];	j.load();	j.play();	b.Console.debug("Playing file: " + k.files[i]);	if (k.offset) {	this.offset(k.offset.start, k.offset.end)	}	return	}	}	if (this.fallback && k.files.swf) {	this.fallback.play(k)	} else {	document.getElementById(this.id).innerHTML = "Your browser cannot play these movie types."	}	},	stop: function() {	var i = document.getElementById(this.id);	i.currentTime = i.duration	},	pause: function() {	var i = document.getElementById(this.id);	i.paused ? i.play() : i.pause()	},	restart: function() {	var i = document.getElementById(this.id);	i.currentTime = 0	},	skip: function(j) {	var i = document.getElementById(this.id);	if (i.readyState >= i.HAVE_METADATA) {	i.currentTime = j	} else {	b.Event.bind(i, {	loadedmetadata: function(k) {	k.target.currentTime = j	}	})	}	},	mute: function() {	var i = document.getElementById(this.id);	i.muted = !i.muted	},	volume: function(i) {	var j = document.getElementById(this.id);	j.volume = i / 100	},	isPlaying: function() {	return document.getElementById(this.id).currentTime != 0	},	canPlayExtension: function(i) {	var j = this.supportedMedia[i];	if (typeof j === "undefined") {	return false	}	return this.canPlayType(j)	},	canPlayType: function(k) {	var j = document.getElementById(this.id),	i = j.canPlayType(k);	return ((i == "maybe") || (i == "probably"))	},	time: function() {	var i = document.getElementById(this.id);	return {	current: i.currentTime,	duration: i.duration	}	},	offset: function(l, i) {	var j = document.getElementById(this.id),	k = function(n) {	j.currentTime = l;	var m = function() {	if (j.currentTime >= i) {	j.pause();	b.Event.unbind(j, {	timeupdate: m	})	}	};	b.Event.unbind(j, {	timeupdate: m	})	};	if (j.readyState >= j.HAVE_METADATA) {	k()	} else {	b.Event.bind(j, {	loadedmetadata: k	})	}	}	};	this.bind({	ended: c	});	var e = {	type: h.attribute("type") || {},	formats: h.attribute("formats") || {},	target: this.target,	width: this.width,	height: this.height,	poster: this.poster,	autoPlay: this.autoPlay,	loop: this.loop,	controls: this.controlsBar,	muted: this.muted,	keepRatio: this.keepRatio	};	b.Common.Function.proxy(function() {	if (document.createElement(e.type).canPlayType) {	var k = document.createElement(e.type),	i;	for (var j in e.formats) {	i = k.canPlayType(e.formats[j]);	if ((i == "maybe") || (i == "probably")) {	this.players[j] = f	}	}	}	}, this)();	this.players.get = function(j) {	for (var i in j) {	if (this[i]) {	if (typeof this[i] === "function") {	this[i] = new this[i](e)	}	return this[i]	}	}	}	};	this.play = function(e) {	if (this.target.hasChildNodes()) {	if (this.player) {	if (this.player.supportedMedia.swf) {	swfobject.removeSWF(this.player.id)	} else {	if (this.player.supportedMedia.yt) {	swfobject.removeSWF(this.player.id)	} else {	this.target.removeChild(this.target.lastChild)	}	}	}	}	var f = null;	if (e) {	f = e;	this.player = this.players.get(e.files);	this.player.play(e);	this.unbind({	ended: c	});	this.bind({	ended: d	})	} else {	f = (this.sources.current() == null && this.sources.length() != 0) ? this.sources.next() : this.sources.current();	this.player = this.players.get(f.files);	this.player.play(f)	}	this.fire({	play: {	source: f	}	})	};	this.stop = function() {	this.player.stop();	this.fire({	stop: {}	})	};	this.pause = function() {	this.player.pause();	this.fire({	pause: {}	})	};	this.restart = function() {	this.player.restart();	this.fire({	restart: {}	})	};	this.mute = function() {	this.player.mute();	this.fire({	mute: {}	})	};	this.volume = function(e) {	if (e && e.volume) {	var f = typeof e.volume === "string" ? parseInt(e.volume) : e.volume;	if (f > 100) {	f = 100	} else {	if (f < 0) {	f = 0	}	}	this.player.volume(f);	this.fire({	volume: {	volume: f	}	})	}	};	this.skip = function(e) {	if (e && e.skip) {	var f = typeof e.skip === "string" ? parseInt(e.skip) : e.skip;	this.player.skip(f);	this.fire({	skip: {	skip: f	}	})	}	};	this.queue = function(e) {	if (e) {	this.sources.push(e);	this.fire({	queue: {	sources: e	}	});	if (this.autoPlay && !this.isPlaying()) {	this.play()	}	}	};	this.unqueue = function(e) {	if (e) {	this.sources.remove(e);	this.fire({	unqueue: {	source: e	}	})	}	};	this.next = function() {	var e = this.sources.next();	this.play(e);	this.fire({	next: {	source: e	}	})	};	this.previous = function() {	var e = this.sources.previous();	this.play(e);	this.fire({	previous: {	source: e	}	})	};	this.time = function() {	return {	duration: this.duration,	currentTime: this.currentTime	}	};	this.isPlaying = function() {	return !!this.player && this.player.isPlaying()	}	} 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	b.TagManager.register({	name: "Audio",	base: "Media",	struct: function() {	this.init = function(d, c) {	d.type = "audio";	d.muted = false;	d.formats = {	mp3: "audio/mpeg",	ogg: "audio/ogg",	aac: "audio/mp4",	wav: "audio/wav",	pcm: "audio/webm"	};	this._super(d);	if (typeof c != "undefined" && d.name == "Audio") {	c(this)	}	}	} 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	b.TagManager.register({	name: "Video",	base: "Media",	struct: function() {	this.init = function(d, c) {	this.poster = d.attribute("poster") || null;	this.keepRatio = typeof d.attribute("keepRatio") == "undefined" ? true : b.Common.Converter.toBoolean(d.attribute("keepRatio"));	d.type = "video";	d.formats = {	webm: "video/webm",	mp4: "video/mp4",	ogg: "video/ogg",	avi: "video/divx"	};	d.keepRatio = this.keepRatio;	d.poster = this.poster;	this._super(d);	var e = this;	this.players.yt = function(f) {	b.Event.extend(this);	this.id = "ytplayer" + b.Common.Util.idGenerator();	this.config = f;	this.supportedMedia = {	yt: true	};	this.player = null;	var h = this;	window.onYouTubePlayerReady = function(i) {	h.player = document.getElementById(i);	h.player.addEventListener("onStateChange", "onYouTubePlayerStateChange");	e.dispatchEvent("onYouTubePlayerReady", {	playerId: i	})	};	function g(i) {	e.fire({	loadedmetadata: {	event: i,	target: h	}	})	}	this.bind({	loadedmetadata: g,	flashNotAvailable: function() {	if (b.Sizzle("#flashnotavailable", e.target).length == 0) {	var i = document.createElement("a");	i.setAttribute("id", "flashnotavailable");	i.setAttribute("href", window.location.protocol + "//www.adobe.com/go/getflashplayer");	i.setAttribute("target", "_blank");	var j = document.createElement("img");	j.setAttribute("src", window.location.protocol + "//www.adobe.com/images/shared/download_buttons/get_flash_player.gif");	j.setAttribute("alt", "Get Adobe Flash player");	i.appendChild(j);	e.target.appendChild(i)	}	}	});	window.onYouTubePlayerStateChange = function(i) {	switch (i) {	case -1:	e.dispatchEvent("unstarted");	break;	case 0:	e.dispatchEvent("ended");	break;	case 1:	e.dispatchEvent("playing");	break;	case 2:	e.dispatchEvent("paused");	break;	case 3:	e.dispatchEvent("buffering");	break;	case 5:	e.dispatchEvent("videocued");	break	}	}	};	this.players.yt.prototype = {	play: function(i) {	i.files.yt = i.files.yt.replace(/^[^v]+v.(.{11}).*/, "$1");	var h = "?autoplay=1";	h += "&loop=" + (!!this.config.loop || !!i.loop ? "1" : "0");	h += "&controls=" + (!!this.config.controls || !!i.controls ? "1" : "0");	h += "&showinfo=0";	h += "&enablejsapi=1&playerapiid=" + this.id + "&version=3";	if (typeof swfobject === "undefined") {	b.Common.DOM.loadScripts(e.resources.swfobject, b.Common.Function.proxy(function() {	if (swfobject.getFlashPlayerVersion().major == 0) {	this.fire({	flashNotAvailable: {}	});	return	}	var j = document.createElement("span");	j.id = this.id;	e.target.appendChild(j);	var k = b.Common.Function.proxy(function(l) {	this.fire({	loadedmetadata: l	})	}, this);	swfobject.embedSWF(window.location.protocol + "//www.youtube.com/v/" + i.files.yt + h, this.id, !!this.config.width ? this.config.width : "425", !!this.config.height ? this.config.height : "356", "8", null, null, {	allowScriptAccess: "always"	}, {	allowfullscreen: "true"	}, k)	}, this))	} else {	if (swfobject.getFlashPlayerVersion().major == 0) {	this.fire({	flashNotAvailable: {}	});	return	}	var f = document.createElement("span");	f.id = this.id;	e.target.appendChild(f);	var g = b.Common.Function.proxy(function(j) {	this.fire({	loadedmetadata: j	})	}, this);	swfobject.embedSWF(window.location.protocol + "//www.youtube.com/v/" + i.files.yt + h, this.id, !!this.config.width ? this.config.width : "425", !!this.config.height ? this.config.height : "356", "8", null, null, {	allowScriptAccess: "always"	}, {	allowfullscreen: "true"	}, g)	}	},	stop: function() {	if (!this.isPlaying()) {	return	}	this.player.stopVideo()	},	pause: function() {	this.isPlaying() ? this.player.pauseVideo() : this.player.playVideo()	},	restart: function() {	this.player.seekTo(0)	},	skip: function(f) {	this.player.seekTo(f, true)	},	mute: function() {	this.player.isMuted() ? this.player.unMute() : this.player.mute()	},	volume: function(f) {	this.player.setVolume(f)	},	isPlaying: function() {	if (this.player.getPlayerState) {	return this.player != null && this.player.getPlayerState() == 1	}	return true	},	canPlayExtension: function() {},	canPlayType: function(f) {	return f === "yt"	},	time: function() {	return {	current: this.player.getCurrentTime(),	duration: this.player.getDuration()	}	},	offset: function() {}	};	if (typeof c != "undefined" && d.name == "Video") {	c(this)	}	}	} 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	b.TagManager.register({	name: "Execute",	struct: function() {	this.init = function(d, c) {	this._super(d);	this.callback = b.Common.Function.parse(d.attribute("callback"), "message");	if (typeof c != "undefined" && d.name == "Execute") {	c(this)	}	};	this.process = function(d) {	var c = typeof d != "undefined" && d.callback ? b.Common.Function.parse(d.callback, "data") : this.callback;	(typeof c == "function") ? c(d): b.Error.raise({	code: b.Error.Codes.TAG_PROCESS,	target: this,	info: {	message: 'The property "callback" is not defined in the Tag nor in the message.',	className: "xRTML.Tags." + this.name,	methodName: "process"	}	})	}	} 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	b.TagManager.register({	name: "Shoutbox",	struct: function() {	var i = function(k) {	if (typeof k != "undefined") {	this.id = k.id ? k.id : b.Common.Util.guidGenerator();	this.name = typeof k.name != "undefined" && k.name != "" ? b.Templating.observable(k.name) : b.Templating.observable("Write a username...");	this.logged = typeof k.logged != "undefined" ? b.Templating.observable(k.logged) : b.Templating.observable(false)	} else {	this.id = b.Common.Util.guidGenerator();	this.name = b.Templating.observable("Write a username...");	this.logged = b.Templating.observable(false)	}	this.isTyping = b.Templating.observable(false)	};	var f = function(k) {	this.content = k.content;	this.name = k.name;	this.date = k.date ? new Date(k.date) : new Date().toString()	};	var h = function(k) {	b.Event.extend(this);	this.shoutboxContainer = k.shoutboxContainer;	var l = b.Common.DOM.getStyle({	element: this.shoutboxContainer,	rule: "display"	});	this.owner = new i();	this.messages = b.Templating.observable([]);	this.users = b.Templating.observable([]);	if (k.userData) {	this.owner.id = k.userData.id;	this.owner.name(k.userData.name);	this.owner.logged(true);	this.users.push(this.owner);	this.fire({	sendMessage: {	action: "userLogin",	data: {	id: this.owner.id,	name: this.owner.name(),	logged: true,	isTyping: false	}	}	});	this.fire({	userLogin: {	user: {	id: this.owner.id,	name: this.owner.name(),	logged: true,	isTyping: false	}	}	})	}	this.messageContent = b.Templating.observable("");	this.logIn = function() {	if (this.owner.name() != "" && this.owner.name() != "Write a username...") {	var n = b.Common.Util.guidGenerator();	this.owner.id = n;	this.owner.logged(true);	this.users.push(this.owner);	b.Common.Cookie.setCookie({	name: c,	value: b.JSON.stringify({	id: this.owner.id,	name: this.owner.name()	})	});	if (e) {	e.fire({	userLogin: {	user: {	id: this.owner.id,	name: this.owner.name(),	logged: true,	isTyping: false	}	}	})	}	this.fire({	userLogin: {	user: {	id: this.owner.id,	name: this.owner.name(),	logged: true,	isTyping: false	}	}	});	this.fire({	sendMessage: {	action: "userLogin",	data: {	id: this.owner.id,	name: this.owner.name(),	logged: true	}	}	})	}	return true	};	this.logOut = function() {	this.owner.logged(false);	b.Common.Cookie.deleteCookie({	name: c	});	if (e) {	e.fire({	userLogout: {	user: {	id: this.owner.id,	name: this.owner.name(),	logged: true,	isTyping: false	}	}	})	}	this.fire({	userLogout: {	user: {	id: this.owner.id,	name: this.owner.name(),	logged: false,	isTyping: false	}	}	});	this.fire({	sendMessage: {	action: "userLogout",	data: {	id: this.owner.id,	name: this.owner.name(),	logged: false,	isTyping: false	}	}	});	this.owner.name("Write a username...");	return true	};	this.getUserById = function(o) {	var p = this.users();	for (var n = 0; n < p.length; ++n) {	if (p[n].id == o) {	return p[n]	}	}	return null	};	this.newUser = function(n) {	var o = this.getUserById(n.id);	if (o != null) {	o = new i(n)	} else {	this.users.push(new i(n))	}	};	this.removeUser = function(n) {	this.users.remove(function(o) {	return o.id == n	})	};	this.usersTyping = b.Templating.observable(b.Common.Function.proxy(function() {	var q = "";	var p = this.users();	if (p.length == 0) {	return ""	}	for (var n = 0; n < p.length; n++) {	var o = p[n];	if (o.id != this.owner.id && o.isTyping()) {	q += o.name() + ", "	}	}	return q != "" ? q.slice(0, q.length - 2) : ""	}, this));	this.newMessage = function(n) {	this.messages.push(n);	if (b.Common.DOM.getStyle({	element: this.shoutboxContainer,	rule: "display"	}) == "none") {	this.show()	}	};	this.sendMessage = function(n) {	if (this.messageContent().length > 0) {	var o = new f({	name: n.name || this.owner.name(),	content: n.content || this.messageContent()	});	this.newMessage(o);	this.fire({	sendMessage: {	action: "post",	data: o	}	});	if (e) {	e.fire({	messagePost: {	message: o	}	})	}	this.fire({	messagePost: {	message: o	}	});	this.messageContent("")	}	};	var m = false;	this.sendTypingMessage = function() {	if (m != this.owner.isTyping()) {	m = !m;	this.fire({	sendMessage: {	action: "typing",	data: {	id: this.owner.id,	name: this.owner.name(),	logged: true,	typing: this.owner.isTyping()	}	}	});	this.fire({	userTyping: {	user: {	id: this.owner.id,	name: this.owner.name(),	logged: true,	typing: this.owner.isTyping()	}	}	})	}	};	this.getUserIndexById = function(o) {	var p = this.users();	for (var n = 0; n < p.length; ++n) {	if (p[n].id == o) {	return n	}	}	};	this.setUserTyping = function(n) {	var o = this.getUserById(n.id);	if (o) {	o.isTyping(n.typing);	this.fire({	userTyping: {	user: {	id: o.id,	name: o.name(),	logged: true,	typing: o.isTyping()	}	}	})	}	};	this.close = function() {	this.shoutboxContainer.style.display = "none";	this.fire({	close: {}	});	return true	};	this.show = function() {	this.shoutboxContainer.style.display = l;	this.fire({	show: {}	})	};	this.initialData = k.initialData	};	var j = function() {	var l;	var m;	var n = null;	var k;	return {	init: function(q, r, o, s, p) {	m = parseInt(r());	l = s.owner;	k = s;	b.Event.bind(q, {	keypress: function(t) {	var u = t ? t : event;	var v = u.keyCode ? u.keyCode : u.which ? u.which : u.charCode;	if (v == 13 && !u.shiftKey) {	if (u.preventDefault) {	u.preventDefault()	} else {	u.returnValue = false	}	k.sendMessage({	name: l.name(),	content: k.messageContent()	});	l.isTyping(false);	clearTimeout(n);	k.sendTypingMessage();	return true	}	l.isTyping(true);	if (n != null) {	clearTimeout(n)	}	n = setTimeout(function() {	l.isTyping(false);	n = null;	k.sendTypingMessage()	}, m);	return true	},	keydown: function(t) {	var u = t ? t : event;	var v = u.keyCode ? u.keyCode : u.which ? u.which : u.charCode;	if (v == 8 || v == 46) {	l.isTyping(k.messageContent().length > 0);	if (n != null) {	clearTimeout(n)	}	n = setTimeout(function() {	l.isTyping(false);	n = null	}, m);	if (v == 13 && !u.shiftKey) {	if (u.preventDefault) {	u.preventDefault()	} else {	u.returnValue = false	}	}	}	return true	},	keyup: function(t) {	var v = t ? t : event;	var w = v.keyCode ? v.keyCode : v.which ? v.which : v.charCode;	var u = v.srcElement ? v.srcElement : v.target;	if (w == 13 && !v.shiftKey) {	u.value = ""	}	k.messageContent(u.value);	if (w == 8 || w == 46) {	l.isTyping(k.messageContent().length > 0);	if (n != null) {	clearTimeout(n);	n = null	}	n = setTimeout(function() {	l.isTyping(false);	n = null	}, m)	}	k.sendTypingMessage();	return true	}	})	}	}	};	var d = function(k) {	b.Event.extend(this);	var l = b.StorageManager.getById(k.id),	m = k.key;	this.getAndUpdateUsers = function() {	l.get({	namespace: "Shoutbox",	k: m + "#usersCount"	}, function(p) {	if (Number(p.data.resultData)) {	var o = [];	for (var n = 1; n <= Number(p.data.resultData); n++) {	o.push(m + "#users#" + n)	}	l.get({	namespace: "Shoutbox",	ks: o	}, function(s) {	if (s.data.resultData) {	for (var q = 0, r = s.data.resultData.length; q < r; q++) {	if (s.data.resultData[q] != null) {	g.newUser(b.JSON.parse(s.data.resultData[q]))	}	}	}	})	}	})	};	this.getAndUpdateMessages = function() {	l.get({	namespace: "Shoutbox",	k: m + "#messagesCount"	}, function(r) {	if (r.data.resultData) {	var p = [];	for (var n = 1; n <= Number(r.data.resultData); n++) {	p.push(m + "#messages#" + n)	}	l.get({	namespace: "Shoutbox",	ks: p	}, function(u) {	if (u.data.resultData) {	for (var s = 0, t = u.data.resultData.length; s < t; s++) {	g.newMessage(new f(b.JSON.parse(u.data.resultData[s])))	}	}	})	} else {	if (b.Common.Array.isArray(g.initialData)) {	for (var n = 0; n < g.initialData.length; ++n) {	var o = g.initialData[n];	var q = new f({	name: o.name,	content: o.content,	data: o.data	});	g.newMessage(q);	e.addMessage(q)	}	}	}	})	};	this.addUser = function(n) {	l.incr({	namespace: "Shoutbox",	pair: {	k: m + "#usersCount",	v: 1	}	}, function(o) {	l.set({	namespace: "Shoutbox",	pair: {	k: m + "#users#" + o.data.resultData,	v: b.JSON.stringify(n)	}	}, function(p) {})	})	};	this.removeUser = function(n) {	l.get({	namespace: "Shoutbox",	k: m + "#usersCount"	}, function(o) {	l.del({	namespace: "Shoutbox",	k: m + "#users#" + (g.getUserIndexById(n) + 1)	}, function(p) {});	l.incr({	namespace: "Shoutbox",	pair: {	k: m + "#usersCount",	v: -1	}	}, function(p) {})	})	};	this.addMessage = function(n) {	l.incr({	namespace: "Shoutbox",	pair: {	k: m + "#messagesCount",	v: 1	}	}, function(o) {	l.set({	namespace: "Shoutbox",	pair: {	k: m + "#messages#" + o.data.resultData,	v: b.JSON.stringify(n)	}	}, function(p) {})	})	}	};	var g;	var c;	var e;	this.init = function(p, l) {	this._super(p);	b.Templating.bindingHandlers.userTypingBinding = new j();	this.template = p.attribute("template");	if (!this.template) {	var n = ' <div class="xrtml-shoutbox">';	n += '        <div class="xrtml-shoutbox-close" data-bind="click: close">X</div>';	n += '        <div class="xrtml-shoutbox-notificationcontainer" data-bind="visible: usersTyping().length > 0">';	n += '            <span class="xrtml-shoutbox-notificationcontainer-userstypinglabel">Users typing: </span>';	n += '            <span class="xRTML-Shoutbox-NotificationContainer-UsersTyping" data-bind="text: usersTyping()"></span>';	n += "        </div>";	n += '        <div class="xrtml-shoutbox-shoutscontainer" data-bind="foreach: messages ">';	n += '            <p class="xrtml-shoutbox-shout">';	n += '                <strong class="xrtml-shoutbox-shout-username" data-bind="text: name"></strong>';	n += '                <span class="xrtml-shoutbox-shout-message" data-bind="text: content"></span>';	n += "            <p>";	n += "        </div>";	n += '        <div class="xrtml-shoutbox-loginform" data-bind="visible: !owner.logged()">';	n += '            <input class="xrtml-shoutbox-loginform-username" type="text" data-bind="value: owner.name"></input>';	n += '            <input class="xrtml-shoutbox-loginform-login" type="button" value="Log In" data-bind="click: logIn"></input>';	n += "        </div>";	n += '        <div class="xrtml-shoutbox-shoutform" data-bind="visible: owner.logged()">';	n += '            <label class="xrtml-shoutbox-shoutform-usernamelabel" data-bind="text: owner.name()"></label>';	n += '            <textarea class="xrtml-shoutbox-shoutform-shoutcontent" data-bind="value: messageContent, userTypingBinding: 3000 " rows="1" cols="50"></textarea>';	n += '            <input class="xrtml-shoutbox-shoutform-send" type="button" value="Send" data-bind="click: sendMessage"></input>';	n += '            <input class="xrtml-shoutbox-shoutform-logout" type="button" value="Log Out" data-bind="click: logOut"></input>';	n += "        </div>";	n += "    </div>";	this.template = "xrtml-shoutbox-template";	b.Templating.inject({	id: this.template,	content: n	})	}	this.initialData = p.attribute("initialData");	if (this.storage) {	e = new d(this.storage);	e.bind({	requestData: function() {	e.getAndUpdateUsers();	e.getAndUpdateMessages()	},	messagePost: b.Common.Function.proxy(function(r) {	e.addMessage(r.message)	}, this),	userLogin: function(r) {	e.addUser(r.user)	},	userLogout: function(r) {	e.removeUser(r.user.id)	}	});	this.bind({	postInit: function() {	e.fire({	requestData: {}	})	}	})	} else {	b.Console.debug("Tag " + this.name + " " + this.id + ": Storage was not configured. The data will not be persistent.")	}	var q = b.Common.Function.parse;	this.bind({	message: q(p.attribute("onMessage")),	messagePost: q(p.attribute("onMessagePost")),	userLogin: q(p.attribute("onUserLogin")),	userLogout: q(p.attribute("onUserLogout")),	userTyping: q(p.attribute("onUserTyping")),	close: q(p.attribute("onClose")),	show: q(p.attribute("onShow"))	});	c = "xRTMLShoutbox-" + this.id;	var m = b.Common.Cookie.getCookie({	name: c	});	var k = {	shoutboxContainer: this.target[0],	initialData: this.initialData	};	if (m) {	k.userData = b.JSON.parse(m)	}	g = this.model = new h(k);	g.bind({	sendMessage: b.Common.Function.proxy(function(r) {	this.sendMessage(r)	}, this),	messagePost: b.Common.Function.proxy(function(r) {	this.fire({	messagePost: {	message: r.message	}	})	}, this),	userLogin: b.Common.Function.proxy(function(r) {	this.fire({	userLogin: {	user: r.user	}	})	}, this),	userLogout: b.Common.Function.proxy(function(r) {	this.fire({	userLogout: {	user: r.user	}	})	}, this),	userTyping: b.Common.Function.proxy(function(r) {	this.fire({	userTyping: {	user: r.user	}	})	}, this),	close: b.Common.Function.proxy(function(r) {	this.fire({	close: {}	})	}, this),	show: b.Common.Function.proxy(function(r) {	this.fire({	show: {}	})	}, this)	});	try {	b.Templating.applyBindings({	node: this.target[0],	binding: {	template: {	name: this.template,	data: g	}	}	})	} catch (o) {	b.Error.raise({	code: b.Error.Codes.TEMPLATING,	target: this,	info: {	message: o.message,	className: "xRTML.Tags." + this.name,	methodName: "init"	}	})	}	if (typeof l != "undefined" && p.name == "Shoutbox") {	l(this)	}	};	this.post = function(k) {	try {	g.newMessage(new f(k))	} catch (l) {	b.Error.raise({	code: b.Error.Codes.TEMPLATING,	target: this,	info: {	message: l.message,	className: "xRTML.Tags." + this.name,	methodName: "post"	}	})	}	this.fire({	message: {	message: k	}	})	};	this.userLogin = function(k) {	var m = new i(k);	try {	g.newUser(m)	} catch (l) {	b.Error.raise({	code: b.Error.Codes.TEMPLATING,	target: this,	info: {	message: l.message,	className: "xRTML.Tags." + this.name,	methodName: "login"	}	})	}	this.fire({	userLogin: {	user: {	id: m.id,	isTyping: m.isTyping(),	logged: m.logged(),	name: m.name(),	isTyping: false	}	}	})	};	this.userLogout = function(l) {	var m = g.getUserById(l.id);	try {	g.removeUser(l.id)	} catch (k) {	b.Error.raise({	code: b.Error.Codes.TEMPLATING,	target: this,	info: {	message: k.message,	className: "xRTML.Tags." + this.name,	methodName: "logout"	}	})	}	if (m != null) {	this.fire({	userLogout: {	user: {	id: m.id,	isTyping: m.isTyping(),	logged: m.logged(),	name: m.name(),	isTyping: false	}	}	})	}	};	this.typing = function(l) {	var m = g.getUserById(l.id);	if (m == null) {	g.newUser({	id: l.id,	name: l.name,	logged: true	})	}	try {	g.setUserTyping(l)	} catch (k) {	b.Error.raise({	code: b.Error.Codes.TEMPLATING,	target: this,	info: {	message: k.message,	className: "xRTML.Tags." + this.name,	methodName: "typing"	}	})	}	var m = g.getUserById(l.id)	};	this.login = function(k) {	if (!g.owner || (g.owner && g.owner.logged())) {	return	}	g.owner.id = k.id;	g.owner.name(k.name);	g.owner.logged(true);	g.users.push(g.owner);	b.Common.Cookie.setCookie({	name: c,	value: b.JSON.stringify({	id: g.owner.id,	name: g.owner.name()	})	});	g.fire({	sendMessage: {	action: "userLogin",	data: {	id: g.owner.id,	name: g.owner.name(),	logged: true,	isTyping: false	}	}	});	this.fire({	userLogin: {	user: {	id: g.owner.id,	name: g.owner.name(),	logged: true,	isTyping: false	}	}	});	return	};	this.logout = function() {	if (!g.owner || (g.owner && !g.owner.logged())) {	return	}	g.owner.logged(false);	b.Common.Cookie.deleteCookie({	name: c	});	if (e) {	e.fire({	userLogout: {	user: g.owner	}	})	}	g.fire({	sendMessage: {	action: "userLogout",	data: {	id: g.owner.id	}	}	});	g.owner.name("Write a username...");	return	};	this.show = function() {	g.show()	};	this.close = function() {	g.close()	};	this.dispose = function() {	b.Common.Cookie.deleteCookie({	name: c	});	while (this.target[0].firstChild) {	this.target[0].removeChild(this.target[0].firstChild)	}	this._super()	}	} 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	b.TagManager.register({	name: "Toast",	struct: function() {	function d() {	var i = null;	if (navigator.appName == "Microsoft Internet Explorer") {	var j = navigator.userAgent;	var h = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");	if (h.exec(j) != null) {	i = parseFloat(RegExp.$1)	}	}	return i	}	var g = function(o, p) {	var j = {	showBanner: "ShowBanner",	closeBanner: "CloseBanner",	openURL: "OpenUrl",	closeURL: "CloseURL"	};	var l = j.showBanner;	var h = j.closeBanner;	var k = j.openURL;	var i = j.closeURL;	var m = (function() {	var t = {};	t.box = function() {	var y, z, u, x, B, A = 0;	var w = document.createElement("div");	w.className = "xrtml-toast-banner-container";	return {	show: function(C) {	B = {	opacity: 70,	close: 1,	animate: 1,	fixed: 1,	mask: 1,	maskid: "",	boxid: "",	topsplit: 2,	url: 0,	post: 0,	height: 0,	width: 0,	html: 0,	iframe: 0	};	for (var D in C) {	B[D] = C[D]	}	if (!!A) {	y.style.display = "none";	clearTimeout(A.ah);	if (x.v) {	A.removeChild(x);	x.v = 0	}	}	while (w.firstChild) {	w.removeChild(w.firstChild)	}	y = document.createElement("div");	A = document.createElement("div");	A.className = "xrtml-toast-banner-loading";	u = document.createElement("div");	u.className = C.bannerContentClass;	z = document.createElement("div");	z.className = "xrtml-toast-banner-mask";	x = document.createElement("div");	x.className = "xrtml-toast-banner-close";	x.v = 0;	if (C.destinationUrl != "" && C.destinationTarget == "_blank") {	var v = document.createElement("a");	v.href = C.destinationUrl;	v.target = C.destinationTarget;	v.appendChild(u);	A.appendChild(v)	} else {	A.appendChild(u)	}	y.appendChild(A);	z.onclick = x.onclick = function() {	t.box.hide(h);	c.bannerActive = false	};	w.appendChild(z);	w.appendChild(y);	document.body.appendChild(w);	window.onresize = t.box.resize;	y.className = "xrtml-toast-banner xrtml-banner-" + C.bannerType + " " + C.theme;	A.id = B.boxid;	z.id = B.maskid;	y.style.position = B.fixed ? "fixed" : "absolute";	if (B.html && !B.animate) {	A.style.backgroundImage = "none";	u.innerHTML = B.html;	u.style.display = "";	A.style.width = B.width ? B.width + "px" : "auto";	A.style.height = B.height ? B.height + "px" : "auto"	} else {	u.style.display = "none";	if (!B.animate && B.width && B.height) {	A.style.width = B.width + "px";	A.style.height = B.height + "px"	} else {	A.style.width = A.style.height = "100px"	}	}	if (B.mask) {	this.mask();	this.alpha(z, 1, B.opacity)	} else {	this.alpha(y, 1, 100)	}	if (B.autohide) {	A.ah = setTimeout(function() {	t.box.hide("TimeOut")	}, 1000 * B.autohide)	} else {	document.onkeyup = t.box.esc	}	},	fill: function(C, G, F, v, H, D) {	if (G) {	if (B.image) {	var E = new Image();	E.onload = function() {	H = H || E.width;	D = D || E.height;	t.box.psh(E, v, H, D)	};	E.src = B.image	} else {	if (B.iframe) {	this.psh('<iframe src="' + B.iframe + '" width="' + B.width + '" frameborder="0" height="' + B.height + '"></iframe>', v, H, D)	} else {	var I = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");	I.onreadystatechange = function() {	if (I.readyState == 4 && I.status == 200) {	A.style.backgroundImage = "";	t.box.psh(I.responseText, v, H, D)	}	};	if (F) {	I.open("POST", C, true);	I.setRequestHeader("Content-type", "application/x-www-form-urlencoded");	I.send(F)	} else {	I.open("GET", C, true);	I.send(null)	}	}	}	} else {	this.psh(C, v, H, D)	}	},	psh: function(C, v, E, D) {	if (typeof C == "object") {	u.appendChild(C)	} else {	u.innerHTML = C	}	var F = A.style.width,	G = A.style.height;	if (!E || !D) {	A.style.width = E ? E + "px" : "";	A.style.height = D ? D + "px" : "";	u.style.display = "";	if (!D) {	D = parseInt(u.offsetHeight)	}	if (!E) {	E = parseInt(u.offsetWidth)	}	u.style.display = "none"	}	A.style.width = F;	A.style.height = G;	this.size(E, D, v)	},	esc: function(v) {	v = v || window.event;	if (v.keyCode == 27) {	t.box.hide(h)	}	},	hide: function(v) {	if (b.Sizzle("#xrtml-video-ytplayer").length > 0) {	swfobject.removeSWF("xrtml-video-ytplayer")	}	clearTimeout(A.ah);	t.box.alpha(y, -1, 0, 3);	document.onkeypress = null;	if (B.closejs) {	B.closejs(v)	}	if (w) {	w.parentNode.removeChild(w)	}	},	resize: function() {	t.box.pos();	t.box.mask()	},	mask: function() {	z.style.height = this.total(1) + "px";	z.style.width = this.total(0) + "px"	},	pos: function() {	var v;	if (typeof B.top != "undefined") {	v = B.top	} else {	v = (this.height() / B.topsplit) - (y.offsetHeight / 2);	v = v < 20 ? 20 : v	}	if (!B.fixed && !B.top) {	v += this.top()	}	y.style.top = v + "px";	y.style.left = typeof B.left != "undefined" ? B.left + "px" : (this.width() / 2) - (y.offsetWidth / 2) + "px"	},	alpha: function(D, C, v) {	clearInterval(D.ai);	if (C) {	D.style.opacity = 0;	D.style.filter = "alpha(opacity=0)";	D.style.display = "block";	t.box.pos()	}	D.ai = setInterval(function() {	t.box.ta(D, v, C)	}, 20)	},	ta: function(D, v, C) {	var F = Math.round(D.style.opacity * 100);	if (F == v) {	clearInterval(D.ai);	if (C == -1) {	D.style.display = "none";	D == y ? t.box.alpha(z, -1, 0, 2) : u.innerHTML = A.style.backgroundImage = ""	} else {	if (D == z) {	this.alpha(y, 1, 100)	} else {	y.style.filter = "";	t.box.fill(B.html || B.url, B.url || B.iframe || B.image, B.post, B.animate, B.width, B.height)	}	}	} else {	var E = v - Math.floor(Math.abs(v - F) * 0.5) * C;	D.style.opacity = E / 100;	D.style.filter = "alpha(opacity=" + E + ")"	}	},	size: function(E, C, v) {	if (v) {	clearInterval(A.si);	var F = parseInt(A.style.width) > E ? -1 : 1,	D = parseInt(A.style.height) > C ? -1 : 1;	A.si = setInterval(function() {	t.box.ts(E, F, C, D)	}, 20)	} else {	A.style.backgroundImage = "none";	if (B.close) {	A.appendChild(x);	x.v = 1	}	A.style.width = E + "px";	A.style.height = C + "px";	u.style.display = "";	this.pos();	if (B.openjs) {	B.openjs()	}	}	},	ts: function(F, G, D, E) {	var C = parseInt(A.style.width),	v = parseInt(A.style.height);	if (C == F && v == D) {	clearInterval(A.si);	A.style.backgroundImage = "none";	u.style.display = "block";	if (B.close) {	A.appendChild(x);	x.v = 1	}	if (B.openjs) {	B.openjs()	}	} else {	if (C != F) {	A.style.width = (F - Math.floor(Math.abs(F - C) * 0.6) * G) + "px"	}	if (v != D) {	A.style.height = (D - Math.floor(Math.abs(D - v) * 0.6) * E) + "px"	}	this.pos()	}	},	top: function() {	return document.documentElement.scrollTop || document.body.scrollTop	},	width: function() {	return self.innerWidth || document.documentElement.clientWidth || document.body.clientWidth	},	height: function() {	return self.innerHeight || document.documentElement.clientHeight || document.body.clientHeight	},	total: function(C) {	var v = document.body,	D = document.documentElement;	return C ? Math.max(Math.max(v.scrollHeight, D.scrollHeight), Math.max(v.clientHeight, D.clientHeight)) : Math.max(Math.max(v.scrollWidth, D.scrollWidth), Math.max(v.clientWidth, D.clientWidth))	}	}	}();	b.Event.extend(this);	var r = function(w) {	var x = {	autohide: w.bannerAutoHide,	animate: true,	closejs: function(y) {	if (w.destinationUrl && w.destinationTarget != "iframe" && w.destinationTarget != "html") {	c.bannerActive = false	}	if (w.displayBanner) {	c.fire({	bannerClose: {	target: w,	info: y	}	})	}	},	bannerContentClass: (function(y) {	return !y.destinationUrl ? "xrtml-toast-banner-content" : "xrtml-toast-banner-content-clickable"	})(w),	bannerType: w.bannerType,	theme: w.theme,	destinationUrl: w.destinationUrl,	destinationTarget: w.destinationTarget	};	if (w.bannerWidth) {	x.width = w.bannerWidth	}	if (w.bannerHeight) {	x.height = w.bannerHeight	}	switch (w.bannerType) {	default:	case "image":	x.image = w.bannerUrl;	break;	case "html":	x.html = w.bannerContent;	break;	case "iframe":	x.iframe = w.bannerUrl;	break;	case "flash":	var u = '<object type="application/x-shockwave-flash" data="' + w.bannerUrl + '"';	if (w.bannerWidth) {	u += 'width="' + w.bannerWidth + '"'	}	if (w.bannerHeight) {	u += 'height="' + w.bannerHeight + '"'	}	u += '><param name="movie" value="' + w.bannerUrl + '" />';u += "</object>";x.html = u;	break;	case "video":	if (typeof w.bannerSource != "undefined") {	if (b.Common.Array.contains({	items: b.TagManager.getClasses(),	obj: "Video"	})) {	var u = '<div id="xrtml-toast-banner-videocontainer"';	var v = "";	if (w.bannerWidth) {	v += "width:" + w.bannerWidth + "px;"	} else {	v += "width: 400px;"	}	if (w.bannerHeight) {	v += "height:" + w.bannerHeight + "px;"	} else {	v += "height: 400px;"	}	if (v != "") {	u += 'style="' + v + '"'	}	u += "></div>";	x.html = u;	x.openjs = b.Common.Function.proxy(function() {	var z = {	name: "Video",	id: "toast-video-tag",	controlsBar: false,	target: "#xrtml-toast-banner-videocontainer",	width: this.bannerWidth || 400,	height: this.bannerHeight || 400,	keepRatio: false	};	b.TagManager.create(z);	var y = b.TagManager.getById("toast-video-tag");	y.play(w.bannerSource)	}, w);	x.closejs = b.Common.Function.proxy(function() {	c.bannerActive = false;	b.TagManager.getById("toast-video-tag").dispose();	c.fire({	bannerClose: {	target: w	}	})	}, w)	} else {	b.Console.error("The xRTML video tag must be added in order to create video banners.")	}	}break	}	t.box.show(x)	};	var q = function(u) {	t.box.hide(u)	};	var s = function(u) {	if (u.displayBanner && c.bannerActive) {	t.box.hide(j.openURL)	}	var v = {	autohide: false,	animate: true,	closejs: function() {	c.bannerActive = false	},	bannerContentClass: "xrtml-toast-banner-content",	bannerType: u.destinationTarget,	theme: u.theme,	destinationUrl: false	};	if (u.destinationTargetWidth) {	v.width = u.destinationTargetWidth	}	if (u.destinationTargetHeight) {	v.height = u.destinationTargetHeight	}	if (u.destinationTarget == "iframe") {	v.iframe = u.destinationUrl	} else {	v.html = u.destinationContent	}	t.box.show(v)	};	return {	show: r,	hide: q,	showIframe: s	}	})();	var n = typeof p == "function" ? p : false;	this.id = b.Common.Util.idGenerator();	this.theme = o.theme || "";	this.title = o.title;	this.text = o.text;	this.displayToast = o.displayToast;	this.displayBanner = o.displayBanner;	this.timeToLive = o.timeToLive;	this.bannerType = o.bannerType;	this.bannerUrl = o.bannerUrl;	this.bannerContent = o.bannerContent;	this.bannerWidth = o.bannerWidth;	this.bannerHeight = o.bannerHeight;	this.bannerAutoHide = o.bannerAutoHide;	this.bannerSource = o.bannerSource;	this.destinationUrl = o.destinationUrl;	this.download = o.download;	this.destinationTarget = o.destinationTarget;	this.destinationContent = o.destinationContent;	this.destinationTargetHeight = o.destinationTargetHeight;	this.destinationTargetWidth = o.destinationTargetWidth;	this.metaData = o.metaData;	this.entryTimeout = o.entryTimeout;	this.timestamp = (+new Date);	this.index = o.index;	this.close = function(q) {	if (typeof q != "string") {	c.destroy(this, "CloseButton")	} else {	c.destroy(this, q)	}	clearTimeout(this.timeoutReference)	};	this.showBanner = function() {	if (this.displayBanner) {	if (this.displayToast) {	this.close(l)	}	c.bannerActive = true;	m.show(this);	c.fire({	bannerDisplay: {	target: this	}	});	var s = b.Sizzle(".xrtml-toast-banner.xrtml-banner-" + this.bannerType + " * :not(.xrtml-toast-banner-close)");	var q = b.Common.Function.proxy(function() {	if (n) {	b.Async.series([b.Common.Function.proxy(function(u) {	n(this, u)	}, this)], b.Common.Function.proxy(function() {	if (this.destinationTarget == "_self") {	window.location.href = this.destinationUrl;	return	} else {	if (this.destinationTarget != "_blank") {	m.showIframe(this)	} else {	if (this.destinationUrl) {	m.hide(k);	this.openUrl()	}	}	}	for (var u = 0; u < s.length; u++) {	b.Event.unbind(s[u], {	click: q	})	}	}, this))	} else {	if (this.destinationTarget == "_self") {	window.location.href = this.destinationUrl;	return	} else {	if (this.destinationTarget != "_blank") {	m.showIframe(this)	} else {	if (this.destinationUrl) {	m.hide(k);	this.openUrl()	}	}	}	for (var t = 0; t < s.length; t++) {	b.Event.unbind(s[t], {	click: q	})	}	}	}, this);	for (var r = 0; r < s.length; r++) {	b.Event.bind(s[r], {	click: q	})	}	} else {	if (n) {	b.Async.series([b.Common.Function.proxy(function(t) {	n(this, t)	}, this)], b.Common.Function.proxy(function() {	if (this.destinationTarget == "_self") {	window.location.href = this.destinationUrl;	return	} else {	if (this.destinationTarget != "_blank") {	m.showIframe(this)	} else {	this.close("OpenUrl");	this.openUrl()	}	}	}, this))	} else {	if (this.destinationTarget == "_self") {	window.location.href = this.destinationUrl;	return	} else {	if (this.destinationTarget != "_blank") {	m.showIframe(this)	} else {	this.close("OpenUrl");	this.openUrl()	}	}	}	}	return true	};	if (this.displayToast) {	this.timeoutReference = setTimeout(b.Common.Function.proxy(function() {	this.close("TimeOut")	}, this), this.timeToLive)	}	this.openUrl = function() {	if (this.destinationUrl) {	c.fire({	urlOpen: {	target: this	}	})	}	}	};	var f = function(m) {	var o = window.document.title || "";	var i = 4;	var q = [];	var k = null;	var l = null;	var s = null;	var j = 0;	var r = function() {	if (!!k) {	clearInterval(s);	k = null;	l = null;	s = null;	j = 0;	window.document.title = o;	n()	}	};	var h = function() {	if (!!k) {	if (j >= i) {	r()	} else {	if (l != "") {	l = l.substring(1);	window.document.title = !!l ? l : o	} else {	l = !!k.title ? k.title : o;	j += 1	}	}	}	};	var n = function() {	if (!k && q.length > 0) {	k = q.shift();	l = !!k.title ? k.title : o;	if (!!l) {	window.document.title = l;	s = setInterval(h, 200)	} else {	r()	}	}	};	this.add = function(t) {	q.push(t);	if (!k) {	n()	}	};	var p = function(t) {	if (t.type == "toastDiscarded" || t.type == "bannerClose" || (t.type == "toastClose" && !t.target.displayBanner)) {	r()	}	};	m.bind({	toastDiscarded: p,	toastClose: p,	bannerClose: p	})	};	var e = function(i) {	b.Event.extend(this);	this.toasts = b.Templating.observable(new Array());	var k = this;	var h = i;	var l = new f(this);	var m = [];	var j = function(n) {	if (n.displayToast) {	if (n.index == "end") {	k.toasts.push(n)	} else {	k.toasts.splice(0, 0, n)	}	if (n.timeoutReference != null) {	clearTimeout(n.timeoutReference);	n.timeoutReference = setTimeout(b.Common.Function.proxy(function() {	this.close("TimeOut")	}, n), n.timeToLive)	}	k.fire({	toastDisplay: {	target: n	}	})	} else {	n.showBanner()	}	};	b.Common.Browser.bind({	focus: function(o) {	var n = +new Date();	var r = [];	for (var p = 0; p < m.length; p++) {	var s = new Date(m[p].timestamp).setMilliseconds(m[p].entryTimeout);	if (n <= s) {	if (b.Common.Browser.isPageFocused()) {	j(m[p]);	r.push(p);	clearTimeout(m[p].discardTimer)	}	}	}	for (var p = 0; p < r.length; p++) {	var q = r[p];	m.splice(p, 1)	}	}	});	this.create = function(n) {	var o = new g(n, h);	l.add(o);	if (o.entryTimeout <= 0) {	j(o)	} else {	if (b.Common.Browser.isPageFocused()) {	j(o)	} else {	o.discardTimer = setTimeout(function() {	var p = false;	for (var q = 0; q < m.length && !p; q++) {	if (o.id == m[q].id) {	m.splice(q, 1);	k.fire({	toastDiscarded: {	target: o	}	})	}	}	}, o.entryTimeout);	m.push(o)	}	}	};	this.destroy = function(o, n) {	this.toasts.remove(o);	this.fire({	toastClose: {	target: o,	info: n	}	})	};	this.bannerActive = false	};	var c = null;	this.init = function(l, h) {	this._super(l);	this.positionAt = l.attribute("positionAt");	this.mediaUrls = l.attribute("mediaUrls");	if (typeof this.mediaUrls != "undefined") {	if (b.Common.Array.contains({	items: b.TagManager.getClasses(),	obj: "Audio"	})) {	this.audioNotificationTag = b.TagManager.create({	name: "Audio",	controlsbar: false	})	} else {	b.Console.error("The xRTML Audio tag must be added in order to play audio notifications.")	}	}	this.effects = l.attribute("effects");	b.Effect.extend(this);	this.bannerTransition = l.attribute("bannerTransition");	c = this.model = new e(this.bannerTransition);	this.toastContainer;	if (this.target[0].tagName == "BODY") {	this.toastContainer = document.createElement("div");	this.toastContainer.setAttribute("id", "xRTML-Toast-target");	document.body.appendChild(this.toastContainer)	} else {	this.toastContainer = this.target[0]	}	this.template = l.attribute("template");	if (!this.template) {	var i = ' <div class="xrtml-toast" data-bind="attr: { id: id }">';	i += '        <div class="xrtml-toast-close" data-bind="click: close">X</div>';	i += "        <div data-bind=\"click: showBanner, css: { 'xrtml-toast-content': !destinationUrl && !displayBanner , 'xrtml-toast-content-clickable': !!destinationUrl || displayBanner }\">";	i += "            <!-- ko if: displayBanner -->";	i += '                <h3 class="xrtml-toast-content-title" data-bind="text: title"></h3>';	i += '                <span class="xrtml-toast-content-message" data-bind="text: text"></span>';	i += "            <!-- /ko -->";	i += "            <!-- ko if: !displayBanner -->";	i += '                <!-- ko if: !!destinationUrl && destinationTarget == "_blank" -->';	i += "                    <!-- ko if: !download -->";	i += '                        <a data-bind="attr: { href: destinationUrl, target: destinationTarget } ">';	i += '                            <h3 class="xrtml-toast-content-title" data-bind="text: title"></h3>';	i += '                            <span class="xrtml-toast-content-message" data-bind="text: text"></span>';	i += "                        </a>";	i += "                    <!-- /ko -->";	i += "                    <!-- ko if: download -->";	i += '                        <a data-bind="attr: { href: destinationUrl, target: destinationTarget }" download>';	i += '                            <h3 class="xrtml-toast-content-title" data-bind="text: title"></h3>';	i += '                            <span class="xrtml-toast-content-message" data-bind="text: text"></span>';	i += "                        </a>";	i += "                    <!-- /ko -->";	i += "                <!-- /ko -->";	i += "            <!-- /ko -->";	i += "        </div>";	i += "    </div>";	this.template = "xRTML-Toast-Template";	b.Templating.inject({	id: this.template,	content: i	})	}	try {	b.Templating.applyBindings({	node: this.toastContainer,	binding: {	template: {	name: this.template,	foreach: c.toasts,	afterRender: b.Common.Function.proxy(function(o, n) {	for (var p = 0; p < o.length; p++) {	if (o[p].nodeName != "#text") {	this.runEffects({	element: o[p]	})	}	}	}, this)	}	}	})	} catch (j) {	b.Error.raise({	code: b.Error.Codes.TEMPLATING,	target: this,	info: {	message: j.message,	className: "xRTML.Tags." + this.name,	methodName: "init"	}	})	}	var k = (function(o) {	var n = o.toastContainer;	n.style.position = "fixed";	switch (o.positionAt) {	case "topleft":	n.style.top = 15 + "px";	n.style.left = 15 + "px";	break;	case "topright":	n.style.top = 15 + "px";	n.style.right = 15 + "px";	break;	case "bottomleft":	n.style.bottom = 30 + "px";	n.style.left = 15 + "px";	break;	case "bottomright":	default:	n.style.bottom = 30 + "px";	n.style.right = 15 + "px";	break	}	})(this);	var m = b.Common.Function.parse;	this.bind({	toastDisplay: m(l.attribute("onToastDisplay")),	toastClose: m(l.attribute("onToastClose")),	bannerDisplay: m(l.attribute("onBannerDisplay")),	bannerClose: m(l.attribute("onBannerClose")),	urlOpen: m(l.attribute("onUrlOpen")),	toastDiscarded: m(l.attribute("onToastDiscarded"))	});	c.bind({	toastDisplay: b.Common.Function.proxy(function(n) {	this.fire({	toastDisplay: n	})	}, this),	toastClose: b.Common.Function.proxy(function(n) {	this.fire({	toastClose: n	})	}, this),	bannerDisplay: b.Common.Function.proxy(function(n) {	this.fire({	bannerDisplay: n	})	}, this),	bannerClose: b.Common.Function.proxy(function(n) {	this.fire({	bannerClose: n	})	}, this),	urlOpen: b.Common.Function.proxy(function(n) {	this.fire({	urlOpen: n	})	}, this),	toastDiscarded: b.Common.Function.proxy(function(n) {	this.fire({	toastDiscarded: n	})	}, this)	});	if (typeof h != "undefined" && l.name == "Toast") {	h(this)	}	};	this.process = function(j) {	var h = {	entryTimeout: typeof j.entryTimeout == "number" ? j.entryTimeout : 0,	title: typeof j.title != "undefined" ? j.title : "",	text: typeof j.text != "undefined" ? j.text : "",	destinationUrl: typeof j.destinationUrl != "undefined" ? j.destinationUrl : false,	download: !!j.download,	destinationTarget: j.destinationTarget == "iframe" || j.destinationTarget == "html" || j.destinationTarget == "_self" ? j.destinationTarget : "_blank",	destinationContent: j.destinationContent,	destinationTargetHeight: b.Common.Converter.toNumber(j.destinationTargetHeight),	destinationTargetWidth: b.Common.Converter.toNumber(j.destinationTargetWidth),	timeToLive: j.timeToLive || 10000,	metaData: j.metaData,	displayToast: typeof j.displayToast != "undefined" ? j.displayToast : true,	displayBanner: typeof j.displayBanner != "undefined" ? j.displayBanner : true,	bannerUrl: j.bannerUrl,	bannerContent: j.bannerContent,	bannerType: j.bannerType,	bannerSource: j.bannerSource,	bannerHeight: b.Common.Converter.toNumber(j.bannerHeight),	bannerWidth: b.Common.Converter.toNumber(j.bannerWidth),	bannerAutoHide: typeof j.bannerAutoHide != "undefined" ? (b.Common.Converter.toNumber(j.bannerAutoHide) / 1000) : false,	theme: j.theme	};	if (this.positionAt == "topleft" || this.positionAt == "topright") {	h.index = "begin"	} else {	h.index = "end"	}	if (c.bannerActive) {	var i = b.Common.Function.proxy(function() {	this.unbind({	bannerClose: i	});	this.process(j)	}, this);	this.bind({	bannerClose: i	})	} else {	try {	c.create(h)	} catch (k) {	b.Error.raise({	code: b.Error.Codes.TEMPLATING,	target: this,	info: {	message: k.message,	className: "xRTML.Tags." + this.name,	methodName: "process"	}	})	}	if (typeof this.audioNotificationTag != "undefined") {	this.audioNotificationTag.play({	source: this.mediaUrls	})	}	}	}	} 	}) })(window.xRTML = window.xRTML || {}); (function(b, a) { 	b.TagManager.register({	name: "Videochat",	struct: function() {	var g;	var h = function(j) {	b.Event.extend(this);	var y = function(A) {	this.camera = A.camera || {	width: 264,	height: 198	};	this.streamId = A.streamId;	this.isConnected = b.Templating.observable(false)	},	m = b.Common.Cookie,	r = b.Common.Function.proxy,	n, t;	this.hasSession = b.Templating.observable(false);	this.apiKey = j.apiKey || b.Console.error("Tag Videochat " + this.id + ": An api key is required for a TokBox provider.");	this.token = j.token;	this.sessionId = j.sessionId;	this.timeToLive = j.timeToLive || 3600000;	this.role = j.role;	this.owner = new y({	camera: j.camera	});	this.users = b.Templating.observable([]);	this.usersCount = 0;	this.scriptUrl = j.scriptUrl;	if (j.role == f.moderator) {	this.serviceUrl = j.serviceUrl || b.Console.error("Tag Videochat " + this.id + ": The service url is mandatory.")	}	function i(A) {	var B = new y({	streamId: A.streamId,	camera: j.camera	});	this.users.push(B);	t.subscribe(A, A.streamId)	}	function s(B) {	var C = t.getSubscribersForStream(B);	for (var A = 0; A < C.length; A++) {	t.unsubscribe(C[A])	}	this.users.remove(function(D) {	return D.streamId == B.streamId	})	}	function u(B) {	this.owner.isConnected(true);	for (var C = 0; C < B.streams.length; C++) {	i.call(this, B.streams[C])	}	var D = TB.initPublisher(this.apiKey, "opentok_publisher", this.owner.camera);	D.addEventListener("accessAllowed", r(function(E) {	this.fire({	accessAllowed: {}	})	}, this));	D.addEventListener("accessDenied", r(function(E) {	this.fire({	accessDenied: {}	})	}, this));	t.publish(D);	var A = b.JSON.parse(m.getCookie({	name: c	}));	A.isConnected = this.owner.isConnected();	m.setCookie({	name: c,	value: b.JSON.stringify(A)	});	this.fire({	connect: {	sessionId: this.sessionId,	token: this.token	}	})	}	function v(B) {	B.preventDefault();	t.cleanup();	this.owner.isConnected(false);	this.users.removeAll();	var A = b.JSON.parse(m.getCookie({	name: c	}));	A.isConnected = this.owner.isConnected();	m.setCookie({	name: c,	value: b.JSON.stringify(A)	});	this.fire({	disconnect: {	sessionId: this.sessionId,	token: this.token	}	})	}	function w(A) {	for (var B = 0; B < A.streams.length; B++) {	if (A.streams[B].connection.connectionId != A.target.connection.connectionId) {	i.call(this, A.streams[B]);	this.fire({	userPublish: {	stream: A.streams[B]	}	})	}	}	}	function x(A) {	for (var B = 0; B < A.streams.length; B++) {	s.call(this, A.streams[B]);	this.fire({	userUnpublish: {	stream: A.streams[B]	}	})	}	}	function k(A) {	this.usersCount += A.connections.length	}	function l(A) {	this.usersCount -= A.connections.length	}	var o = function(A) {	b.Common.Request.get({	url: this.serviceUrl + "/createsession",	data: {	timeToLive: this.timeToLive	},	success: r(function(C) {	var B = b.JSON.parse(C).CreateSessionResult;	B.expireTime = new Date(B.expireTime);	A(B)	}, this),	crossDomain: true	})	};	this.generateToken = function(A) {	if (this.hasSession()) {	var B = b.JSON.parse(m.getCookie({	name: c	})),	C = new Date(B.expireTime);	b.Common.Request.get({	url: this.serviceUrl + "/generatetoken",	data: {	sessionId: this.sessionId,	role: f.publisher,	expireTime: C.toGMTString()	},	success: r(function(F) {	var E = b.JSON.parse(F).GenerateTokenResult;	E.sessionId = this.sessionId;	E.expireTime = B.expireTime;	A(E)	}, this),	crossDomain: true	})	} else {	var D = r(function(E) {	this.generateToken(A);	this.unbind({	sessionStart: D	})	}, this);	this.bind({	sessionStart: D	});	this.startSession()	}	};	this.startSession = function(A) {	if (A && A.sessionId && A.token) {	t = TB.initSession(A.sessionId);	t.addEventListener("sessionConnected", r(u, this));	t.addEventListener("sessionDisconnected", r(v, this));	t.addEventListener("streamCreated", r(w, this));	t.addEventListener("streamDestroyed", r(x, this));	t.addEventListener("connectionCreated", r(k, this));	t.addEventListener("connectionDestroyed", r(l, this));	this.sessionId = A.sessionId;	this.token = A.token;	this.usersCount = 0;	this.hasSession(true);	this.fire({	sessionStart: {	sessionId: this.sessionId	}	})	} else {	if (this.role == f.publisher || this.role == f.subscriber) {	g.sendMessage({	trigger: "vc_moderator_trigger",	action: "connect",	data: {	id: g.internalId	}	})	} else {	o.call(this, (r(function(C) {	C.expireTime = new Date(new Date().setHours(new Date(C.expireTime).getHours() + 2));	var B = C.expireTime;	C.expireTime = C.expireTime.toGMTString();	m.setCookie({	name: c,	value: b.JSON.stringify(C),	expires: B	});	this.startSession(C)	}, this)))	}	}	};	this.endSession = function() {	if (this.owner.isConnected()) {	var A = r(function() {	this.endSession();	this.unbind({	disconnect: A	})	}, this);	this.bind({	disconnect: A	});	t.disconnect()	} else {	this.sessionId = null;	this.token = null;	this.hasSession(false);	t = null;	m.deleteCookie({	name: c	});	this.fire({	sessionEnd: {	sessionId: this.sessionId	}	})	}	};	this.connect = function(A) {	if (!this.hasSession()) {	this.bind({	sessionStart: this.connect	});	this.startSession(A)	} else {	this.unbind({	sessionStart: this.connect	});	t.connect(this.apiKey, this.token)	}	};	this.disconnect = function() {	t.disconnect()	};	var z = function() {	return {	init: function() {},	update: function(C, F, A, G, B) {	var E = F();	var D = document.createElement("div");	D.setAttribute("id", E.streamId);	C.appendChild(D)	}	}	},	q = function() {	return {	init: function() {},	update: function(C, E, A, F, B) {	if (F.owner.isConnected()) {	var D = document.createElement("div");	D.setAttribute("id", "opentok_publisher");	C.appendChild(D)	}	}	}	},	p = function() {	TB.addEventListener("exception", r(function(C) {	this.fire({	exception: {	code: C.code,	message: C.message	}	})	}, this));	if (TB.checkSystemRequirements() != TB.HAS_REQUIREMENTS) {	b.Console.error("You don't have the minimum requirements to run this application. Please upgrade to the latest version of Flash.")	}	b.Templating.bindingHandlers.usersBinding = new z();	b.Templating.bindingHandlers.ownerBinding = new q();	var A = m.getCookie({	name: c	});	if (A) {	var B = b.JSON.parse(A);	if (new Date(B.expireTime) > new Date()) {	this.startSession(B);	if (B.isConnected) {	this.connect()	}	} else {	b.Console.log("Session " + B.sessionId + " has expired. Removing cookie.");	m.deleteCookie({	name: c	})	}	}	this.fire({	ready: {}	})	};	if (j.ready) {	this.bind({	ready: j.ready	})	}	if (!window.TB) {	b.Console.debug("Tag Videochat: Loading provider API...");	b.Common.DOM.loadScripts(this.scriptUrl, r(function() {	b.Console.debug("Tag Videochat: Provider API has been loaded...");	p.call(this)	}, this))	} else {	p.call(this)	}	},	f = {	moderator: "moderator",	publisher: "publisher",	subscriber: "subscriber"	},	d = {	provider: {	tokBox: h	},	create: function(i) {	if (!this.provider[i.name]) {	b.Console.error("Tag Videochat " + this.id + ": Provider " + i.name + " not recognized.")	}	var j = new this.provider[i.name](i);	return j	}	};	var e = [],	c = "xRTML-Videochat";	this.init = function(n, j) {	this._super(n);	this.template = n.attribute("template");	this.role = n.attribute("role") || f.publisher;	var k = n.attribute("provider");	k.camera = n.attribute("camera");	k.role = this.role;	if (!this.resources.opentok) {	this.registerResources([{	name: "opentok",	src: document.location.protocol == "https:" ? "https://swww.tokbox.com/v1.1/js/TB.min.js" : "http://static.opentok.com/v1.1/js/TB.min.js"	}])	}	var l = false;	k.scriptUrl = this.resources.opentok;	k.ready = b.Common.Function.proxy(function() {	l = true	}, this);	this.model = d.create(k);	if (this.role == f.moderator) {	this.maxUsers = n.attribute("maxUsers") || 2;	this.autoPublish = n.attribute("autoPublish");	if (typeof this.autoPublish != "boolean") {	this.autoPublish = true	}	this.registerTrigger("vc_moderator_trigger");	this.connect = function(p) {	if (this.model.usersCount < this.maxUsers) {	this.model.generateToken(b.Common.Function.proxy(function(q) {	this.sendMessage({	trigger: "vc_participant_trigger_" + p.id,	action: "connect",	data: q	});	if (this.autoPublish && !this.model.owner.isConnected()) {	this.model.connect()	}	}, this))	} else {	this.sendMessage({	trigger: "vc_participant_trigger_" + p.id,	action: "connect",	data: {	error: "User limit (" + this.maxUsers + ") reached."	}	})	}	};	this.model.bind({	sessionEnd: b.Common.Function.proxy(function(p) {	this.sendMessage({	action: "endSession",	data: {}	})	}, this)	})	} else {	this.registerTrigger("vc_participant_trigger_" + this.internalId);	this.connect = function(p) {	if (!p && !this.model.sessionId && !this.model.token) {	this.fire({	error: {	message: "Tag Videochat " + this.id + ": credentials haven't been provided yet. Call 'startSession' from model object to perform this request to a moderator."	}	});	return	}	if (!p.error) {	p.expireTime = new Date(p.expireTime);	b.Common.Cookie.setCookie({	name: c,	value: b.JSON.stringify(p),	expires: p.expireTime	});	this.model.startSession(p)	} else {	this.fire({	error: {	message: p.error	}	})	}	};	this.disconnect = function() {	b.Common.Cookie.deleteCookie({	name: c	});	this.model.disconnect()	};	this.endSession = function() {	this.model.endSession()	}	}	var o = b.Common.Function.parse,	m = b.Common.Function.proxy;	this.model.bind({	sessionStart: m(function(p) {	this.fire({	sessionStart: p	})	}, this),	sessionEnd: m(function(p) {	this.fire({	sessionEnd: p	})	}, this),	connect: m(function(p) {	this.fire({	connect: p	})	}, this),	disconnect: m(function(p) {	this.fire({	disconnect: p	})	}, this),	error: m(function(p) {	this.fire({	error: p	})	}, this),	userPublish: m(function(p) {	this.fire({	userPublish: p	})	}, this),	userUnpublish: m(function(p) {	this.fire({	userUnpublish: p	})	}, this)	});	this.bind({	sessionStart: o(n.attribute("onSessionStart")),	sessionEnd: o(n.attribute("onSessionEnd")),	connect: o(n.attribute("onConnect")),	disconnect: o(n.attribute("onDisconnect")),	error: o(n.attribute("onError"))	});	if (!this.template) {	if (this.role == "moderator") {	var i = ' <div class="xrtml-videochat-container">';	i += '        <h2 data-bind="text: role"></h2>';	i += '        <div data-bind="visible: owner.isConnected()">';	i += "            <h3>My camera</h3>";	i += '            <div class="xrtml-videochat-owner" data-bind="ownerBinding: owner.isConnected()"></div>';	i += "            <h3>Participants</h3>";	i += '            <div class="xrtml-videochat-users" data-bind="foreach: users">';	i += '                <div class="xrtml-videochat-user" data-bind="usersBinding: $data"></div> ';	i += "            </div>";	i += "        </div>";	i += '        <div class="xrtml-videochat-controls">';	i += '            <input type="button" value="Start Session" id ="startsession-moderator" data-bind="click: startSession, visible: !hasSession()" />';	i += '            <input type="button" value="End Session" id ="endsession-moderator" data-bind="click: endSession, visible: hasSession()" />';	i += '            <input type="button" value="Connect" id ="connect-moderator" data-bind="click: connect, visible: hasSession() && !owner.isConnected()" />';	i += '            <input type="button" value="Disconnect" id ="disconnect-moderator" data-bind="click: disconnect, visible: hasSession() && owner.isConnected()" />';	i += "        </div>";	i += "    </div>";	this.template = "xrtml-videochat-template-moderator"	} else {	var i = ' <div id="xrtml-videochat-container" class="xrtml-videochat-container">';	i += '        <h2 data-bind="text: role"></h2>';	i += '        <div data-bind="visible: owner.isConnected()">';	i += "            <h3>My camera</h3>";	i += '            <div class="xrtml-videochat-owner" data-bind="ownerBinding: owner.isConnected()"> Your camera </div>';	i += "            <h3>Participants</h3>";	i += '            <div class="xrtml-videochat-users" data-bind="foreach: users">';	i += '                <div class="xrtml-videochat-user" data-bind="usersBinding: $data"></div> ';	i += "            </div>";	i += "        </div>";	i += '        <div iclass="xrtml-videochat-controls">';	i += '            <input type="button" value="Connect" id ="connect-publisher" data-bind="click: connect, visible: !owner.isConnected()" />';	i += '            <input type="button" value="Disconnect" id ="disconnect-publisher" data-bind="click: disconnect, visible: owner.isConnected()" />';	i += "        </div>";	i += "    </div>";	this.template = "xrtml-videochat-template-publisher"	}	b.Templating.inject({	id: this.template,	content: i	})	}	b.Templating.applyBindings({	node: this.target[0],	binding: {	template: {	name: this.template,	data: this.model	}	}	});	g = this;	if (typeof j != "undefined" && n.name == "Videochat") {	if (l) {	j(this)	} else {	this.model.bind({	ready: function() {	j(g)	}	})	}	}	}	} 	}) })(window.xRTML = window.xRTML || {}); (function(a) { 	(function(c, b) {	c[xRTML.version] ? xRTML = c[xRTML.version] : c[xRTML.version] = xRTML;	c.current = c.current || xRTML.version;	xRTML = c[c.current] 	})(a.xRTMLVersions = a.xRTMLVersions || {}) })(window);
